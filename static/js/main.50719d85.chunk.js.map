{"version":3,"sources":["Components/ConfirmDialog/index.js","Components/RadioGroup/index.js","Components/HorusChart/Item/Variable/index.js","Components/HorusChart/Item/index.js","Components/HorusChart/index.js","Components/Drawer/index.js","Components/FullScreenDialog/index.js","Components/ColorPicker/index.js","Pages/NewData/Groupers/index.js","Pages/NewData/Skus/RadioGropupGroupers/index.js","Pages/NewData/Skus/index.js","Components/RelatableBoxes/Draggable/index.js","Components/RelatableBoxes/StartBox/index.js","Components/RelatableBoxes/EndBox/DeleteNode/index.js","Components/RelatableBoxes/EndBox/index.js","Components/ScreenShot/index.js","Components/RelatableBoxes/index.js","Pages/NewData/index.js","Pages/Categories/index.js","Components/CustomCursor/horus.svg","Components/CustomCursor/index.js","Hooks/useMousePosition.js","App.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","Button","onClick","children","Dialog","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","color","onOk","autoFocus","RadioButtonsGroup","items","onChange","name","value","FormControl","component","FormLabel","Fragment","RadioGroup","JSON","stringify","event","target","parse","map","data","index","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","variablesCircle","width","height","borderRadius","flex","marginBottom","border","popup","position","bottom","left","defaultVariable","Variable","style","classes","handleOpen","className","display","Card","CardContent","Grid","container","alignItems","spacing","item","xs","fullWidth","backgroundColor","onMouseEnter","onMouseLeave","padding","overflow","zIndex","groupersContainer","variablesContainer","top","right","variablesContainerBottom","borderColor","description","opacity","paddingLeft","paddingTop","fontSize","Item","variant","groupers","vars","grouper","textTransform","postition","maker","presentation","fontWeight","content","unit","marginRight","getVariantContent","box","chartRow","flexDirection","justifyContent","HorusChart","categories","subcategories","skus","settings","setSettings","useEffect","newSettings","i","length","j","category","push","from","split","join","to","positions","start","side","indent","end","subcategory","getItem","type","variables","list","fullList","root","appBar","input","iconButton","button","close","cursor","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","Fab","size","fullScreen","TransitionComponent","edge","colorSquare","colorContainer","colorPicker","ColorPicker","onChangeComplete","background","state","setState","visible","setVisible","anchorEl","setAnchorEl","callback","wrapperRef","useRef","handleChangeComplete","hex","handleVisible","e","currentTarget","handleClickOutside","current","contains","document","addEventListener","removeEventListener","Typography","Menu","disableAlpha","initialValue","formControl","minWidth","selectEmpty","modal","transform","p","randomColor","Math","floor","random","toString","Step2","pushGrouper","updateGroupers","removeGrouper","setGrouper","editGrouper","setEditGrouper","openEditGrouper","setOpenEditGrouper","handleInputGrouper","handleRemoveGrouper","align","TextField","required","multiline","disabled","Modal","Paper","Stack","aux","slice","checkboxContainer","pushSku","updateSkus","removeSku","sku","setSku","openEditSku","setOpenEditSku","editSku","setEditSku","handleInputSku","handleRemoveSku","replace","marginTop","InputLabel","Select","MenuItem","cpy","dragabbleNode","TransitionEvent","boxShadow","Draggable2","fixed","onStop","nodeRef","x","y","conf","setConf","getTranslateValues","translate","result","parseInt","error","console","handle","defaultPosition","scale","onStart","onDrag","visibility","startNode","boxSizing","transition","startNodeContainer","detail","startPoint","StartBox","focus","setFocus","borderWidth","dataContainer","Draggable","endNodePoint","nodeContainer","DeleteNode","related","relations","onEnterItem","onLeaveItem","onDelete","Boolean","Tooltip","placement","anchorOrigin","horizontal","vertical","MenuListProps","handleDelete","endNode","magnet","grouperCircle","EndBox","onEnter","onExit","onEnterDelete","onExitDelete","hover","setHover","circularButon","margin","alert","capture","ScreenShot","onCapture","createRef","useScreenshot","image","takeScreenShot","loaded","setLoaded","src","alt","onLoad","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","downloadBase64File","paddingBottom","col","RelatableBoxes","dataFrom","dataTo","onUpdate","draggablesNodes","setDraggablesNodes","flag","enter","setEnter","newArray","newData","toData","fromData","handleUpdate","handleEnter","handleExit","handleStop","isRelated","changeLineColorFrom","newClass","getRelations","response","aux2","newDraggables","hanldeDelete","WrapperDiv","styled","div","getid","initialValues","pos","actionsContainer","resetContainer","NewData","onFinish","activeStep","setActiveStep","step","subStep","setSubStep","setSubcategory","editSubcategory","setEditSubcategory","openEditSubcategory","setOpenEditSubcategory","steps","handleInputChangeCategory","handleInputChangeSubcategories","pushSubcategory","splice","getSubcategories","handleRemoveSubcategory","getClasses","lineClasses","stroke","Stepper","orientation","Step","StepLabel","StepContent","LinearProgress","Breadcrumbs","separator","Groupers","Skus","getStepContent","base","sorted","sortSkus","sortSubcategories","Categories","setCategories","waiting","setWaiting","Divider","light","filter","CustomCursor","mousePosition","setMousePosition","mouseMoveHandler","clientX","clientY","useMousePosition","logo","createTheme","palette","primary","main","secondary","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50719d85.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if(props.onOk){\r\n            props.onOk();\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <Button onClick={handleClickOpen}>\r\n            {props.children}\r\n        </Button>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\" autoFocus>\r\n                    Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value=null}) {\r\n    //const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={data.name} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    variablesCircle: {\r\n        width: '1.5em',\r\n        height: '.5em',\r\n        borderRadius: '5px',\r\n        flex: '0 0 auto',\r\n        marginBottom: '.25em',\r\n        border: '1px solid #fff'\r\n    },\r\n    popup: {\r\n        position: 'absolute',\r\n        bottom: '1.5em',\r\n        left: '0',\r\n        width: '10em'\r\n    }\r\n}));\r\n\r\nconst defaultVariable = {\r\n    name: 'testing name',\r\n    //variables: [{name:'test 1', color: 'blue'}, {name: 'test 2', color: 'red'}]\r\n}\r\n\r\nconst Variable = ({color, data = defaultVariable, style, position='top'}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = (value) => {\r\n        setOpen(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{...style, position:'relative'}}>\r\n            <div className={classes.popup} style={{display: open?'flex':'none'/*, bottom: position==='top'?'-2em':'0'*/}}>\r\n                <Card style={{width: '100%'}}>\r\n                    <CardContent>\r\n                        <Grid container alignItems='center' spacing={3}>\r\n                            <Grid item xs={12} fullWidth>\r\n                                {data.name}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <div \r\n                className={classes.variablesCircle} \r\n                style={{backgroundColor:color}}\r\n                onMouseEnter={()=>handleOpen(true)}\r\n                onMouseLeave={()=>handleOpen(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variable;","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Variable from './Variable';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    container: {\r\n        width: '15em',\r\n        //height: '5em',\r\n        position: 'relative',\r\n        marginBottom: '2em',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        overflow: 'hidden',\r\n        zIndex: 1,\r\n        //border: '1px solid #E6EBF1'\r\n    },\r\n    groupersContainer: {\r\n        display: 'flex',\r\n        position: 'absolute'\r\n    },\r\n    variablesContainer: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '-2em'\r\n    },\r\n    variablesContainerBottom: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        bottom: '-.25em',\r\n    },\r\n    borderColor: {\r\n        backgroundColor: props => props.color,\r\n        height: '110%',\r\n        width: '.5em',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    description: {\r\n        opacity: '.5',\r\n        padding: '.5em',\r\n        paddingLeft: 0,\r\n        paddingTop: '.25em',\r\n        fontSize: '.75em'\r\n    }\r\n}));\r\n\r\nconst Item = ({id, style, title='', variant='', groupers=[], vars=[], data=null}) => {\r\n\r\n    const classes = useStyles({color:data.grouper?data.grouper.color:''});\r\n\r\n    const getVariantContent = () => {\r\n        switch(variant){\r\n            case 'sku':\r\n                return (\r\n                    <>\r\n                        <div style={{postition: 'relative', width: '100%'}}>\r\n                            <div className={classes.borderColor}/>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.name}\r\n                                </div> / \r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.maker}\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: 'flex'}}>\r\n                                <span style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.presentation}\r\n                                </span> \r\n                                <span style={{fontWeight: '600'}}>\r\n                                    {data.content} {data.unit} / {data.presentation}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.variablesContainer}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'subcategory':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            default:\r\n                return (<React.Fragment/>);     \r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div id={id} className={classes.container} style={{...style}}>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <span style={{textTransform:'uppercase'}}>\r\n                        {title}\r\n                    </span>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop:'0'}}>\r\n                    {getVariantContent()}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport ReactBezier from \"react-bezier\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Item from './Item';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    box: {\r\n        width: '5em',\r\n        height: '5em',\r\n        backgroundColor: 'red'\r\n    },\r\n    chartRow: {\r\n        width: '30vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around'\r\n    }\r\n}));\r\n\r\n/*\r\n    {\r\n        from: \"cube-1\",\r\n        to: \"cube-2\",\r\n        positions: {\r\n            start: {\r\n                side: \"bottom\",\r\n                indent: 20\r\n            },\r\n            end: {\r\n                side: \"top\",\r\n            },\r\n        },\r\n        style: \"red-line\",\r\n  }\r\n*/\r\n\r\nconst HorusChart = ({categories=[], subcategories=[], skus=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [settings, setSettings] = React.useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(categories)\r\n        let newSettings = [];\r\n        for(let i=0;i<categories.length;i++){\r\n            for(let j=0;j<subcategories.length;j++){\r\n                if(`${categories[i].id}`===`${subcategories[j].category.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"category-\"+(`${categories[i].id}`.split('.').join(\"\")),\r\n                            to: \"subcategory-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"white-line\",\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        //console.log(newSettings)\r\n        ////console.log('sub',subcategories)\r\n        ////console.log('skus',skus)\r\n        for(let i=0;i<subcategories.length;i++){\r\n            for(let j=0;j<skus.length;j++){\r\n                if(`${subcategories[i].id}`===`${skus[j].subcategory.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"subcategory-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                            to: \"sku-\"+(`${skus[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"white-line\",\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        ////console.log(newSettings)\r\n        setSettings(newSettings);\r\n    },[categories, subcategories, skus])\r\n\r\n    const getItem = (data, type) => {\r\n        ////console.log(data.groupers)\r\n        return (\r\n            <Item \r\n                id={`${type}-${data.id}`}\r\n                //id={'cube-'+data.id}\r\n                className={classes.box}\r\n                title={data.name}\r\n                variant={type}\r\n                vars={data.variables}\r\n                groupers={data.groupers}\r\n                data={data}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: '5em'}}>\r\n            <ReactBezier settings={settings}>\r\n                <div style={{display:'flex'}}>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            categories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'category')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            subcategories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'subcategory')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            skus.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'sku')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ReactBezier>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorusChart;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer({children=null}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  /*const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );*/\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{'buscar'}</Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {children}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport HorusChart from '../HorusChart';\r\nimport Drawer from '../Drawer';\r\n\r\nimport Fab from '@mui/material/Fab';  \r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport sampleData from '../../SampleData/chart.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    //marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    //marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    position: props=>props.position,\r\n    bottom: '1em',\r\n    right: '1em',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '0em',\r\n    top: '1em',\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst datalist = [\r\n  {\r\n    title:'Marcas',\r\n    items: [\r\n      {color:'#eeefaf', name:'primer agrupador'},{color:'#e74c3c', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}\r\n    ]\r\n  }\r\n]\r\n\r\nexport default function FullScreenDialog({skus, categories, subcategories, position='fixed'}) {\r\n  const classes = useStyles({position});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  ////console.log(sampleData)\r\n\r\n  return (\r\n    <div>\r\n        <div className={classes.button}>\r\n          <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={handleClickOpen}>\r\n            <OpenWithIcon />\r\n          </Fab>\r\n        </div>\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} className={classes.root}>\r\n            <div style={{backgroundColor: '#1F1C36', width: '200%', height: '100vh', position: 'fixed'}}/>\r\n            <div style={{backgroundColor: '#1F1C36', height: '100vh'}}>\r\n              <div className={classes.close} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <HighlightOffIcon />\r\n              </div>\r\n              <div>\r\n                {/*<Drawer>\r\n                  <div style={{padding: '1em'}}>\r\n                    <span>\r\n                      <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Buscar\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                      </IconButton>\r\n                      <Divider />\r\n                    </span>\r\n                    {\r\n                      datalist.map((data, index)=>\r\n                        <span key={index}>\r\n                          <Typography variant='subtitle1'>\r\n                            {data.title}\r\n                          </Typography>\r\n                          <List style={{width:'15em'}}>\r\n                            {data.items.map((item, i) => (\r\n                              <ListItem button key={i}>\r\n                                {\r\n                                  //<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                }\r\n                                <ListItemIcon style={{minWidth:'2.5em'}}><div style={{width:'1.5em', height:'1.5em', borderRadius:'50%', backgroundColor:item.color}}/></ListItemIcon>\r\n                                <ListItemText primary={item.name} />\r\n                              </ListItem>\r\n                            ))}\r\n                          </List>\r\n                          <Divider />\r\n                        </span>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </Drawer>*/}\r\n                {\r\n                 // //console.log(skus,'skus')\r\n                }\r\n                <HorusChart\r\n                  categories={[...categories]}\r\n                  subcategories={[...subcategories]}\r\n                  skus={[...skus]}\r\n                />\r\n              </div>\r\n            </div>\r\n        </Dialog>\r\n        {/*<Divider />*/}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        width: 'inherit'\r\n    },\r\n    colorPicker: {\r\n        position: 'absolute',\r\n        width: 'max-content',\r\n        zIndex: '10'\r\n    }\r\n});\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst ColorPicker = ({ onChangeComplete, value='#ffffff', name='' }) => {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({background:'#ffffff'});\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n    useEffect(() => {\r\n        setState({background:value});\r\n    },[value])\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const handleChangeComplete = (color) => {\r\n        if(onChangeComplete)\r\n            onChangeComplete({target: { name, value: color.hex}});\r\n        setState({ background: color.hex });\r\n    };\r\n\r\n    const handleVisible = (e) => {\r\n        setVisible(!visible);\r\n        setAnchorEl(e.currentTarget)\r\n    }\r\n    useOutsideAlerter(wrapperRef, handleVisible);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.colorContainer} onClick={handleVisible}>\r\n                <div className={classes.colorSquare} style={{backgroundColor:state.background}}/>\r\n                <Typography variant=\"subtitle1\">{state.background.split('#')[1]}</Typography>\r\n            </div>\r\n            {/*visible?\r\n                <div className={classes.colorPicker} ref={wrapperRef}>\r\n                    <SketchPicker\r\n                        color={ state.background }\r\n                        onChangeComplete={ handleChangeComplete }\r\n                        onChange={handleChangeComplete}\r\n                        disableAlpha\r\n                    />\r\n                </div>\r\n                :\r\n                <React.Fragment/>*/\r\n            }\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={anchorEl}\r\n                onClose={()=>{\r\n                    setAnchorEl(null);\r\n                }}\r\n            >\r\n                <SketchPicker\r\n                    color={ state.background }\r\n                    onChangeComplete={ handleChangeComplete }\r\n                    onChange={ handleChangeComplete }\r\n                    disableAlpha\r\n                />\r\n            </Menu>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport ColorPicker from '../../../Components/ColorPicker';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    maker:'',\r\n    color:'#ffffff',\r\n    //presentation :''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        //margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst Step2 = ({ groupers=[], pushGrouper, updateGroupers, removeGrouper }) => {\r\n    const classes = useStyles();\r\n    const [grouper, setGrouper] = React.useState({\r\n        ...initialValue,\r\n        color: randomColor(),\r\n    })\r\n\r\n    const [editGrouper, setEditGrouper] = React.useState({});\r\n    const [openEditGrouper, setOpenEditGrouper] = React.useState(false);\r\n\r\n    const getGroupers = () => {\r\n        return (\r\n            groupers.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.maker}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorContainer}>\r\n                            <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                            {/*<Typography variant=\"subtitle1\" align=\"left\">{data.color.split('#')[1]}</Typography>*/}\r\n                        </div>\r\n                    </Grid>\r\n                    {/*<Grid item xs={2}>\r\n                        <Typography align=\"left\">\r\n                            {data.presentation }\r\n                        </Typography>\r\n                    </Grid>*/}\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta marca?'\r\n                                onOk={()=>{handleRemoveGrouper(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor: 'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditGrouper(!openEditGrouper);\r\n                                setEditGrouper({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputGrouper = (e) => {\r\n        const {name, value} = e.target;\r\n        setGrouper({...grouper, [name]:value});\r\n    }\r\n\r\n    const handleSaveGrouper = () => {\r\n        if(pushGrouper){\r\n            pushGrouper(grouper);\r\n        }   \r\n        setGrouper({...initialValue, color: randomColor()})\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        if(removeGrouper)\r\n            removeGrouper(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align=\"left\"\r\n                    >\r\n                        Añade o elimina tus marcas\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align=\"left\"\r\n                        display=\"block\"\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marca</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Fabricante</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                </Grid>\r\n                {/*<Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Presentación</Typography>\r\n                </Grid>*/}\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getGroupers() }\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Marca\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        name='name'\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Fabricante\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='maker'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.maker}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ColorPicker \r\n                        onChangeComplete={handleInputGrouper}\r\n                        name='color'\r\n                        value={grouper.color}\r\n                    />\r\n                </Grid>\r\n                {/*<Grid item xs={2}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Presentación\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='presentation'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.presentation}\r\n                        required\r\n                    />\r\n                </Grid>*/}\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveGrouper}\r\n                            disabled={grouper.name==='' || grouper.maker===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Modal\r\n                open={openEditGrouper}\r\n                onClose={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar marca\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Marca\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, name:e.target.value})\r\n                                }}\r\n                                value={editGrouper.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Fabricante\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='maker'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, maker:e.target.value})\r\n                                }}\r\n                                value={editGrouper.maker}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <ColorPicker \r\n                                onChangeComplete={(e)=>{\r\n                                    //console.log(e)\r\n                                    setEditGrouper({...editGrouper, color:e.target.value})\r\n                                }}\r\n                                name='color'\r\n                                value={editGrouper.color}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, presentation:e.target.value})\r\n                                }}\r\n                                value={editGrouper.presentation}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = groupers.slice();\r\n                                        aux[editGrouper.index] = editGrouper;\r\n                                        if(updateGroupers){\r\n                                            //console.log(editGrouper)\r\n                                            updateGroupers(aux, editGrouper.index);\r\n                                        }\r\n                                        setOpenEditGrouper(!openEditGrouper)\r\n                                    }}\r\n                                    disabled={editGrouper.name==='' || editGrouper.maker==='' || editGrouper.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '.5em',\r\n        height: '1em',\r\n        borderRadius: '5px',\r\n        marginRight: '.25em',\r\n        border: '1px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value}) {\r\n    //const [value, setValue] = React.useState();\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        ////console.log(JSON.parse(event.target.value))\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n    //console.log(value)\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={<div style={{display: 'flex', alignItems: 'center'}}><div className={classes.colorSquare} style={{backgroundColor:data.color}}/>{data.name}</div>} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport RadioGroup from '../../../Components/RadioGroup';\r\nimport RadioGropupGroupers from './RadioGropupGroupers';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    content:'',\r\n    unit: null,\r\n    grouper:null,\r\n    subcategory:null,\r\n    presentation:''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n       // margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst Step2 = ({ groupers=[], pushSku, subcategories=[], skus=[], updateSkus, removeSku }) => {\r\n\r\n    const classes = useStyles();\r\n    const [sku, setSku] = React.useState({\r\n        ...initialValue\r\n    })\r\n\r\n    const [openEditSku, setOpenEditSku] = React.useState(false);\r\n    const [editSku, setEditSku] = React.useState({});\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log('useffect',groupers,skus)\r\n    },[skus])\r\n\r\n    const getSkus = () => {\r\n        return (\r\n            skus.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={3}>\r\n                        <Typography align='left'>\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.content} {data.unit} / {data.presentation}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {\r\n                            data.grouper?\r\n                                <div className={classes.colorContainer}>\r\n                                    <div className={classes.colorSquare} style={{backgroundColor:data.grouper.color}}/>\r\n                                    <Typography variant=\"subtitle1\" align=\"left\">{data.grouper.name}</Typography>\r\n                                </div>\r\n                            :\r\n                            <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.subcategory.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta categoria?'\r\n                                onOk={()=>{handleRemoveSku(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setEditSku({...data, index})\r\n                                setOpenEditSku(!openEditSku);\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputSku = (e) => {\r\n        const {name, value} = e.target;\r\n        ////console.log(value)\r\n        setSku({...sku, [name]:value});\r\n    }\r\n\r\n    const handleSaveSku = () => {\r\n        ////console.log(sku)\r\n        let cpy = JSON.stringify(sku);\r\n        if(pushSku){\r\n            pushSku(JSON.parse(cpy));\r\n        }   \r\n        setSku({...initialValue})\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        if(removeSku)\r\n            removeSku(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align='left'\r\n                    >\r\n                        Añade o elimina tus SKUS\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align='left'\r\n                        display='block'\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Contenido</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marcas</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Subcategoria</Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getSkus() }\r\n                <Grid item xs={3}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Nombre\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='name'\r\n                        onChange={handleInputSku}\r\n                        value={sku.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{display:'flex', flexDirection:'column'}}>\r\n                        <TextField \r\n                            id=\"\" \r\n                            label=\"Contenido\" \r\n                            variant=\"outlined\" \r\n                            fullWidth\r\n                            multiline\r\n                            name='content'\r\n                            //rows={2}\r\n                            onChange={(e)=>{handleInputSku({target:{name:e.target.name, value:e.target.value.replace(/[^0-9]/g, '')}})}}\r\n                            value={sku.content}\r\n                            required\r\n                        />\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                <Select\r\n                                    //value={age}\r\n                                    name={'unit'}\r\n                                    label=\"Unidad *\"\r\n                                    value={sku.unit}\r\n                                    onChange={handleInputSku}\r\n                                >\r\n                                    <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                    <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                    <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={handleInputSku}\r\n                                value={sku.presentation}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div style={{display:'flex'}}>\r\n                        <RadioGropupGroupers\r\n                            name = 'grouper'\r\n                            items = {[...groupers]}\r\n                            onChange={handleInputSku}\r\n                            value={sku.grouper}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} align='left'>\r\n                    <RadioGroup\r\n                        name = 'subcategory'\r\n                        items = {[...subcategories]}\r\n                        onChange={handleInputSku}\r\n                        value={sku.subcategory}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveSku}\r\n                            disabled={sku.name==='' || sku.content==='' || sku.grouper===null || sku.subcategory===null || sku.unit===null || sku.presentation===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={openEditSku}\r\n                onClose={()=>{setOpenEditSku(!openEditSku)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar Sku\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Nombre\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, name:e.target.value})\r\n                                }}\r\n                                value={editSku.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <div style={{display:'flex', flexDirection:'column'}}>\r\n                                <TextField \r\n                                    id=\"\" \r\n                                    label=\"Contenido\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    multiline\r\n                                    name='content'\r\n                                    //rows={2}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value.replace(/[^0-9]/g, '')})\r\n                                    }}\r\n                                    value={editSku.content}\r\n                                    required\r\n                                />\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                        <Select\r\n                                            //value={age}\r\n                                            name={'unit'}\r\n                                            label=\"Unidad *\"\r\n                                            value={editSku.unit}\r\n                                            onChange={(e)=>{\r\n                                                setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                            <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                            <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField \r\n                                        id=\"\"\r\n                                        label=\"Presentación\" \r\n                                        variant=\"outlined\" \r\n                                        fullWidth\r\n                                        multiline\r\n                                        name='presentation'\r\n                                        //rows={2}\r\n                                        onChange={handleInputSku}\r\n                                        value={editSku.presentation}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <div style={{display:'flex'}}>\r\n                                <RadioGropupGroupers\r\n                                    name = 'grouper'\r\n                                    items = {[...groupers]}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                    }}\r\n                                    value={editSku.grouper}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <RadioGroup\r\n                                name = 'subcategory'\r\n                                items = {[...subcategories]}\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                }}\r\n                                value={editSku.subcategory}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = skus.slice();\r\n                                        aux[editSku.index] = editSku;\r\n                                        if(updateSkus){\r\n                                            //console.log(editGrouper)\r\n                                            updateSkus(aux, editSku.index);\r\n                                        }\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                    disabled={editSku.name==='' || editSku.content==='' || editSku.grouper===null || editSku.subcategory===null || editSku.unit===null || editSku.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    dragabbleNode: {\r\n        width: '.75em',\r\n        height: '.75em',\r\n        cursor: 'move',\r\n        backgroundColor: props=>props.color,\r\n        borderRadius: '50%',\r\n        border: '2px solid #E6EBF1',//verde principal\r\n        TransitionEvent: 'all 1.5s ease',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        left: '-.5em',\r\n        \"&:hover\": {\r\n            boxShadow: '0px 0px 10px 0px rgba(43,153,130,1)',\r\n            backgroundColor: '#2B9982',\r\n        }\r\n    },\r\n}));\r\n\r\nconst Draggable2 = ({data, position=null, fixed=false, onStop, color='#fff'}) => {\r\n\r\n    const classes = useStyles({color: color});\r\n    const nodeRef = React.useRef(null);\r\n    const [conf, setConf] = React.useState({\r\n        position:{\r\n            x:0,\r\n            y:0,\r\n        }, \r\n        fixed: false\r\n    })\r\n\r\n    React.useEffect(()=>{\r\n        if(position)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: position.x,\r\n                    y: position.y\r\n                },\r\n                fixed: true\r\n            })\r\n    },[position])\r\n\r\n    const eventLogger = (e) => {\r\n        ////console.log('Data: ', e);\r\n    };\r\n\r\n    const getTranslateValues = (translate) => {\r\n        let result = translate.split('translate(')[1].split(')')[0].split(', ');\r\n        try {\r\n            return {x: parseInt(result[0].split('px')[0]), y :parseInt(result[1].split('px')[0])};\r\n        } catch (error) {\r\n            console.error(result)\r\n            console.error(error)\r\n            return {x:0, y:0}\r\n        }\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        ////console.log(getTranslateValues(nodeRef.current.style.transform));\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                ...getTranslateValues(nodeRef.current.style.transform)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStart = (e) => {\r\n        /*//console.log( e)\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                x: 0,\r\n                y: 10\r\n            }\r\n        })*/\r\n    }\r\n    \r\n    const handleEnd = (e) => {\r\n        /*//console.log( e)*/\r\n        if(onStop){\r\n            onStop(data)\r\n        }\r\n        if(!fixed)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            //axis=\"x\"\r\n            handle=\".handle\"\r\n            defaultPosition={{x: 0, y: 0}}\r\n            position={conf.position}\r\n            //grid={[25, 25]}\r\n            scale={1}\r\n            onStart={eventLogger}\r\n            onDrag={handleDrag}\r\n            onStop={handleEnd}\r\n        >\r\n            <div className={classes.dragabbleNode} id={'end-'+data.id} ref={nodeRef}>\r\n                <div className=\"handle\">\r\n                    <span style={{visibility: 'hidden', width: 0, height: 0}}>.</span>\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n    );\r\n  \r\n}\r\n\r\nexport default Draggable2;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Draggable from '../Draggable';\r\n\r\nconst maingreen = '#2B9982';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    startNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        transition: 'all .5s',\r\n        backgroundColor: '#fff',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        //backgroundColor: '#fff'\r\n    },\r\n    startNodeContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginBottom: '.5em',\r\n        transition: 'all .5s'\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0'\r\n    },    \r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    },\r\n    startPoint: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '25%'\r\n    }\r\n}));\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    React.useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst StartBox = ({id, data, onStop}) => {\r\n\r\n    const wrapperRef = React.useRef(null);\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [focus, setFocus] = React.useState(false);\r\n\r\n    const hanldeFocus = () => {\r\n        setFocus(true);\r\n    }\r\n\r\n    const handleFocusOut = () => {\r\n        setFocus(false);\r\n    }\r\n\r\n    useOutsideAlerter(wrapperRef, handleFocusOut);\r\n//console.log(data)\r\n    return (\r\n        <div className={classes.startNodeContainer} ref={wrapperRef}>\r\n            <div \r\n                className={classes.startNode} \r\n                 \r\n                onClick={hanldeFocus}\r\n                style={{borderWidth: focus?'2px':'1px'}}\r\n            >\r\n                <div id={'startBox-'+id} className={classes.startPoint}/>\r\n                <div id={'start-'+id} className={classes.startPoint}/>\r\n                <div className={classes.borderColor}/>\r\n                <div className={classes.title}>\r\n                    {data.name}\r\n                </div>\r\n                <div className={classes.dataContainer}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Draggable \r\n                data={data} \r\n                onStop={onStop}\r\n                color={data.grouper.color}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartBox;","import React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNodePoint: {\r\n        position: 'absolute',\r\n        width: '.75em',\r\n        height: '.75em',\r\n        border: '2px solid #E6EBF1',\r\n        backgroundColor: '#aaa',\r\n        borderRadius: '50%',\r\n        left: '-.75em',\r\n        top: 'calc(50% - .25em)',\r\n        zIndex: '1',\r\n        \"&:hover\": {\r\n            backgroundColor: '#C72C1C',\r\n            borderColor: '#C72C1C'\r\n        }\r\n    },\r\n    nodeContainer: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - .15em)',\r\n        left: '.25em',\r\n    }\r\n}));\r\n\r\nconst DeleteNode = ({ onMouseEnter, onMouseLeave, related, relations, onEnterItem, onLeaveItem, onDelete, color='#fff' }) => {\r\n\r\n    const classes = useStyles({color: color});\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = (data) => {\r\n        if(onDelete)\r\n            onDelete(data)\r\n        handleClose();\r\n    }\r\n\r\n    ////console.log('relations',relations)\r\n    return (\r\n        <div className={classes.nodeContainer}>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <div \r\n                    className={classes.endNodePoint} \r\n                    style={{display:related?'block':'none'}} \r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    onClick={handleClick}\r\n                />\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {\r\n                    relations.map((data, index)=>{\r\n                        ////console.log(data)\r\n                        return (\r\n                            <MenuItem \r\n                                key={index} \r\n                                onClick={()=>handleDelete(data)}\r\n                            >\r\n                                <spam\r\n                                    onMouseEnter={()=>{\r\n                                        onEnterItem(data)\r\n                                    }}\r\n                                    onMouseLeave={()=>{\r\n                                        onLeaveItem(data)\r\n                                    }}\r\n                                >\r\n                                    {data.from.name}\r\n                                </spam>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteNode;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteNode from './DeleteNode';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        marginBottom: '.5em',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        //backgroundColor: '#F0F0F0',\r\n        \"&:hover\": {\r\n            borderWidth: '2px'\r\n        },\r\n    },\r\n    magnet: {\r\n        position: 'absolute',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: '10em',\r\n        right: '0',\r\n        top: '0',\r\n        zIndex: '1',\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '0'\r\n    },\r\n    grouperCircle: {\r\n        width: '1em',\r\n        height: '1em',\r\n        backgroundColor: props => props.color,\r\n        borderRadius: '50%',\r\n        marginRight: '.5em',\r\n    },\r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    }\r\n}));\r\n\r\nconst EndBox = ({data, id, onEnter, onExit, related=false, onEnterDelete, onExitDelete, relations=[], onEnterItem, onLeaveItem, onDelete}) => {\r\n\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    const handleEnter = () => {\r\n        setHover(true);\r\n        if(onEnter)\r\n            onEnter(data);\r\n    }\r\n\r\n    const handleExit = () => {\r\n        setHover(false);\r\n        if(onExit)\r\n            onExit(data);\r\n    }\r\n\r\n    const handleEnterDelete = () => {\r\n        if(onEnterDelete)\r\n            onEnterDelete(data);\r\n    }\r\n\r\n    const handleExitDelete = () => {\r\n        if(onExitDelete)\r\n            onExitDelete(data);\r\n    }\r\n\r\n    return (\r\n        <div id={'endBox-'+id}>\r\n            <DeleteNode \r\n                related={related}\r\n                onMouseEnter={handleEnterDelete}\r\n                onMouseLeave={handleExitDelete}\r\n                relations={relations}\r\n                onEnterItem={onEnterItem}\r\n                onLeaveItem={onLeaveItem}\r\n                onDelete={(data)=>onDelete(data)}\r\n                className={classes.container}\r\n                color={data.grouper.color}\r\n            />\r\n            <div \r\n                className={classes.endNode}\r\n                style={{backgroundColor: hover?'rgba(0,0,0,.05)':'#fff', borderWidth: hover?'2px':'1px'}}\r\n            >\r\n                \r\n            <div \r\n                className={classes.magnet} \r\n                onMouseEnter={handleEnter}\r\n                onMouseLeave={handleExit}\r\n            />\r\n                <div className={classes.borderColor}/>\r\n                <div className={classes.title}>\r\n                    {data.name}\r\n                </div>\r\n                <div className={classes.dataContainer}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndBox;","import React from 'react';\r\nimport { useScreenshot } from \"use-react-screenshot\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nimport Alert from '../Alert';\r\n\r\n/*import copy from './copy.svg';\r\nimport save from './save.svg';*/\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    circularButon: {\r\n        margin: '.5em',\r\n        marginRight: '0',\r\n        padding: '1em',\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '50%',\r\n        //border: '1px solid #000',\r\n        transition: 'all .25s',\r\n        backgroundColor: 'transparent',\r\n        cursor: 'pointer',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ecf0f1',\r\n            borderColor: '#95a5a6'\r\n        }\r\n    },\r\n    alert: {\r\n        position:'fixed',\r\n        bottom: '1em',\r\n        right: '1em',\r\n    },\r\n    container: {\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n    },\r\n    capture: {\r\n        position: 'absolute',\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        left: 0,\r\n        top: 0, \r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: '100'\r\n    }\r\n}));\r\n\r\nconst ScreenShot = ({children, onCapture}) => {\r\n    const classes = useStyles();\r\n\r\n    const ref = React.createRef(null);\r\n    const [image, takeScreenShot] = useScreenshot();\r\n    const [loaded, setLoaded] = React.useState(true);\r\n    //const [alert, setAlert] = React.useState(false);\r\n    //const [shutter, setShutter] = React.useState(false);\r\n    const getImage = () => {\r\n        ////console.log(ref2.current.getContext('2d'))\r\n        takeScreenShot(ref.current);\r\n        //setAlert(true);\r\n        //setShutter(true);\r\n        // if(onCapture)\r\n        //     onCapture(image);\r\n        // setTimeout(()=>{\r\n        //     setAlert(false);\r\n        // },3000)\r\n        // setTimeout(()=>{\r\n        //     setShutter(false);\r\n        // }, 100)\r\n    };\r\n\r\n    function downloadBase64File( base64Data, fileName) {\r\n        const linkSource = `${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        takeScreenShot(ref.current);\r\n        setLoaded(true);\r\n        //downloadBase64File(, image, 'ScreenShot');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className={classes.container}>\r\n                {/*<div className={classes.capture} style={{display: shutter?'block':'none'}}></div>\r\n                <canvas ref={ref2} style={{width: '100%', height: '100vh', background: 'red', position: 'absolute'}}></canvas>*/}\r\n                {children}\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                {/*<img src={image} alt='' style={{width: '100%'}}/>\r\n                <div className={classes.circularButon}>\r\n                    <img src={copy} style={{width:'100%'}} alt='copy' />\r\n                </div>\r\n                <div onClick={()=>{}} className={classes.circularButon}>\r\n                    <img src={save} style={{width:'100%'}} alt='save' />\r\n                </div>\r\n                */}\r\n                <Fab size=\"small\" onClick={getImage} color=\"primary\" aria-label=\"clean\">\r\n                    <ContentCopyIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\">\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" onClick={handleDownload} color=\"primary\" aria-label=\"clean\">\r\n                    <DownloadIcon />\r\n                </Fab>\r\n                {/*<div className={classes.alert}>\r\n                    <Alert\r\n                        type={'success'}\r\n                        open={alert}\r\n                        text='Copiado'\r\n                    />\r\n                </div>*/}\r\n                {\r\n                    loaded &&\r\n                    <img \r\n                        src={image} \r\n                        alt='' \r\n                        onLoad={()=>{\r\n                            ////console.log(image)\r\n                            downloadBase64File(image,'screenshot.png');\r\n                            setLoaded(false);\r\n                            if(onCapture)\r\n                                onCapture(image);\r\n                        }} \r\n                        style={{width: '0em', height: '0em'}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenShot;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport StartBox from './StartBox';\r\nimport EndBox from './EndBox';\r\nimport ReactBezier from \"react-bezier\";\r\nimport ScreenShot from '../ScreenShot';\r\n\r\n//import ContextMenu from '../ContextMenu';\r\nimport Fab from '@mui/material/Fab';\r\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    col: {\r\n        width: '30%',\r\n        /*padding: '1em',\r\n        width: '30%',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n        transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '4px',\r\n        margin: '.25em',*/\r\n        //overflow: 'hidden',\r\n    },\r\n    startNode: {\r\n        border: '1px solid #2B9982',\r\n        borderRadius: '.5em',\r\n        padding: '.5em 1.5em'\r\n    },\r\n    title: {\r\n        backgroundColor: '#2B9982',\r\n        top: '-1em',\r\n        left: '-1em',\r\n        position: 'relative',\r\n        width: 'calc( 100% + 1.5em)',\r\n        padding: '.25em',\r\n        color: '#fff',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n\r\n    '@global': {\r\n        \r\n    }\r\n\r\n});\r\n\r\nconst RelatableBoxes = ({dataFrom, dataTo, onUpdate, relations=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [draggablesNodes, setDraggablesNodes] = React.useState([]);\r\n    const [settings, setSettings] = React.useState([]);\r\n    const [enter, setEnter] = React.useState({data:null, flag:false});\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(()=>{\r\n        let newArray = [];\r\n        for(let i=0;i<relations.length;i++){\r\n            let newData = {\r\n                from: \"startBox-\"+relations[i].from.id,\r\n                to: \"endBox-\"+relations[i].to.id,\r\n                toData: relations[i].to,\r\n                fromData: relations[i].from,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            newArray.push(newData);\r\n        }\r\n        //console.log([...settings, ...newArray])\r\n        setDraggablesNodes([...newArray]);\r\n        setSettings([...settings, ...newArray]);\r\n        //console.log([...settings, ...newArray],relations);\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(dataFrom,dataTo)\r\n        ////console.log(groupers)\r\n        ////console.log(classes)\r\n        let newSettings = [];\r\n        //let newDraggablesNodes = [];\r\n        \r\n        for(let i=0;i<dataFrom.length;i++){\r\n            newSettings.push(\r\n                {\r\n                    from: \"start-\"+dataFrom[i].id,\r\n                    to: \"end-\"+dataFrom[i].id,\r\n                    toData: dataFrom[i],\r\n                    fromData: dataFrom[i],\r\n                    positions: {\r\n                        start: {\r\n                            side: \"right\",\r\n                            indent: 20\r\n                        },\r\n                        end: {\r\n                            side: \"left\",\r\n                        },\r\n                    },\r\n                    style: `relationship-line-selected`,\r\n              }\r\n            )\r\n        }\r\n        //console.log(newSettings)\r\n        // if(settings.length===0){\r\n        //     for(let i=0;i<relations.length;i++){\r\n        //         let newData = {\r\n        //             from: \"startBox-\"+relations[i].from.id,\r\n        //             to: \"endBox-\"+relations[i].to.id,\r\n        //             toData: relations[i].to,\r\n        //             fromData: relations[i].from,\r\n        //             positions: {\r\n        //                 start: {\r\n        //                     side: \"right\",\r\n        //                     indent: 20\r\n        //                 },\r\n        //                 end: {\r\n        //                     side: \"left\",\r\n        //                 },\r\n        //             },\r\n        //             style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n        //         }\r\n        //         newSettings.push(newData);\r\n        //     }\r\n        // }\r\n        //console.log(settings)\r\n        setSettings([...newSettings, ...draggablesNodes]);\r\n        if(settings.length!==0){\r\n            //console.log('updating')\r\n            handleUpdate([...newSettings, ...draggablesNodes]);\r\n        }\r\n        //console.log([...newSettings, ...draggablesNodes])\r\n        //console.log([...newSettings, ...draggablesNodes], relations, 'draggableNodes')\r\n    },[draggablesNodes]);\r\n\r\n    const handleUpdate = (data) => {\r\n        let aux = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].style!=='relationship-line-selected'){\r\n                aux.push({from:data[i].fromData, to:data[i].toData})\r\n            }\r\n        }\r\n        //console.log(aux)\r\n        if(onUpdate)\r\n            onUpdate(aux);\r\n    }\r\n\r\n    const handleEnter = (data) => {\r\n        setEnter({data, flag: true});\r\n    }\r\n\r\n    const handleExit = (data) => {\r\n        setEnter({data:null, flag:false});\r\n    }\r\n\r\n    const handleStop = (data) => {\r\n        ////console.log(data, enter)\r\n        let aux = draggablesNodes.slice();\r\n        let newData;\r\n        \r\n        // for(let i=0;i<aux.length;i++){\r\n        //     try {\r\n        //         if(aux[i].toData.id===enter.data.id && aux[i].fromData.id)\r\n        //             //console.log('from')\r\n        //     } catch (error) {\r\n        //     }\r\n        // }\r\n        \r\n        if(enter.flag){\r\n            newData = {\r\n                from: \"startBox-\"+data.id,\r\n                to: \"endBox-\"+enter.data.id,\r\n                toData: enter.data,\r\n                fromData: data,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${data.grouper.name}-${data.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            aux.push(newData);\r\n            ////console.log('newData')\r\n            setDraggablesNodes(aux);\r\n        }\r\n    }\r\n\r\n    const isRelated = (id) => {\r\n        //console.log(id)\r\n        for(let i=0;i<draggablesNodes.length;i++){\r\n            if(`${draggablesNodes[i].toData.id}`===`${id}`)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const changeLineColor = (data, newClass) => {\r\n        ////console.log(id)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].toData.id===data.id)\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                };\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const changeLineColorFrom = (from, to, newClass) => {\r\n        ////console.log('from',from)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            // if(newSettings[i].style!=='relationship-line-selected'){\r\n            //     newSettings[i] = {\r\n            //         ...newSettings[i],\r\n            //         style: defaultStyleClass,\r\n            //     };\r\n            //     //continue;\r\n            // }\r\n            if(newSettings[i].fromData.id===from.id && newSettings[i].toData.id===to.id){\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                }; \r\n                //continue;\r\n            }\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const getRelations = (id) => {\r\n        let data = settings.slice();\r\n        let newData = [];\r\n        let response = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].toData.id===id && (data[i].style!=='relationship-line-selected'))\r\n                newData.push({from:data[i].fromData, to:data[i].toData});\r\n        }\r\n        \r\n        for(let i=0;i<newData.length;i++){\r\n            let flag = false;\r\n            for(let j=0;j<response.length;j++){\r\n                if(newData[i].from.id===response[j].from.id){\r\n                    flag = true;\r\n                }\r\n            }\r\n            if(!flag){\r\n                response.push(newData[i]);\r\n            }\r\n        }\r\n        ////console.log('data', data, id, newData)\r\n        return response;\r\n    }\r\n\r\n    const hanldeDelete = (data) => {\r\n        ////console.log(data)\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(!(newSettings[i].fromData.id===data.from.id && newSettings[i].toData.id===data.to.id)){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n\r\n        let aux2 = [];\r\n        let newDraggables = draggablesNodes.slice();\r\n        for(let i=0;i<newDraggables.length;i++){\r\n            ////console.log(newDraggables);\r\n            if(!(newDraggables[i].fromData.id===data.from.id && newDraggables[i].toData.id===data.to.id)){\r\n                aux2.push(newDraggables[i])\r\n            }\r\n        }\r\n        \r\n\r\n        setDraggablesNodes([...aux2]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    const cleanNodes = () => {\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].style==='relationship-line'){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n        \r\n        setDraggablesNodes([]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ScreenShot>\r\n                <div ref={ref}>\r\n                    {/*<ContextMenu\r\n                        ref={ref}\r\n                    />*/}\r\n                    {\r\n                       ////console.log(groupers,'groupers')\r\n                    }\r\n                    <ReactBezier settings={settings}>\r\n                        {/*<CustonCursor/>*/}\r\n                        <div className={classes.container}>\r\n                            <div className={classes.col} style={{marginRight:'30%'}}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                </div>*/}\r\n                                {\r\n                                    dataFrom.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <StartBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onStop={handleStop}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={classes.col}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                            </div>*/}\r\n                                {\r\n                                    dataTo.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index} style={{position: 'relative'}}>\r\n                                                <EndBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onEnter={handleEnter}\r\n                                                    onExit={handleExit}\r\n                                                    related={isRelated(data.id)}\r\n\r\n                                                    onEnterDelete={()=>{/*changeLineColor(data, 'relationship-line-delete')*/}}\r\n                                                    onExitDelete={()=>{/*changeLineColor(data, 'relationship-line')*/}}//cambia el color a lines que llegan a un nodo final\r\n\r\n                                                    relations={getRelations(data.id)}\r\n\r\n                                                    onEnterItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line-delete')}\r\n                                                    onLeaveItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line '+`stroke-color-${data.from.grouper.name}-${data.from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"))}//cambia el color de la linea\r\n\r\n                                                    onDelete={(data)=>hanldeDelete(data)}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </ReactBezier>\r\n                </div>\r\n            </ScreenShot>\r\n            <div style={{display: 'flex'}}>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={cleanNodes}>\r\n                    <CleaningServicesIcon/>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RelatableBoxes;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Card from '@mui/material/Card';\r\n//import CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../Components/ConfirmDialog';\r\nimport RadioGroup from '../../Components/RadioGroup';\r\nimport FullScreenDialog from '../../Components/FullScreenDialog';\r\n\r\nimport Groupers from './Groupers';\r\nimport Skus from './Skus';\r\n\r\n//temporal\r\nimport RelatableBoxes from '../../Components/RelatableBoxes';\r\nimport styled from 'styled-components';\r\nimport Divider from '@mui/material/Divider';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst getid = () => {\r\n    return `${(Math.random() * (1000 - 1) + 1)}`.split('.').join(\"\");\r\n}\r\n\r\nconst initialValues = {\r\n    category: {\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n        id:getid()\r\n    },\r\n    subcategories: [],\r\n    groupers: [],\r\n    skus:[],\r\n    relations:[],\r\n}\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title:'SKU '+ {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        //marginTop: theme.spacing(1),\r\n        //marginRight: theme.spacing(1), \r\n    },\r\n    actionsContainer: {\r\n        //marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        //padding: theme.spacing(3),\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n    return ['Carga tus categorias y subcategorias', 'Carga tus marcas y SKU', 'Relaciona tus SKUs con los de la competencia'];\r\n}\r\n\r\nconst NewData = ({onUpdate, onFinish}) => {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const [state, setState] = React.useState({\r\n        ...initialValues\r\n    });\r\n\r\n    const [subStep, setSubStep] = React.useState({\r\n        step: 0\r\n    })\r\n\r\n    const [category, setCategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n    });\r\n    \r\n    const [subcategory, setSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n    });\r\n\r\n    const [editSubcategory, setEditSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n    });\r\n\r\n    const [openEditSubcategory, setOpenEditSubcategory] = React.useState(false);\r\n    \r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleInputChangeCategory = (e) => {\r\n        const {name, value} = e.target;\r\n        setState({...state, category: {...state.category, [name]:value}});\r\n    }\r\n\r\n    const pushCategory = () => {\r\n        let data = category;\r\n        setState({\r\n            ...state,\r\n            categories:[...state.categories, {...data, id:state.categories.length}],\r\n        });\r\n        setCategory({name:'',description:''});\r\n    }\r\n\r\n    const handleInputChangeSubcategories = (e) => {\r\n        const {name, value} = e.target;\r\n        setSubcategory({...subcategory, [name]:value});\r\n    }\r\n\r\n    const pushSubcategory = () => {\r\n        let data = subcategory;\r\n        setState({\r\n            ...state,\r\n            subcategories:[...state.subcategories, {...data, id:getid(), category: state.category}],\r\n        });\r\n        setSubcategory({name:'',description:'', category:''});\r\n    }\r\n\r\n    const handleRemoveSubcategory = (index) => {\r\n        let subcategories = state.subcategories.slice();\r\n        subcategories.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            subcategories:[...subcategories],\r\n        });\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        let groupers = state.groupers.slice();\r\n        groupers.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            groupers:[...groupers],\r\n        });\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        let skus = state.skus.slice();\r\n        skus.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            skus:[...skus],\r\n        });\r\n    }\r\n\r\n    const getSubcategories = () => {\r\n        return (\r\n            state.subcategories.map((data, index) => \r\n                <React.Fragment key={index}>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography align=\"left\">\r\n                            {data.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta subcategoria?'\r\n                                title='Esta seguro de eliminar esta subcategoria?'\r\n                                onOk={()=>{handleRemoveSubcategory(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditSubcategory(!openEditSubcategory);\r\n                                setEditSubcategory({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const pushGrouper = (data) => {\r\n        setState({\r\n            ...state,\r\n            groupers:[...state.groupers, {...data, id: getid()}],\r\n        });\r\n    }\r\n\r\n    const pushSku = (data) => {\r\n        setState({\r\n            ...state,\r\n            skus:[...state.skus, {...data, id:getid()}],\r\n        });\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const getClasses = () => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<state.groupers.length;i++){\r\n            lineClasses = {...lineClasses, ['.'+(`stroke-color-${state.groupers[i].name}-${state.groupers[i].id}`.replace(/\\s/g, '_').split('.').join(\"\"))]:{stroke:`${state.groupers[i].color} !important`}};\r\n        }\r\n        ////console.log(JSON.stringify(lineClasses))\r\n        return lineClasses;\r\n    }\r\n\r\n    const handleUpdate = (data) => {\r\n        setState({...state, relations: data})\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div>\r\n                        {   subStep.step===0?\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"primary\">\r\n                                                Categoria\r\n                                            </Typography>\r\n                                            <Typography color=\"inherit\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade los datos de la categoria\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.description}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >  \r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            disabled\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={\r\n                                                ()=>{\r\n                                                    setSubStep({step:1}); \r\n                                                    if(subStep.step===1){\r\n                                                        setActiveStep(1); \r\n                                                        setSubStep({step:0})\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            disabled={state.category.name===''}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"inherit\">\r\n                                                Categorias\r\n                                            </Typography>\r\n                                            <Typography color=\"primary\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade o elimina subcategorias para <span style={{textTransform:'capitalize'}}>{state.category.name}</span>\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    { getSubcategories() }\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.description}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                                            {/*<DeleteIcon/>*/}\r\n                                            <Button\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={pushSubcategory}\r\n                                                disabled={subcategory.name===''}\r\n                                            >\r\n                                                Guardar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1){setActiveStep(1); setSubStep({step:0})}}}\r\n                                            disabled={state.subcategories.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                                <Modal\r\n                                    open={openEditSubcategory}\r\n                                    onClose={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                >\r\n                                    <Paper \r\n                                        className={classes.modal}\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    variant='h6'\r\n                                                    align=\"left\"\r\n                                                >\r\n                                                    Editar subcategoria\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    label=\"Nombre\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    name='name'\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, name:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.name}\r\n                                                    required\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Descripcion\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='description'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, description:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.description}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Stack spacing={2} direction=\"row\">\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='secondary'\r\n                                                        onClick={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                                    >\r\n                                                        Cancelar\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='primary'\r\n                                                        onClick={()=>{\r\n                                                            let aux = state.subcategories.slice();\r\n                                                            aux[editSubcategory.index] = editSubcategory;\r\n                                                            setState({...state, subcategories: aux});\r\n                                                            setOpenEditSubcategory(!openEditSubcategory)\r\n                                                        }}\r\n                                                        disabled={editSubcategory.name===''}\r\n                                                    >\r\n                                                        Actualizar\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Modal>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                <Typography color={subStep.step===0?\"primary\":\"inherit\"}>\r\n                                    Marcas\r\n                                </Typography>\r\n                                <Typography  color={subStep.step===1?\"primary\":\"inherit\"}>\r\n                                    SKUs\r\n                                </Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                        {subStep.step===0?\r\n                            <>\r\n                                <Groupers\r\n                                    groupers={state.groupers} \r\n                                    pushGrouper={pushGrouper}\r\n                                    updateGroupers={(data)=>{\r\n                                        //console.log('upating groupers', data)\r\n                                        setState({...state, groupers:data});\r\n                                    }}\r\n                                    removeGrouper={handleRemoveGrouper}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setActiveStep(0); setSubStep({step:1})}}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.groupers.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Skus\r\n                                    groupers={state.groupers} \r\n                                    subcategories={state.subcategories}\r\n                                    //groupers={[{color:'#eeefaf', name:'primer agrupador'},{color:'#25fafa', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}]}\r\n                                    //subcategories={[{name:'primero'},{name:'2'},{name:'uno con texto largo'},{name:'uno mas'}]}\r\n                                    pushSku={pushSku}\r\n                                    skus={state.skus}\r\n                                    updateSkus={(data)=>{\r\n                                        setState({...state, skus: data})\r\n                                    }}\r\n                                    removeSku={handleRemoveSku}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.skus.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </React.Fragment>\r\n                );\r\n            case 2:\r\n            return(\r\n                <>\r\n                    <Grid container alignItems='center' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align='left'\r\n                            >\r\n                                Relaciona tus SKU con los de los competidores\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='caption'\r\n                                align='left'\r\n                                display='block'\r\n                                color='#aaa'\r\n                            >\r\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <RelatableBoxes\r\n                                dataFrom = {[...state.skus]}\r\n                                dataTo = {[...state.skus]}\r\n                                lineClasses={getClasses()}\r\n                                onUpdate={handleUpdate}\r\n                                relations={state.relations}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{setActiveStep(1)}}\r\n                                disabled={subStep.step===0}\r\n                            >\r\n                                Volver\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setActiveStep(3)\r\n                                    onUpdate(state);\r\n                                    onFinish();\r\n                                }}\r\n                            >\r\n                                Guardar categoria\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            );\r\n            // case 3:\r\n            //     return (\r\n            //         <>\r\n            //             <Grid container alignItems='center' spacing={3}>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Typography\r\n            //                         variant='h6'\r\n            //                         align='left'\r\n            //                     >\r\n            //                         Categoria {state.category.name} creada con exito\r\n            //                     </Typography>\r\n            //                 </Grid>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Paper \r\n            //                         variant=\"outlined\"\r\n            //                         style={{padding:'1em'}}\r\n            //                     >\r\n            //                         <div>\r\n                                        \r\n            //                         <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n            //                             <Grid item xs={12}>\r\n            //                                 <Typography \r\n            //                                     variant='subtitle1'\r\n            //                                     align='left'\r\n            //                                     style={{textTransform:'capitalize'}}\r\n            //                                 >\r\n            //                                     {state.category.name}\r\n            //                                 </Typography>\r\n            //                                 <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                     {state.category.description}\r\n            //                                 </Typography>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         Marcas\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.groupers.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                                         <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>{data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         SKUs\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.skus.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left'>\r\n            //                                                         {data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                         </Grid>\r\n            //                         </div>\r\n            //                     </Paper>\r\n            //                 </Grid>\r\n            //             </Grid>\r\n            //             <div\r\n            //                 style={{\r\n            //                     marginTop: '1em'\r\n            //                 }}\r\n            //             >\r\n            //                 <Stack spacing={2} direction=\"row\">\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         onClick={()=>{}}\r\n            //                     >\r\n            //                         Agregar otra categoria\r\n            //                     </Button>\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         color='primary'\r\n            //                         onClick={()=>{\r\n            //                             if(onFinish){\r\n            //                                 onFinish();\r\n            //                             }\r\n            //                         }}\r\n            //                     >\r\n            //                         Finalizar\r\n            //                     </Button>\r\n            //                 </Stack>\r\n            //             </div>\r\n            //         </>\r\n            //     );\r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv classes={getClasses()}>\r\n            <Grid container alignItems='flex-start' spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <div className={classes.root}>\r\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                            {steps.map((label, index) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                                <StepContent>\r\n                                    <div className={classes.actionsContainer}>\r\n                                        <div>\r\n                                            {\r\n                                            // <Button\r\n                                            //     disabled={activeStep === 0}\r\n                                            //     onClick={handleBack}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     Back\r\n                                            // </Button>\r\n                                            // <Button\r\n                                            //     variant=\"contained\"\r\n                                            //     color=\"primary\"\r\n                                            //     onClick={handleNext}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                            // </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </StepContent>\r\n                            </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        {\r\n                            // activeStep === steps.length && (\r\n                            // <Paper square elevation={0} className={classes.resetContainer}>\r\n                            //     <Typography>All steps completed - you&apos;re finished</Typography>\r\n                            //     <Button onClick={handleReset} className={classes.button}>\r\n                            //         Reset\r\n                            //     </Button>\r\n                            // </Paper>\r\n                            // )\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n                            <Grid container alignItems='center' spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <LinearProgress variant=\"determinate\" value={activeStep*33.333} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div>\r\n                                        {\r\n                                            getStepContent(activeStep)\r\n                                        }\r\n                                        {\r\n                                            ////console.log(state.groupers,'groupers')\r\n                                        }\r\n                                        {\r\n                                            activeStep<3?\r\n                                                <FullScreenDialog\r\n                                                    skus={sortSkus( state.subcategories, state.skus)}\r\n                                                    categories={[state.category]}\r\n                                                    subcategories={sortSubcategories( [state.category], state.subcategories)}\r\n                                                />\r\n                                            :\r\n                                                <></>\r\n                                        }\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        {/*<CardActions>\r\n                            <Button variant='contained'>Learn More</Button>\r\n                        </CardActions>*/}\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default NewData;","import React from 'react';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport NewData from '../NewData';\r\nimport FullScreenDialog from '../../Components/FullScreenDialog';\r\n\r\nconst Categories = () => {\r\n\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [waiting, setWaiting] = React.useState(false);\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {waiting?\r\n                <>\r\n                    {\r\n                    categories.map((state, index)=>{\r\n                        return (\r\n                        <div key={index} style={{marginBottom:'1em'}}>\r\n                            <Grid container alignItems='center' spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Paper \r\n                                        variant=\"outlined\"\r\n                                        style={{padding:'1em'}}\r\n                                    >\r\n                                        <div>\r\n                                            \r\n                                        <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n                                            <Grid item xs={8}>\r\n                                                <Typography \r\n                                                    variant='subtitle1'\r\n                                                    align='left'\r\n                                                    style={{textTransform:'capitalize'}}\r\n                                                >\r\n                                                    {state.category.name}\r\n                                                </Typography>\r\n                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                    {state.category.description}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <FullScreenDialog\r\n                                                    skus={sortSkus( state.subcategories, state.skus)}\r\n                                                    categories={[state.category]}\r\n                                                    subcategories={sortSubcategories( [state.category], state.subcategories)}\r\n                                                    position='relative'\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={6} style={{display: 'flex'}}>\r\n                                                <Paper \r\n                                                    variant=\"outlined\"\r\n                                                    style={{padding:'1em', width: '100%'}}\r\n                                                >\r\n                                                    <Typography \r\n                                                        variant='subtitle2'\r\n                                                        align='left'\r\n                                                        style={{textTransform:'capitalize'}}\r\n                                                    >\r\n                                                        Marcas\r\n                                                    </Typography>\r\n                                                    <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                    <div>\r\n                                                        {\r\n                                                            state.groupers.map((data, index)=>{\r\n                                                                return (\r\n                                                                    <Typography key={index} variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                        <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>{data.name}\r\n                                                                    </Typography>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                            <Grid item xs={6} style={{display: 'flex'}}>\r\n                                                <Paper \r\n                                                    variant=\"outlined\"\r\n                                                    style={{padding:'1em', width: '100%'}}\r\n                                                >\r\n                                                    <Typography \r\n                                                        variant='subtitle2'\r\n                                                        align='left'\r\n                                                        style={{textTransform:'capitalize'}}\r\n                                                    >\r\n                                                        SKUs\r\n                                                    </Typography>\r\n                                                    <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                    <div>\r\n                                                        {\r\n                                                            state.skus.map((data, index)=>{\r\n                                                                return (\r\n                                                                    <Typography key={index} variant='body2' align='left'>\r\n                                                                        {data.name}\r\n                                                                    </Typography>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        </div>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                        );\r\n                    })\r\n                    }\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{\r\n                                    setWaiting(false);\r\n                                }}\r\n                            >\r\n                                Agregar otra categoria\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                \r\n                                }}\r\n                            >\r\n                                Finalizar\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            :\r\n                <NewData\r\n                    onUpdate={(data)=>{\r\n                        setCategories([...categories, data])\r\n                    }}\r\n                    onFinish={()=>{\r\n                        setWaiting(true);\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories;","export default __webpack_public_path__ + \"static/media/horus.a67137fc.svg\";","import React from 'react';\r\nimport useMousePosition from '../../Hooks/useMousePosition';\r\nimport { makeStyles } from '@mui/styles';\r\nimport logo from './horus.svg';\r\nimport { display } from '@mui/system';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    cursor: {\r\n        position: 'fixed',\r\n        width: '2em',\r\n        height: '2em',\r\n        //backgroundColor:'red',\r\n        zIndex: '1000000',\r\n        //cursor: 'none'\r\n        //backgroundColor: 'red',\r\n        display: 'flex',\r\n        filter: 'brightness(0)'\r\n    },\r\n}));\r\n\r\nconst CustomCursor = () => {\r\n    const classes = useStyles();\r\n    const { x, y } = useMousePosition();\r\n\r\n    return (\r\n        <div\r\n            style={{ left: `calc(${x}px + .5em)`, top: `calc(${y}px + 1.25em)` }}\r\n            className={classes.cursor}\r\n        >\r\n            <img style={{width:'100%'}} src={logo}/>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default CustomCursor;","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useMousePosition() {\r\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event) => {\r\n      const { clientX, clientY } = event;\r\n      setMousePosition({ x: clientX, y: clientY });\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n    };\r\n  }, []);\r\n\r\n  return mousePosition;\r\n}\r\n","import React from 'react';\r\nimport Categories from './Pages/Categories';\r\nimport CustomCursor from './Components/CustomCursor';\r\nimport './App.css';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2B9982',\r\n    },\r\n    secondary: {\r\n      main: '#eee'\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <ThemeProvider theme={theme}>\r\n        <CustomCursor/>\r\n        <Categories/>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}