{"version":3,"sources":["Components/CustomCursor/horus.svg","Components/CustomCursor/index.js","Hooks/useMousePosition.js","Containers/Header/index.js","Components/ConfirmDialog/index.js","Components/CheckboxGroup/index.js","Components/HorusChart/Item/Variable/index.js","Components/HorusChart/Item/index.js","Components/HorusChart/index.js","Components/Modal/index.js","Components/FullScreenDialog/index.js","Components/ColorPicker/index.js","Pages/NewData/Groupers/index.js","Components/RadioGroup/index.js","Pages/NewData/Skus/RadioGropupGroupers/index.js","Pages/NewData/Skus/index.js","Components/CustomDatePicker/index.js","Components/SpreadSheetVariables/index.js","Pages/NewData/Variables/index.js","Components/RelatableBoxes/Draggable/index.js","Components/RelatableBoxes/StartBox/index.js","Components/RelatableBoxes/EndBox/DeleteNode/index.js","Components/RelatableBoxes/EndBox/index.js","Components/ScreenShot/index.js","Components/RelatableBoxes/index.js","Components/Tabs/index.js","Pages/NewData/index.js","Pages/Categories/Category/index.js","Pages/Categories/index.js","Components/Chart/index.js","Components/Plot/index.js","Pages/Dashboard/index.js","Components/Table/index.js","Assets/Img/chart-illustration.jpg","Pages/Simulator/index.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","cursor","position","width","height","zIndex","display","filter","CustomCursor","classes","useState","x","y","mousePosition","setMousePosition","useEffect","mouseMoveHandler","event","clientX","clientY","document","addEventListener","removeEventListener","useMousePosition","style","left","top","className","src","logo","HeaderContainer","styled","backgroundColor","palette","bg","main","padding","boxSizing","Header","AlertDialog","props","React","open","setOpen","handleClose","Button","onClick","children","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","color","onOk","autoFocus","colorSquare","borderRadius","marginRight","border","flex","checkboxContainer","alignItems","CheckboxGroup","items","onChange","name","value","itemList","setItemList","handleChange","index","aux","JSON","parse","stringify","slice","checked","target","flag","i","length","map","data","FormGroup","row","onchange","Fragment","FormControlLabel","control","Checkbox","label","variablesCircle","marginBottom","popup","bottom","defaultVariable","Variable","handleOpen","Card","CardContent","Grid","container","spacing","item","xs","fullWidth","onMouseEnter","onMouseLeave","overflow","groupersContainer","variablesContainer","right","variablesContainerBottom","borderColor","description","opacity","paddingLeft","paddingTop","fontSize","Item","variant","groupers","vars","grouper","img","Avatar","alt","sx","bgcolor","toUpperCase","charAt","textTransform","postition","maker","presentation","fontWeight","content","unit","getVariantContent","WrapperDiv","div","box","chartRow","flexDirection","justifyContent","HorusChart","categories","subcategories","skus","brands","settings","setSettings","newSettings","j","category","push","from","split","join","to","positions","start","side","indent","end","b","joinBrands","brand","oldId","subcategory","getItem","type","variables","k","getBrands","newBrands","lineClasses","stroke","strokeWidth","getClasses","transform","boxShadow","p","maxHeight","visible","Modal","Paper","root","appBar","input","iconButton","button","close","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","filters","setVisible","apply","conf","setFilter","d","handleClickOpen","Fab","size","aria-label","fullScreen","TransitionComponent","edge","Typography","Divider","e","Stack","primary","newSkus","getSkus","colorContainer","colorPicker","ColorPicker","onChangeComplete","background","state","setState","anchorEl","setAnchorEl","callback","wrapperRef","useRef","handleChangeComplete","hex","handleVisible","currentTarget","handleClickOutside","current","contains","Menu","disableAlpha","initialValue","formControl","minWidth","selectEmpty","modal","randomColor","Math","floor","random","toString","Step2","pushGrouper","updateGroupers","removeGrouper","setGrouper","editGrouper","setEditGrouper","openEditGrouper","setOpenEditGrouper","handleInputGrouper","handleRemoveGrouper","align","TextField","required","multiline","disabled","RadioButtonsGroup","FormControl","component","FormLabel","RadioGroup","Radio","pushSku","updateSkus","removeSku","onFilter","sku","setSku","openEditSku","setOpenEditSku","editSku","setEditSku","filterData","handleInputSku","handleRemoveSku","InputLabel","Select","MenuItem","replace","marginTop","cpy","DatePickerContainer","periodicity","Date","date","setDate","findWeek","day","getDay","diff","getDate","sunday","getTime","monday","findBianual","startDate","endDate","getMonth","getFullYear","onFocus","getYear","selected","inline","maxDate","onClickOutside","showMonthYearPicker","peekNextMonth","showYearDropdown","dropdownMode","showQuarterYearPicker","showYearPicker","dateFormat","getContent","setData","Array","keys","reverse","Variables","openModal","setOpenModal","level","CustomDatePicker","light","getLevels","SpreadSheetVariables","dragabbleNode","TransitionEvent","Draggable2","fixed","onStop","nodeRef","setConf","getTranslateValues","translate","result","parseInt","error","console","handle","defaultPosition","scale","onStart","onDrag","visibility","startNode","transition","startNodeContainer","detail","startPoint","StartBox","focus","setFocus","borderWidth","dataContainer","Draggable","endNodePoint","nodeContainer","DeleteNode","related","relations","onEnterItem","onLeaveItem","onDelete","Boolean","Tooltip","placement","anchorOrigin","horizontal","vertical","MenuListProps","handleDelete","endNode","magnet","grouperCircle","EndBox","onEnter","onExit","onEnterDelete","onExitDelete","hover","setHover","circularButon","margin","alert","capture","ScreenShot","onCapture","createRef","useScreenshot","image","takeScreenShot","loaded","setLoaded","onLoad","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","downloadBase64File","paddingBottom","col","RelatableBoxes","dataFrom","dataTo","onUpdate","draggablesNodes","setDraggablesNodes","enter","setEnter","newArray","newData","toData","fromData","handleUpdate","handleEnter","handleExit","handleStop","isRelated","changeLineColorFrom","newClass","getRelations","response","aux2","newDraggables","hanldeDelete","TabPanel","other","role","hidden","Box","BasicTabs","tabs","setValue","borderBottom","Tabs","newValue","Tab","a11yProps","getid","initialValues","pos","actionsContainer","resetContainer","NewData","onFinish","activeStep","setActiveStep","step","subStep","setSubStep","totalSale","totalSaleValue","totalSaleUnit","setSubcategory","editSubcategory","setEditSubcategory","openEditSubcategory","setOpenEditSubcategory","tab","setTab","steps","handleInputChangeCategory","handleInputChangeSubcategories","pushSubcategory","splice","getSubcategories","handleRemoveSubcategory","skuFilter","Stepper","orientation","alternativeLabel","Step","StepLabel","StepContent","LinearProgress","Breadcrumbs","separator","auxSkus","Groupers","Skus","getStepContent","base","sorted","sortSkus","sortSubcategories","Category","handleClick","Collapse","in","timeout","unmountOnExit","Categories","setCategories","waiting","setWaiting","borderRight","borderTop","datasets","labels","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","points","xAxis","yAxis","functionPlot","fnType","graphType","annotations","GridPropertyLayout","WidthProvider","RGL","layout","this","generateLayout","_","range","data-grid","Plot","w","ceil","h","onLayoutChange","PureComponent","defaultProps","isDraggable","isResizable","rowHeight","cols","rows","heads","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","access_token","auth","setAuth","simulation","price","curve","loading","setLoading","update","setUpdate","option","setOption","findDomain","nums","min","max","fetch","method","then","json","token","cb","r","catch","log","truncateNumber","number","match","MenuList","textAlign","Chart","price_profit","price_quantity","price_value","url","table","profit","quantity","setTimeout","getCurve","optimals","user_point","domain","createTheme","secondary","App","ThemeProvider","path","element","Simulator","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3b6ce7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/horus.a67137fc.svg\";","import React from 'react';\r\nimport useMousePosition from '../../Hooks/useMousePosition';\r\nimport { makeStyles } from '@mui/styles';\r\nimport logo from './horus.svg';\r\nimport { display } from '@mui/system';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    cursor: {\r\n        position: 'fixed',\r\n        width: '2em',\r\n        height: '2em',\r\n        //backgroundColor:'red',\r\n        zIndex: '1000000',\r\n        //cursor: 'none'\r\n        //backgroundColor: 'red',\r\n        display: 'flex',\r\n        filter: 'brightness(0)'\r\n    },\r\n}));\r\n\r\nconst CustomCursor = () => {\r\n    const classes = useStyles();\r\n    const { x, y } = useMousePosition();\r\n\r\n    return (\r\n        <div\r\n            style={{ left: `calc(${x}px + .5em)`, top: `calc(${y}px + 1.25em)` }}\r\n            className={classes.cursor}\r\n        >\r\n            <img style={{width:'100%'}} src={logo}/>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default CustomCursor;","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useMousePosition() {\r\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event) => {\r\n      const { clientX, clientY } = event;\r\n      setMousePosition({ x: clientX, y: clientY });\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n    };\r\n  }, []);\r\n\r\n  return mousePosition;\r\n}\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst HeaderContainer = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.bg.main,\r\n    padding: '1em', \r\n    position: 'fixed',\r\n    width: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1000,\r\n    height:'4em',\r\n    boxSizing:'border-box'\r\n}));\r\n  \r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <>\r\n        <HeaderContainer>\r\n            -\r\n        </HeaderContainer>\r\n        <div style={{height:'4em'}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if(props.onOk){\r\n            props.onOk();\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <Button onClick={handleClickOpen}>\r\n            {props.children}\r\n        </Button>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\" autoFocus>\r\n                    Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function CheckboxGroup({items=[], title='', onChange, name, value=null}) {\r\n    const [itemList, setItemList] = React.useState([]);\r\n    const classes = useStyles();\r\n    const handleChange = (index) => {\r\n        let aux = JSON.parse(JSON.stringify(itemList.slice()));\r\n        aux[index].checked = !aux[index].checked;\r\n        setItemList(aux);\r\n        if(onChange)\r\n            onChange({target: {name, value:aux}})\r\n    };\r\n\r\n    React.useEffect(()=>{\r\n        //console.log(items)\r\n        let flag = false;\r\n        for(let i=0;i<items.length;i++){\r\n            if(items[i].checked)\r\n                flag = true;\r\n        }\r\n        setItemList(items); \r\n        if(!flag || value===null)\r\n            setItemList(items.map(data=>({ ...data, checked:false })));\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        if(value===null)\r\n            setItemList(items.map(data=>({ ...data, checked:false })));\r\n    },[value])\r\n\r\n    return (\r\n        <FormGroup row onChange={onchange}>\r\n            {itemList.map((data, index)=>\r\n                <div key={index} className={classes.checkboxContainer}>\r\n                    {data.color?\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                        :\r\n                        <React.Fragment/>\r\n                    }\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={data.checked}\r\n                                onChange={()=>handleChange(index)}\r\n                                name={ index }\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={data.name}\r\n                    />\r\n                </div>\r\n            )}\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    variablesCircle: {\r\n        width: '1.5em',\r\n        height: '.5em',\r\n        borderRadius: '5px',\r\n        flex: '0 0 auto',\r\n        marginBottom: '.25em',\r\n        border: '1px solid #fff'\r\n    },\r\n    popup: {\r\n        position: 'absolute',\r\n        bottom: '1.5em',\r\n        left: '0',\r\n        width: '10em'\r\n    }\r\n}));\r\n\r\nconst defaultVariable = {\r\n    name: 'testing name',\r\n    //variables: [{name:'test 1', color: 'blue'}, {name: 'test 2', color: 'red'}]\r\n}\r\n\r\nconst Variable = ({color, data = defaultVariable, style, position='top'}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = (value) => {\r\n        setOpen(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{...style, position:'relative'}}>\r\n            <div className={classes.popup} style={{display: open?'flex':'none'/*, bottom: position==='top'?'-2em':'0'*/}}>\r\n                <Card style={{width: '100%'}}>\r\n                    <CardContent>\r\n                        <Grid container alignItems='center' spacing={3}>\r\n                            <Grid item xs={12} fullWidth>\r\n                                {data.name}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <div \r\n                className={classes.variablesCircle} \r\n                style={{backgroundColor:color}}\r\n                onMouseEnter={()=>handleOpen(true)}\r\n                onMouseLeave={()=>handleOpen(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variable;","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport Variable from './Variable';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    container: {\r\n        //width: '15em',\r\n        //height: '5em',\r\n        position: 'relative',\r\n        marginBottom: '2em',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        overflow: 'hidden',\r\n        zIndex: 1,\r\n        display:'flex', \r\n        alignItems:'center'\r\n        //border: '1px solid #E6EBF1'\r\n    },\r\n    groupersContainer: {\r\n        display: 'flex',\r\n        position: 'absolute'\r\n    },\r\n    variablesContainer: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '-2em'\r\n    },\r\n    variablesContainerBottom: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        bottom: '-.25em',\r\n    },\r\n    borderColor: {\r\n        backgroundColor: props => props.color,\r\n        height: '110%',\r\n        width: '.5em',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    description: {\r\n        opacity: '.5',\r\n        padding: '.5em',\r\n        paddingLeft: 0,\r\n        paddingTop: '.25em',\r\n        fontSize: '.75em'\r\n    }\r\n}));\r\n\r\nconst Item = ({id, style, title='', variant='', groupers=[], vars=[], data=null}) => {\r\n\r\n    const classes = useStyles({color:data.grouper?data.grouper.color:''});\r\n\r\n    const getVariantContent = () => {\r\n        switch(variant){\r\n            case 'sku':\r\n                return (\r\n                    <>\r\n                        <div style={{postition: 'relative', width: '100%'}}>\r\n                            <div className={classes.borderColor}/>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.name}\r\n                                </div> / \r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.maker}\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: 'flex'}}>\r\n                                <span style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.presentation}\r\n                                </span> \r\n                                <span style={{fontWeight: '600'}}>\r\n                                    {data.content} {data.unit} / {data.presentation}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.variablesContainer}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'subcategory':\r\n                return (\r\n                    <>\r\n                        <div className={classes.borderColor} style={{backgroundColor:data.color}}/>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'grouper':\r\n                //console.log(data)\r\n                return (\r\n                    <>\r\n                        <div className={classes.borderColor} style={{backgroundColor:data.color}}/>\r\n                        <div style={{postition: 'relative', width: '100%'}}>\r\n                            <div className={classes.borderColor}/>\r\n                        </div>\r\n                        <div className={classes.description}>\r\n                            {data.maker}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            default:\r\n                return (<React.Fragment/>);     \r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div id={id} className={classes.container} style={{...style}}>\r\n            {variant==='sku'?                    \r\n            <span style={{marginRight:'1em'}}>\r\n                {\r\n                data.img?\r\n                        <Avatar\r\n                            alt=\"\"\r\n                            src={data.img}\r\n                            sx={{ width: 50, height: 50 }}\r\n                        />\r\n                :\r\n                    <Avatar\r\n                        sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                    >\r\n                        {data.name.toUpperCase().charAt(0)}\r\n                    </Avatar>\r\n                }\r\n            </span>\r\n            :\r\n            <></>}\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <span style={{textTransform:'uppercase'}}>\r\n                        {title}\r\n                    </span>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop:'0'}}>\r\n                    {getVariantContent()}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport ReactBezier from \"react-bezier\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport styled from 'styled-components';\r\n\r\nimport Item from './Item';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    box: {\r\n        width: '5em',\r\n        height: '5em',\r\n        backgroundColor: 'red'\r\n    },\r\n    chartRow: {\r\n        width: '25vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        marginRight: '5em'\r\n    }\r\n}));\r\n\r\n/*\r\n    {\r\n        from: \"cube-1\",\r\n        to: \"cube-2\",\r\n        positions: {\r\n            start: {\r\n                side: \"bottom\",\r\n                indent: 20\r\n            },\r\n            end: {\r\n                side: \"top\",\r\n            },\r\n        },\r\n        style: \"red-line\",\r\n  }\r\n*/\r\n\r\nconst HorusChart = ({categories=[], subcategories=[], skus=[], brands=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [settings, setSettings] = React.useState([]);\r\n\r\n    const getClasses = (data, b) => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<data.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                [\".subcategory-color-\"+(`${data[i].id}`.split('.').join(\"\"))]:{\r\n                    stroke:`${data[i].color}`,\r\n                    strokeWidth: '3px',\r\n                }\r\n            };\r\n        }\r\n        for(let i=0;i<b.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                [\".brand-color-\"+(`${b[i].id}`.split('.').join(\"\"))]:{\r\n                    stroke:`${b[i].color}`,\r\n                    strokeWidth: '3px',\r\n                }\r\n            };\r\n        }\r\n        //console.log(lineClasses)\r\n        return lineClasses;\r\n    }\r\n\r\n    const getBrands = () => {\r\n        let brands = [];\r\n        let flag;\r\n        for(let i=0;i<subcategories.length;i++){\r\n            brands[i] = [];\r\n            for(let j=0;j<skus.length;j++){\r\n                flag = true;\r\n                for(let k=0;k<brands[i].length;k++){\r\n                    if(brands[i][k].brand.id===(skus[j].grouper.id+'new'+i+subcategories[i]))\r\n                        flag=false;\r\n                }\r\n                if(skus[j].subcategory.id===subcategories[i].id && flag)\r\n                    brands[i].push({brand:{...skus[j].grouper, oldId: skus[j].grouper.id, id:skus[j].grouper.id+'new'+i+subcategories[i]}, subcategory: subcategories[i]})\r\n            }\r\n        }\r\n        //console.log(brands)\r\n        return brands;\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(categories)\r\n        let newSettings = [];\r\n        for(let i=0;i<categories.length;i++){\r\n            for(let j=0;j<subcategories.length;j++){\r\n                if(`${categories[i].id}`===`${subcategories[j].category.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"category-\"+(`${categories[i].id}`.split('.').join(\"\")),\r\n                            to: \"subcategory-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        //console.log(newSettings)\r\n        ////console.log('sub',subcategories)\r\n        ////console.log('skus',skus)\r\n        \r\n        // for(let i=0;i<subcategories.length;i++){\r\n        //     for(let j=0;j<skus.length;j++){\r\n        //         if(`${subcategories[i].id}`===`${skus[j].subcategory.id}`){\r\n        //             newSettings.push(\r\n        //                 {\r\n        //                     from: \"subcategory-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n        //                     to: \"sku-\"+(`${skus[j].id}`.split('.').join(\"\")),\r\n        //                     positions: {\r\n        //                         start: {\r\n        //                         side: \"right\",\r\n        //                         indent: 20\r\n        //                         },\r\n        //                         end: {\r\n        //                             side: \"left\",\r\n        //                         },\r\n        //                     },\r\n        //                     style: \"subcategory-color-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n        //                 }\r\n        //             )\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        let b = [];\r\n        b = joinBrands();\r\n\r\n        for(let i=0;i<b.length;i++){\r\n            for(let j=0;j<skus.length;j++){\r\n                //console.log(b[i],skus[j])\r\n                if(`${b[i].brand.oldId}`===`${skus[j].grouper.id}` && b[i].subcategory.id===`${skus[j].subcategory.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"grouper-\"+(`${b[i].brand.id}`.split('.').join(\"\")),\r\n                            to: \"sku-\"+(`${skus[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"brand-color-\"+(`${b[i].brand.oldId}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n        for(let i=0;i<b.length;i++){\r\n            //for(let j=0;j<skus.length;j++){\r\n                // if(b[i].brand.id===skus[j].grouper.id)\r\n                //     console.log(b[i],skus[j])\r\n                //if(b[i].brand.id===skus[j].grouper.id){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"subcategory-\"+(`${b[i].subcategory.id}`.split('.').join(\"\")),\r\n                            to: \"grouper-\"+(`${b[i].brand.id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${b[i].subcategory.id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                //}\r\n            //}\r\n        }\r\n\r\n\r\n\r\n\r\n        ////console.log(newSettings)\r\n        setSettings(newSettings);\r\n    },[categories, subcategories, skus])\r\n\r\n    const getItem = (data, type) => {\r\n        ////console.log(data.groupers)\r\n        return (\r\n            <Item \r\n                id={`${type}-${data.id}`}\r\n                //id={'cube-'+data.id}\r\n                className={classes.box}\r\n                title={data.name}\r\n                variant={type}\r\n                vars={data.variables}\r\n                groupers={data.groupers}\r\n                data={data}\r\n            />\r\n        )\r\n    }\r\n\r\n    const joinBrands = () => {\r\n        let b = getBrands();\r\n        let newBrands = [];\r\n        for(let i=0;i<b.length;i++){\r\n            newBrands = [...newBrands, ...b[i]];\r\n        }\r\n        //console.log(b)\r\n        return newBrands;\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv style={{padding: '5em'}} classes={getClasses(subcategories, brands)}>\r\n            <ReactBezier settings={settings}>\r\n                <div style={{display:'flex'}}>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            categories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'category')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            subcategories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'subcategory')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            joinBrands().map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data.brand, 'grouper')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            skus.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'sku')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ReactBezier>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default HorusChart;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    boxShadow: 24,\r\n    p: 4,\r\n    maxHeight: '80vh',\r\n    overflow:'auto'\r\n};\r\n\r\nexport default ({children, visible=true, onClose}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={visible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Paper sx={style}>\r\n          {\r\n              children\r\n          }\r\n        </Paper>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slide from '@mui/material/Slide';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport CheckboxGroup from '../CheckboxGroup';\r\n\r\nimport HorusChart from '../HorusChart';\r\n\r\nimport Fab from '@mui/material/Fab';  \r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport Modal from '../Modal';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    //marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    //marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    position: props=>props.position,\r\n    bottom: props=>props.position==='fixed'?'1em':'auto',\r\n    right: props=>props.position==='fixed'?'1em':'auto',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '0em',\r\n    top: '1em',\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst datalist = [\r\n  {\r\n    title:'Marcas',\r\n    items: [\r\n      {color:'#eeefaf', name:'primer agrupador'},{color:'#e74c3c', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}\r\n    ]\r\n  }\r\n]\r\n\r\nexport default function FullScreenDialog({skus, categories, subcategories, position='fixed', children, brands=[], filters}) {\r\n  const classes = useStyles({position});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [filter, setFilter] = React.useState(\r\n    {\r\n      skus:skus,\r\n      subcategories:subcategories,\r\n      groupers:null,\r\n      apply: false,\r\n      conf: {\r\n        skus:skus,\r\n        subcategories:subcategories,\r\n        groupers:null,\r\n      }\r\n    }\r\n  );\r\n\r\n  React.useEffect(()=>{\r\n    if(subcategories.length>0){\r\n      setFilter({...filter, subcategories, conf:{...filter.conf, subcategories:subcategories}})\r\n    }\r\n  },[subcategories])\r\n\r\n  React.useEffect(()=>{\r\n    //console.log('test')\r\n    //console.log('filter',{...filter, apply:true, subcategories, conf:{...filter.conf, subcategories:[...subcategories.map(d=>({...d, checked:filters.id===d.id?true:false}))]}})\r\n    //setFilter({...filter, apply:true, subcategories, conf:{...filter.conf, subcategories:[...subcategories.map(d=>({...d, checked:filters.id===d.id?true:false}))]}})\r\n    if(filters)\r\n      setFilter({...filter, apply:true, subcategories:[...subcategories.map(d=>({...d, checked:filters.id===d.id?true:false}))], conf:{...filter.conf, subcategories:[...subcategories.map(d=>({...d, checked:filters.id===d.id?true:false}))]}})\r\n  },[filters])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getSkus = () => {\r\n    //console.log(filter)\r\n    if(!filter.apply){\r\n      return skus;\r\n    }\r\n    let newSkus = [];\r\n    for(let j=0;j<filter.subcategories.length;j++){\r\n      for(let i=0;i<skus.length;i++){\r\n        //console.log(skus[i])\r\n        if(skus[i].subcategory.id===filter.subcategories[j].id && filter.subcategories[j].checked){\r\n          newSkus.push(skus[i])\r\n        }\r\n      }\r\n    }\r\n    return (newSkus);\r\n  }\r\n\r\n  const getSubcategories = () => {\r\n    if(!filter.apply){\r\n      return subcategories;\r\n    }\r\n    return filter.subcategories.filter(item=> item.checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className={classes.button}>\r\n          {children?\r\n            <div style={{width:'max-content'}} onClick={handleClickOpen}>\r\n              {children}\r\n            </div>\r\n            :\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={handleClickOpen}>\r\n              <OpenWithIcon />\r\n            </Fab>\r\n          }\r\n        </div>\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} className={classes.root}>\r\n            <div style={{backgroundColor: '#1F1C36', width: '200%', height: '100vh', position: 'fixed'}}/>\r\n            <div style={{backgroundColor: '#1F1C36', height: '100vh'}}>\r\n              <div className={classes.close} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <HighlightOffIcon />\r\n              </div>\r\n              <div>\r\n\r\n                {\r\n                  // <Drawer>\r\n                  //   <div style={{padding: '1em'}}>\r\n                  //     <span>\r\n                  //       <InputBase\r\n                  //         className={classes.input}\r\n                  //         placeholder=\"Buscar\"\r\n                  //         variant=\"outlined\"\r\n                  //       />\r\n                  //       <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                  //         <SearchIcon />\r\n                  //       </IconButton>\r\n                  //       <Divider />\r\n                  //     </span>\r\n                  //     {\r\n                  //       datalist.map((data, index)=>\r\n                  //         <span key={index}>\r\n                  //           <Typography variant='subtitle1'>\r\n                  //             {data.title}\r\n                  //           </Typography>\r\n                  //           <List style={{width:'15em'}}>\r\n                  //             {data.items.map((item, i) => (\r\n                  //               <ListItem button key={i}>\r\n                  //                 {\r\n                  //                   //<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                  //                 }\r\n                  //                 <ListItemIcon style={{minWidth:'2.5em'}}>\r\n                  //                   <div style={{width:'1.5em', height:'1.5em', borderRadius:'50%', backgroundColor:item.color}}/>\r\n                  //                 </ListItemIcon>\r\n                  //                 <ListItemText primary={item.name} />\r\n                  //               </ListItem>\r\n                  //             ))}\r\n                  //           </List>\r\n                  //           <Divider />\r\n                  //         </span>\r\n                  //       )\r\n                  //     }\r\n                  //   </div>\r\n                  // </Drawer>\r\n                }\r\n                {\r\n                  <Button onClick={()=>{setVisible(true)}}>\r\n                    <FilterAltIcon/>\r\n                  </Button>\r\n                }\r\n                {\r\n                  <Modal\r\n                    visible={visible}\r\n                    onClose={()=>{setVisible(false)}}\r\n                  >\r\n                    <div>\r\n\r\n                      <Typography variant='h5'>\r\n                        Filtros\r\n                      </Typography>\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Subcategorias\r\n                      </Typography>\r\n                      {\r\n                        //console.log(subcategories)\r\n                      }\r\n                      <CheckboxGroup\r\n                        items={filter.conf.subcategories}\r\n                        title='some'\r\n                        name='subcategories'\r\n                        onChange={(e)=>{\r\n                          //console.log(e.target.value)\r\n                          setFilter({...filter, conf:{...filter.conf, subcategories: e.target.value}})\r\n                        }}\r\n                      />\r\n                      \r\n                      {/*<Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Skus\r\n                      </Typography>\r\n                      <CheckboxGroup\r\n                        items={skus}\r\n                        title='some'\r\n                        name='skus'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, skus: e.target.value})\r\n                        }}\r\n                      />*/}\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Stack spacing={2} direction=\"row\">\r\n                        <Button \r\n                          primary \r\n                          variant='contained' \r\n                          onClick={()=>{\r\n                            //console.log({...filter, apply:true, subcategories: filter.conf.subcategories})\r\n                            setFilter({...filter, apply:true, subcategories: filter.conf.subcategories});\r\n                            setVisible(false);\r\n                          }}\r\n                        >\r\n                          Filtrar\r\n                        </Button>\r\n                        <Button \r\n                          primary \r\n                          variant='outlined'\r\n                          onClick={()=>{\r\n                            setFilter({...filter, apply:false})\r\n                          }}\r\n                        >\r\n                          Limpiar filtros\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                  </Modal>\r\n                }\r\n                <HorusChart\r\n                  categories={[...categories]}\r\n                  subcategories={getSubcategories()}\r\n                  skus={getSkus()}\r\n                  brands={brands}\r\n                />\r\n              </div>\r\n            </div>\r\n        </Dialog>\r\n        {/*<Divider />*/}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        width: 'inherit'\r\n    },\r\n    colorPicker: {\r\n        position: 'absolute',\r\n        width: 'max-content',\r\n        zIndex: '10'\r\n    }\r\n});\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst ColorPicker = ({ onChangeComplete, value='#ffffff', name='' }) => {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({background:'#ffffff'});\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n    useEffect(() => {\r\n        setState({background:value});\r\n    },[value])\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const handleChangeComplete = (color) => {\r\n        if(onChangeComplete)\r\n            onChangeComplete({target: { name, value: color.hex}});\r\n        setState({ background: color.hex });\r\n    };\r\n\r\n    const handleVisible = (e) => {\r\n        setVisible(!visible);\r\n        setAnchorEl(e.currentTarget)\r\n    }\r\n    useOutsideAlerter(wrapperRef, handleVisible);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.colorContainer} onClick={handleVisible}>\r\n                <div className={classes.colorSquare} style={{backgroundColor:state.background}}/>\r\n                <Typography variant=\"subtitle1\">{state.background.split('#')[1]}</Typography>\r\n            </div>\r\n            {/*visible?\r\n                <div className={classes.colorPicker} ref={wrapperRef}>\r\n                    <SketchPicker\r\n                        color={ state.background }\r\n                        onChangeComplete={ handleChangeComplete }\r\n                        onChange={handleChangeComplete}\r\n                        disableAlpha\r\n                    />\r\n                </div>\r\n                :\r\n                <React.Fragment/>*/\r\n            }\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={anchorEl}\r\n                onClose={()=>{\r\n                    setAnchorEl(null);\r\n                }}\r\n            >\r\n                <SketchPicker\r\n                    color={ state.background }\r\n                    onChangeComplete={ handleChangeComplete }\r\n                    onChange={ handleChangeComplete }\r\n                    disableAlpha\r\n                />\r\n            </Menu>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport ColorPicker from '../../../Components/ColorPicker';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    maker:'',\r\n    color:'#ffffff',\r\n    //presentation :''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        //margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst Step2 = ({ groupers=[], pushGrouper, updateGroupers, removeGrouper }) => {\r\n    const classes = useStyles();\r\n    const [grouper, setGrouper] = React.useState({\r\n        ...initialValue,\r\n        color: randomColor(),\r\n    })\r\n\r\n    const [editGrouper, setEditGrouper] = React.useState({});\r\n    const [openEditGrouper, setOpenEditGrouper] = React.useState(false);\r\n\r\n    const getGroupers = () => {\r\n        return (\r\n            groupers.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.maker}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorContainer}>\r\n                            <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                            {/*<Typography variant=\"subtitle1\" align=\"left\">{data.color.split('#')[1]}</Typography>*/}\r\n                        </div>\r\n                    </Grid>\r\n                    {/*<Grid item xs={2}>\r\n                        <Typography align=\"left\">\r\n                            {data.presentation }\r\n                        </Typography>\r\n                    </Grid>*/}\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta marca?'\r\n                                onOk={()=>{handleRemoveGrouper(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor: 'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditGrouper(!openEditGrouper);\r\n                                setEditGrouper({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputGrouper = (e) => {\r\n        const {name, value} = e.target;\r\n        setGrouper({...grouper, [name]:value});\r\n    }\r\n\r\n    const handleSaveGrouper = () => {\r\n        if(pushGrouper){\r\n            pushGrouper(grouper);\r\n        }   \r\n        setGrouper({...initialValue, color: randomColor()})\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        if(removeGrouper)\r\n            removeGrouper(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align=\"left\"\r\n                    >\r\n                        Añade o elimina tus marcas\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align=\"left\"\r\n                        display=\"block\"\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marca</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Fabricante</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                </Grid>\r\n                {/*<Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Presentación</Typography>\r\n                </Grid>*/}\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getGroupers() }\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Marca\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        name='name'\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Fabricante\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='maker'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.maker}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ColorPicker \r\n                        onChangeComplete={handleInputGrouper}\r\n                        name='color'\r\n                        value={grouper.color}\r\n                    />\r\n                </Grid>\r\n                {/*<Grid item xs={2}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Presentación\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='presentation'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.presentation}\r\n                        required\r\n                    />\r\n                </Grid>*/}\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveGrouper}\r\n                            disabled={grouper.name==='' || grouper.maker===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Modal\r\n                open={openEditGrouper}\r\n                onClose={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar marca\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={5}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Marca\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, name:e.target.value})\r\n                                }}\r\n                                value={editGrouper.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Fabricante\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='maker'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, maker:e.target.value})\r\n                                }}\r\n                                value={editGrouper.maker}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <ColorPicker \r\n                                onChangeComplete={(e)=>{\r\n                                    //console.log(e)\r\n                                    setEditGrouper({...editGrouper, color:e.target.value})\r\n                                }}\r\n                                name='color'\r\n                                value={editGrouper.color}\r\n                            />\r\n                        </Grid>\r\n                        {\r\n                            // <Grid item xs={4}>\r\n                            //     <TextField \r\n                            //         id=\"\" \r\n                            //         label=\"Presentación\" \r\n                            //         variant=\"outlined\" \r\n                            //         fullWidth\r\n                            //         multiline\r\n                            //         name='presentation'\r\n                            //         //rows={2}\r\n                            //         onChange={(e)=>{\r\n                            //             setEditGrouper({...editGrouper, presentation:e.target.value})\r\n                            //         }}\r\n                            //         value={editGrouper.presentation}\r\n                            //         required\r\n                            //     />\r\n                            // </Grid>\r\n                        }\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = groupers.slice();\r\n                                        aux[editGrouper.index] = editGrouper;\r\n                                        if(updateGroupers){\r\n                                            //console.log(editGrouper)\r\n                                            updateGroupers(aux, editGrouper.index);\r\n                                        }\r\n                                        setOpenEditGrouper(!openEditGrouper)\r\n                                    }}\r\n                                    disabled={editGrouper.name==='' || editGrouper.maker===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value=null}) {\r\n    //const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={data.name} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '.5em',\r\n        height: '1em',\r\n        borderRadius: '5px',\r\n        marginRight: '.25em',\r\n        border: '1px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value}) {\r\n    //const [value, setValue] = React.useState();\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        ////console.log(JSON.parse(event.target.value))\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n    //console.log(value)\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={<div style={{display: 'flex', alignItems: 'center'}}><div className={classes.colorSquare} style={{backgroundColor:data.color}}/>{data.name}</div>} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport RadioGroup from '../../../Components/RadioGroup';\r\nimport CheckboxGroup from '../../../Components/CheckboxGroup';\r\nimport RadioGropupGroupers from './RadioGropupGroupers';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    content:'',\r\n    unit: null,\r\n    grouper:null,\r\n    subcategory:null,\r\n    presentation:'',\r\n    value:'',\r\n    img:null\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n       // margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst Step2 = ({ groupers=[], pushSku, subcategories=[], skus=[], updateSkus, removeSku, onFilter }) => {\r\n\r\n    const classes = useStyles();\r\n    const [sku, setSku] = React.useState({\r\n        ...initialValue\r\n    })\r\n\r\n    const [filter, setFilter] = React.useState({\r\n        subcategory:null\r\n    })\r\n\r\n    const [openEditSku, setOpenEditSku] = React.useState(false);\r\n    const [editSku, setEditSku] = React.useState({});\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log('useffect',groupers,skus)\r\n    },[skus])\r\n\r\n    const getSkus = (filterData) => {\r\n        let newSkus;\r\n        if(filterData){\r\n            newSkus = skus.filter(item=>(item.subcategory.id===filterData.id));\r\n        }\r\n        else{\r\n            newSkus = skus;\r\n        }\r\n        //console.log(newSkus)\r\n        return (\r\n            newSkus.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={3}>\r\n                        <div style={{display:'flex', alignItems:'center'}}>\r\n                            <span style={{marginRight:'1em'}}>\r\n                                {\r\n                                data.img?\r\n                                        <Avatar\r\n                                            alt=\"\"\r\n                                            src={data.img}\r\n                                            sx={{ width: 50, height: 50 }}\r\n                                        />\r\n                                :\r\n                                    <Avatar\r\n                                        sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                                    >\r\n                                        {data.name.toUpperCase().charAt(0)}\r\n                                    </Avatar>\r\n                                }\r\n                            </span>\r\n                            <Typography align='left'>\r\n                                {data.name}\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.content} {data.unit} / {data.presentation}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {\r\n                            data.grouper?\r\n                                <div className={classes.colorContainer}>\r\n                                    <div className={classes.colorSquare} style={{backgroundColor:data.grouper.color}}/>\r\n                                    <Typography variant=\"subtitle1\" align=\"left\">{data.grouper.name}</Typography>\r\n                                </div>\r\n                            :\r\n                            <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.subcategory.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta categoria?'\r\n                                onOk={()=>{handleRemoveSku(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setEditSku({...data, index})\r\n                                setOpenEditSku(!openEditSku);\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputSku = (e) => {\r\n        const {name, value} = e.target;\r\n        ////console.log(value)\r\n        setSku({...sku, [name]:value});\r\n    }\r\n\r\n    const handleSaveSku = () => {\r\n        ////console.log(sku)\r\n\r\n        let cpy = JSON.stringify(sku);\r\n        if(pushSku){\r\n            let aux = JSON.parse(cpy);\r\n            let newSkus = [];\r\n                //console.log(aux.grouper)\r\n            for(let i=0;i<aux.grouper.length;i++){\r\n                if(aux.grouper[i].checked){\r\n                    newSkus.push({...aux, grouper:aux.grouper[i]});\r\n                }\r\n                //console.log(newSku)\r\n            }\r\n            pushSku(newSkus);\r\n            //pushSku();\r\n        }   \r\n        setSku({...initialValue})\r\n\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        if(removeSku)\r\n            removeSku(index);\r\n    }\r\n\r\n    const handleFilter = (e) => {\r\n        if(onFilter){\r\n            onFilter(JSON.parse(e.target.value))\r\n        }\r\n        setFilter({...filter, subcategory:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align='left'\r\n                    >\r\n                        Añade o elimina tus SKUS\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align='left'\r\n                        display='block'\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Contenido</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marcas</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Subcategorias</InputLabel>\r\n                        <Select\r\n                            //value={age}\r\n                            name={'subcategory'}\r\n                            label=\"Subcategoria\"\r\n                            value={filter.subcategory}\r\n                            onChange={handleFilter}\r\n                        >\r\n                            <MenuItem value={null}>Subcategorias</MenuItem>\r\n                            {\r\n                                subcategories.map((data, index)=>\r\n                                    <MenuItem value={JSON.stringify(data)} key={index}>{data.name}</MenuItem>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getSkus(JSON.parse(filter.subcategory)) }\r\n                <Grid item xs={3}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Nombre\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='name'\r\n                        onChange={handleInputSku}\r\n                        value={sku.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{display:'flex', flexDirection:'column'}}>\r\n                        <TextField \r\n                            id=\"\" \r\n                            label=\"Contenido\" \r\n                            variant=\"outlined\" \r\n                            fullWidth\r\n                            multiline\r\n                            name='content'\r\n                            //rows={2}\r\n                            onChange={(e)=>{handleInputSku({target:{name:e.target.name, value:e.target.value.replace(/[^0-9]/g, '')}})}}\r\n                            value={sku.content}\r\n                            required\r\n                        />\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                <Select\r\n                                    //value={age}\r\n                                    name={'unit'}\r\n                                    label=\"Unidad *\"\r\n                                    value={sku.unit}\r\n                                    onChange={handleInputSku}\r\n                                >\r\n                                    <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                    <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                    <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={handleInputSku}\r\n                                value={sku.presentation}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Valor $\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='value'\r\n                                //rows={2}\r\n                                onChange={handleInputSku}\r\n                                value={sku.value}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        {/*<div style={{marginTop:'.5em', display:'block'}}>\r\n                            <UploadImage\r\n                                title={'Subir imagen'}\r\n                                variant=\"outlined\"\r\n                                onChange={handleInputSku}\r\n                                name='img'\r\n                                value={sku.img}\r\n                            />\r\n                        </div>*/}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div style={{display:'flex'}}>\r\n                        {/*<RadioGropupGroupers\r\n                            name = 'grouper'\r\n                            items = {[...groupers]}\r\n                            onChange={handleInputSku}\r\n                            value={sku.grouper}\r\n                        />*/}\r\n                        <CheckboxGroup\r\n                            name = 'grouper'\r\n                            items = {[...groupers]}\r\n                            onChange={handleInputSku}\r\n                            value={sku.grouper}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} align='left'>\r\n                    <RadioGroup\r\n                        name = 'subcategory'\r\n                        items = {[...subcategories]}\r\n                        onChange={handleInputSku}\r\n                        value={sku.subcategory}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveSku}\r\n                            disabled={sku.name==='' || sku.content==='' || sku.grouper===null || sku.subcategory===null || sku.unit===null || sku.presentation===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={openEditSku}\r\n                onClose={()=>{setOpenEditSku(!openEditSku)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar Sku\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Nombre\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, name:e.target.value})\r\n                                }}\r\n                                value={editSku.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <div style={{display:'flex', flexDirection:'column'}}>\r\n                                <TextField \r\n                                    id=\"\" \r\n                                    label=\"Contenido\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    multiline\r\n                                    name='content'\r\n                                    //rows={2}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value.replace(/[^0-9]/g, '')})\r\n                                    }}\r\n                                    value={editSku.content}\r\n                                    required\r\n                                />\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                        <Select\r\n                                            //value={age}\r\n                                            name={'unit'}\r\n                                            label=\"Unidad *\"\r\n                                            value={editSku.unit}\r\n                                            onChange={(e)=>{\r\n                                                setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                            <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                            <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <TextField \r\n                                        id=\"\"\r\n                                        label=\"Presentación\" \r\n                                        variant=\"outlined\" \r\n                                        fullWidth\r\n                                        multiline\r\n                                        name='presentation'\r\n                                        //rows={2}\r\n                                        onChange={(e)=>{\r\n                                            setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                        }}\r\n                                        value={editSku.presentation}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <TextField \r\n                                        id=\"\"\r\n                                        label=\"Valor $\" \r\n                                        variant=\"outlined\" \r\n                                        fullWidth\r\n                                        multiline\r\n                                        name='value'\r\n                                        //rows={2}\r\n                                        onChange={(e)=>{\r\n                                            setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                        }}\r\n                                        value={editSku.value}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                // <div style={{marginTop:'.5em', display:'block'}}>\r\n                                //     <UploadImage\r\n                                //         title={'Subir imagen'}\r\n                                //         variant=\"outlined\"\r\n                                //         name='img'\r\n                                //         onChange={(e)=>{\r\n                                //             setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                //         }}\r\n                                //         value={editSku.img}\r\n                                //     />\r\n                                // </div>\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <div style={{display:'flex'}}>\r\n                                <RadioGropupGroupers\r\n                                    name = 'grouper'\r\n                                    items = {[...groupers.map(item=>({...item, checked:true}))]}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                    }}\r\n                                    value={{...editSku.grouper}}\r\n                                />  \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <RadioGroup\r\n                                name = 'subcategory'\r\n                                items = {[...subcategories]}\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                }}\r\n                                value={editSku.subcategory}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = skus.slice();\r\n                                        aux[editSku.index] = editSku;\r\n                                        if(updateSkus){\r\n                                            //console.log(editGrouper)\r\n                                            updateSkus(aux, editSku.index);\r\n                                        }\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                    disabled={editSku.name==='' || editSku.content==='' || editSku.grouper===null || editSku.subcategory===null || editSku.unit===null || editSku.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import * as React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n//import DatePicker from '@mui/lab/DatePicker';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst DatePickerContainer = styled('div')(({ theme }) => ({\r\n    position:'relative',\r\n    '.react-datepicker__day--selected, .react-datepicker__day--in-selecting-range, .react-datepicker__day--in-range, .react-datepicker__month-text--selected, .react-datepicker__month-text--in-selecting-range, .react-datepicker__month-text--in-range, .react-datepicker__quarter-text--selected, .react-datepicker__quarter-text--in-selecting-range, .react-datepicker__quarter-text--in-range, .react-datepicker__year-text--selected, .react-datepicker__year-text--in-selecting-range, .react-datepicker__year-text--in-range':{\r\n        backgroundColor:theme.palette.primary.main,\r\n    },\r\n    '.react-datepicker__day--keyboard-selected, .react-datepicker__month-text--keyboard-selected, .react-datepicker__quarter-text--keyboard-selected, .react-datepicker__year-text--keyboard-selected':{\r\n        backgroundColor:theme.palette.primary.main,\r\n    },\r\n    '.react-datepicker__day--selected:hover, .react-datepicker__day--in-selecting-range:hover, .react-datepicker__day--in-range:hover, .react-datepicker__month-text--selected:hover, .react-datepicker__month-text--in-selecting-range:hover, .react-datepicker__month-text--in-range:hover, .react-datepicker__quarter-text--selected:hover, .react-datepicker__quarter-text--in-selecting-range:hover, .react-datepicker__quarter-text--in-range:hover, .react-datepicker__year-text--selected:hover, .react-datepicker__year-text--in-selecting-range:hover, .react-datepicker__year-text--in-range:hover':{\r\n        backgroundColor:theme.palette.primary.main,\r\n    },\r\n    '.react-datepicker__month-text.react-datepicker__month--selected:hover, .react-datepicker__month-text.react-datepicker__month--in-range:hover, .react-datepicker__month-text.react-datepicker__quarter--selected:hover, .react-datepicker__month-text.react-datepicker__quarter--in-range:hover, .react-datepicker__quarter-text.react-datepicker__month--selected:hover, .react-datepicker__quarter-text.react-datepicker__month--in-range:hover, .react-datepicker__quarter-text.react-datepicker__quarter--selected:hover, .react-datepicker__quarter-text.react-datepicker__quarter--in-range:hover':{\r\n        backgroundColor:theme.palette.primary.main,\r\n    },\r\n    '.react-datepicker__current-month, .react-datepicker-time__header, .react-datepicker-year-header': {\r\n        color: theme.palette.primary.main\r\n    },\r\n    '.react-datepicker__month--selected, .react-datepicker__month--in-selecting-range, .react-datepicker__month--in-range, .react-datepicker__quarter--selected, .react-datepicker__quarter--in-selecting-range, .react-datepicker__quarter--in-range':{\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    '.datepicker-container':{\r\n        position: 'absolute',\r\n        top: '3.5em',\r\n        left:0,\r\n        zIndex:1,\r\n\r\n    }\r\n}));\r\n\r\nconst gridItemStyles = {\r\n    cursor: 'pointer',\r\n    padding: '1em',\r\n    borderRadius: '.25em',\r\n    border: '1px solid #bdbdbd'\r\n}\r\n\r\n\r\n\r\nexport default ({periodicity='weekly'}) => {\r\n\r\n    const [date, setDate] = React.useState(new Date);\r\n    const [visible, setVisible] = React.useState(false)\r\n\r\n    const findWeek = (d) => {\r\n        d = new Date(d);\r\n        let day = d.getDay(),\r\n            diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\r\n        //console.log('new',new Date(new Date(d.setDate(diff)).getTime()+(6*24*60*60*1000)))\r\n        let sunday = new Date(new Date(d.setDate(diff)).getTime()+(6*24*60*60*1000));\r\n        let monday = new Date(d.setDate(diff));\r\n        return {\r\n            monday:monday,\r\n            sunday:sunday\r\n        };\r\n    }\r\n\r\n    const findBianual = (d) => {\r\n        let startDate;\r\n        let endDate;\r\n        if(d.getMonth()<6){\r\n            // console.log(new Date(d.getYear(), 0, 1))\r\n            // console.log(new Date(d.getYear(), 5, 1))\r\n            startDate = new Date(d.getFullYear(), 0, 1);\r\n            endDate = new Date(d.getFullYear(), 5, 1);\r\n        }\r\n        else {\r\n            // console.log(new Date(d.getYear(), 6, 1))\r\n            // console.log(new Date(d.getYear(), 11, 1))\r\n            startDate = new Date(d.getFullYear(), 6, 1);\r\n            endDate = new Date(d.getFullYear(), 11, 1);\r\n        }\r\n        return ({\r\n            startDate, \r\n            endDate\r\n        });\r\n    }\r\n\r\n    const getContent = (type) => {\r\n        switch(type){\r\n            case 'daily':\r\n                return (\r\n                    <>\r\n                        {\r\n                            visible &&\r\n                            <div>\r\n                                <DatePicker \r\n                                    selected={new Date(date)} \r\n                                    inline \r\n                                    maxDate={new Date()}\r\n                                    onChange={(date) => { \r\n                                        //console.log(`${date.getDate()}/${date.getMonth()}/${date.getYear()+1900}`) \r\n                                        setDate(date);\r\n                                    }} \r\n                                    onClickOutside={()=>{\r\n                                        setVisible(false)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </>\r\n                )\r\n            case 'weekly':\r\n                return (\r\n                    <>\r\n                        {\r\n                            visible &&\r\n                            <div>\r\n                                <DatePicker \r\n                                    maxDate={new Date()}\r\n                                    inline \r\n                                    startDate={findWeek(date).monday}\r\n                                    endDate={findWeek(date).sunday}\r\n                                    //showWeekNumbers\r\n\r\n                                    onChange={(date) => { \r\n                                        setDate(findWeek(date).monday);\r\n                                    }} \r\n                                    onClickOutside={()=>{\r\n                                        setVisible(false)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </>\r\n                )\r\n            case 'monthly':\r\n                return (\r\n                    <>\r\n                        {\r\n                            visible &&\r\n                            <div>\r\n                                <DatePicker \r\n                                    selected={new Date(date)} \r\n                                    inline \r\n                                    maxDate={new Date()}\r\n                                    onChange={(date) => { \r\n                                        //console.log(`${date.getDate()}/${date.getMonth()}/${date.getYear()+1900}`) \r\n                                        setDate(date);\r\n                                    }} \r\n                                    onClickOutside={()=>{\r\n                                        setVisible(false)\r\n                                    }}\r\n                                    showMonthYearPicker\r\n                                    \r\n                                    peekNextMonth\r\n                                    showYearDropdown\r\n                                    dropdownMode=\"select\"\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </>\r\n                )\r\n            case 'quarterly':\r\n                return (\r\n                    <>\r\n                        {\r\n                            visible &&\r\n                            <div>\r\n                                <DatePicker \r\n                                    selected={new Date(date)} \r\n                                    maxDate={new Date()}\r\n                                    inline \r\n\r\n                                    onChange={(date) => { \r\n                                        //console.log(`${date.getDate()}/${date.getMonth()}/${date.getYear()+1900}`) \r\n                                        setDate(date);\r\n                                    }} \r\n                                    onClickOutside={()=>{\r\n                                        setVisible(false)\r\n                                    }}\r\n                                    showQuarterYearPicker\r\n                                    \r\n                                    peekNextMonth\r\n                                    showYearDropdown\r\n                                    dropdownMode=\"select\"\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </>\r\n                )\r\n            case 'biannual':\r\n                return (\r\n                    <>\r\n                        {\r\n                            visible &&\r\n                            <div>\r\n                                <DatePicker \r\n                                    selected={new Date(date)} \r\n                                    maxDate={new Date()}\r\n                                    inline \r\n                                    showMonthYearPicker\r\n\r\n                                    startDate={findBianual(date).startDate}\r\n                                    endDate={findBianual(date).endDate}\r\n\r\n                                    onChange={(date) => { \r\n                                        //console.log(`${date.getDate()}/${date.getMonth()}/${date.getYear()+1900}`) \r\n                                        setDate(date);\r\n                                    }} \r\n                                    onClickOutside={()=>{\r\n                                        setVisible(false)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        {\r\n                            //console.log(findBianual(date))\r\n                        }\r\n                    </>\r\n                )\r\n            case 'annual':\r\n                return (\r\n                    <>\r\n                        {\r\n                            visible &&\r\n                            <div>\r\n                                <DatePicker \r\n                                    selected={new Date(date)} \r\n                                    inline \r\n                                    maxDate={new Date()}\r\n                                    onChange={(date) => { \r\n                                        //console.log(`${date.getDate()}/${date.getMonth()}/${date.getYear()+1900}`) \r\n                                        setDate(date);\r\n                                    }} \r\n                                    onClickOutside={()=>{\r\n                                        setVisible(false)\r\n                                    }}\r\n                                    showYearPicker\r\n                                    dateFormat=\"yyyy\"\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DatePickerContainer>\r\n            <TextField\r\n                fullWidth \r\n                label=\"Fecha de la primera medicion\" \r\n                variant=\"outlined\" \r\n                required\r\n                onFocus={()=>{\r\n                    setVisible(true)\r\n                }}\r\n                value={`${date.getDate()}/${date.getMonth()+1}/${date.getYear()+1900}`}\r\n            />\r\n            <div className='datepicker-container'>\r\n                {\r\n                    getContent(periodicity)\r\n                }\r\n            </div>\r\n        </DatePickerContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Spreadsheet from \"react-spreadsheet\";\r\n\r\nexport default () => {\r\n    const [data, setData] = React.useState([])\r\n    const getDates = () => {\r\n        let v = [...Array(new Date().getYear()).keys()].reverse().map(item=>([{value:(item+1901), disabled: true}, {value:''}]));\r\n        //console.log(v)\r\n        return v;\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        setData(getDates())\r\n    },[])\r\n\r\n    return <Spreadsheet data={data} onChange={setData}/>;\r\n};","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport CheckboxGroup from '../../../Components/CheckboxGroup';\r\nimport CustomDatePicker from '../../../Components/CustomDatePicker';\r\nimport Modal from '@mui/material/Modal';\r\nimport SpreadSheetVariables from '../../../Components/SpreadSheetVariables';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n        maxHeight:'80vh',\r\n        overflow: 'auto',\r\n    },\r\n}));\r\n\r\nconst Variables = ({category=null, subcategories=[], skus=[], brands=[]}) => {\r\n    const classes = useStyles();\r\n\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n\r\n    const [state, setState] = React.useState({\r\n        level:null,\r\n        periodicity:null\r\n    });\r\n\r\n    const getLevels = (level) => {\r\n        //console.log(level)\r\n        switch(level){\r\n            case 'enviroment':\r\n                return (\r\n                    <>\r\n                        {`Afecta al entorno`}\r\n                    </>\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <>\r\n                        {`Afecta a la categoria ${category.name}`}\r\n                    </>\r\n                )\r\n            case 'subcategory':\r\n                return (\r\n                    <>\r\n                        <CheckboxGroup\r\n                            key={1}\r\n                            items={subcategories}\r\n                        />\r\n                    </>\r\n                )\r\n            case 'brand':\r\n                return (\r\n                    <>\r\n                        <CheckboxGroup\r\n                            key={2}\r\n                            items={brands}\r\n                        />\r\n                    </>\r\n                )\r\n            case 'sku':\r\n                return (\r\n                    <>\r\n                        <CheckboxGroup\r\n                            key={3}\r\n                            items={skus}\r\n                        />\r\n                    </>\r\n                )\r\n            default:\r\n                return (\r\n                    <>\r\n                    </>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                padding: '1.5em',\r\n            }}\r\n        >\r\n            <Grid container alignItems='flex-start' spacing={3} style={{marginBottom:'1.5em'}}>\r\n                <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Periodicidad</InputLabel>\r\n                        <Select\r\n                            label=\"Periodicidad\"\r\n                            value={state.periodicity}\r\n                            onChange={(event)=>{\r\n                                //console.log(event)\r\n                                setState({...state, periodicity:event.target.value})\r\n                            }}\r\n                        >\r\n                            <MenuItem value={'daily'}>Diaria</MenuItem>\r\n                            <MenuItem value={'weekly'}>Semanal</MenuItem>\r\n                            <MenuItem value={'monthly'}>Mensual</MenuItem>\r\n                            <MenuItem value={'quarterly'}>Trimestral</MenuItem>\r\n                            <MenuItem value={'biannual'}>Semestral</MenuItem>\r\n                            <MenuItem value={'annual'}>Anual</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    {state.periodicity?\r\n                    <CustomDatePicker\r\n                        periodicity={state.periodicity}\r\n                    />\r\n                    :\r\n                    <></>\r\n                    }\r\n                    {/*<LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DatePicker\r\n                            label=\"Fecha de la primera medicion\"\r\n                            value={value}\r\n                            onChange={(newValue) => {\r\n                            setValue(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} fullWidth />}\r\n                        />\r\n                    </LocalizationProvider>*/}\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container alignItems='flex-start' spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <Grid container alignItems='flex-start' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Nombre\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                name='name'\r\n                                /*onChange={handleInputChangeCategories}\r\n                                value={category.name}\r\n                                required*/\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Nivel al que afecta</InputLabel>\r\n                                <Select\r\n                                    label=\"Nivel al que afecta\"\r\n                                    //value={age}\r\n                                    onChange={(event)=>{\r\n                                        //console.log(event.target.value)\r\n                                        setState({...state, level:event.target.value})\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value={'enviroment'}>Entorno</MenuItem>\r\n                                    <MenuItem value={'category'}>Categoria</MenuItem>\r\n                                    <MenuItem value={'subcategory'}>Subcategoria</MenuItem>\r\n                                    <MenuItem value={'brand'}>Marca</MenuItem>\r\n                                    <MenuItem value={'sku'}>Sku</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Regla de negocio</InputLabel>\r\n                                <Select\r\n                                    label=\"Regla de negocio\"\r\n                                    //value={age}\r\n                                    //onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value={10}>Ten</MenuItem>\r\n                                    <MenuItem value={20}>Twenty</MenuItem>\r\n                                    <MenuItem value={30}>Thirty</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper \r\n                        variant=\"outlined\"\r\n                        style={{padding:'1em'}}\r\n                    >\r\n                        <Typography \r\n                            variant='subtitle1'\r\n                            align='left'\r\n                            style={{textTransform:'capitalize'}}\r\n                        >\r\n                            Crea una variable\r\n                        </Typography>\r\n                        <Typography \r\n                            variant='subtitle2'\r\n                            align='left'\r\n                            style={{textTransform:'capitalize'}}\r\n                        >\r\n                            Selecciona a quienes afecta\r\n                        </Typography>\r\n                        <Divider light style={{marginBottom: '.5em'}}/>\r\n                        <div style={{marginBottom:'1em'}}>\r\n                            {\r\n                                getLevels(state.level) \r\n                            }\r\n                        </div>\r\n                        <Stack spacing={2}>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setOpenModal(!openModal)\r\n                                }}\r\n                            >\r\n                                Agregar serie de datos\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    \r\n                                }}\r\n                            >\r\n                                Guardar variable\r\n                            </Button>\r\n                        </Stack>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                // console.log(openModal)\r\n            }\r\n            {\r\n            <Modal\r\n                open={openModal}\r\n                onClose={()=>{setOpenModal(!openModal)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <SpreadSheetVariables\r\n                        \r\n                    />\r\n                </Paper>\r\n            </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variables;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    dragabbleNode: {\r\n        width: '.75em',\r\n        height: '.75em',\r\n        cursor: 'move',\r\n        backgroundColor: props=>props.color,\r\n        borderRadius: '50%',\r\n        border: '2px solid #E6EBF1',//verde principal\r\n        TransitionEvent: 'all 1.5s ease',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        left: '-.5em',\r\n        \"&:hover\": {\r\n            boxShadow: '0px 0px 10px 0px rgba(43,153,130,1)',\r\n            backgroundColor: '#2B9982',\r\n        }\r\n    },\r\n}));\r\n\r\nconst Draggable2 = ({data, position=null, fixed=false, onStop, color='#fff'}) => {\r\n\r\n    const classes = useStyles({color: color});\r\n    const nodeRef = React.useRef(null);\r\n    const [conf, setConf] = React.useState({\r\n        position:{\r\n            x:0,\r\n            y:0,\r\n        }, \r\n        fixed: false\r\n    })\r\n\r\n    React.useEffect(()=>{\r\n        if(position)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: position.x,\r\n                    y: position.y\r\n                },\r\n                fixed: true\r\n            })\r\n    },[position])\r\n\r\n    const eventLogger = (e) => {\r\n        ////console.log('Data: ', e);\r\n    };\r\n\r\n    const getTranslateValues = (translate) => {\r\n        let result = translate.split('translate(')[1].split(')')[0].split(', ');\r\n        try {\r\n            return {x: parseInt(result[0].split('px')[0]), y :parseInt(result[1].split('px')[0])};\r\n        } catch (error) {\r\n            console.error(result)\r\n            console.error(error)\r\n            return {x:0, y:0}\r\n        }\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        ////console.log(getTranslateValues(nodeRef.current.style.transform));\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                ...getTranslateValues(nodeRef.current.style.transform)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStart = (e) => {\r\n        /*//console.log( e)\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                x: 0,\r\n                y: 10\r\n            }\r\n        })*/\r\n    }\r\n    \r\n    const handleEnd = (e) => {\r\n        /*//console.log( e)*/\r\n        if(onStop){\r\n            onStop(data)\r\n        }\r\n        if(!fixed)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            //axis=\"x\"\r\n            handle=\".handle\"\r\n            defaultPosition={{x: 0, y: 0}}\r\n            position={conf.position}\r\n            //grid={[25, 25]}\r\n            scale={1}\r\n            onStart={eventLogger}\r\n            onDrag={handleDrag}\r\n            onStop={handleEnd}\r\n        >\r\n            <div className={classes.dragabbleNode} id={'end-'+data.id} ref={nodeRef}>\r\n                <div className=\"handle\">\r\n                    <span style={{visibility: 'hidden', width: 0, height: 0}}>.</span>\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n    );\r\n  \r\n}\r\n\r\nexport default Draggable2;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Draggable from '../Draggable';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    startNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        transition: 'all .5s',\r\n        backgroundColor: '#fff',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        display:'flex', \r\n        alignItems:'center'\r\n        //backgroundColor: '#fff'\r\n    },\r\n    startNodeContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginBottom: '.5em',\r\n        transition: 'all .5s'\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0'\r\n    },    \r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    },\r\n    startPoint: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '25%'\r\n    }\r\n}));\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    React.useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst StartBox = ({id, data, onStop}) => {\r\n\r\n    const wrapperRef = React.useRef(null);\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [focus, setFocus] = React.useState(false);\r\n\r\n    const hanldeFocus = () => {\r\n        setFocus(true);\r\n    }\r\n\r\n    const handleFocusOut = () => {\r\n        setFocus(false);\r\n    }\r\n\r\n    useOutsideAlerter(wrapperRef, handleFocusOut);\r\n//console.log(data)\r\n    return (\r\n        <div className={classes.startNodeContainer} ref={wrapperRef}>\r\n            <div \r\n                className={classes.startNode} \r\n                 \r\n                onClick={hanldeFocus}\r\n                style={{borderWidth: focus?'2px':'1px'}}\r\n            >\r\n                <div id={'startBox-'+id} className={classes.startPoint}/>\r\n                <div id={'start-'+id} className={classes.startPoint}/>\r\n                <div className={classes.borderColor}/>\r\n                               \r\n                <span style={{marginRight:'1em'}}>\r\n                    {\r\n                    data.img?\r\n                            <Avatar\r\n                                alt=\"\"\r\n                                src={data.img}\r\n                                sx={{ width: 50, height: 50 }}\r\n                            />\r\n                    :\r\n                        <Avatar\r\n                            sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                        >\r\n                            {data.name.toUpperCase().charAt(0)}\r\n                        </Avatar>\r\n                    }\r\n                </span>\r\n\r\n                <div className={classes.dataContainer}>\r\n                    <div className={classes.title}>\r\n                        {data.name}\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Draggable \r\n                data={data} \r\n                onStop={onStop}\r\n                color={data.grouper.color}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartBox;","import React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNodePoint: {\r\n        position: 'absolute',\r\n        width: '.75em',\r\n        height: '.75em',\r\n        border: '2px solid #E6EBF1',\r\n        backgroundColor: '#aaa',\r\n        borderRadius: '50%',\r\n        left: '-.75em',\r\n        top: 'calc(50% - .25em)',\r\n        zIndex: '1',\r\n        \"&:hover\": {\r\n            backgroundColor: '#C72C1C',\r\n            borderColor: '#C72C1C'\r\n        }\r\n    },\r\n    nodeContainer: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - .15em)',\r\n        left: '.25em',\r\n    }\r\n}));\r\n\r\nconst DeleteNode = ({ onMouseEnter, onMouseLeave, related, relations, onEnterItem, onLeaveItem, onDelete, color='#fff' }) => {\r\n\r\n    const classes = useStyles({color: color});\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = (data) => {\r\n        if(onDelete)\r\n            onDelete(data)\r\n        handleClose();\r\n    }\r\n\r\n    ////console.log('relations',relations)\r\n    return (\r\n        <div className={classes.nodeContainer}>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <div \r\n                    className={classes.endNodePoint} \r\n                    style={{display:related?'block':'none'}} \r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    onClick={handleClick}\r\n                />\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {\r\n                    relations.map((data, index)=>{\r\n                        ////console.log(data)\r\n                        return (\r\n                            <MenuItem \r\n                                key={index} \r\n                                onClick={()=>handleDelete(data)}\r\n                            >\r\n                                <spam\r\n                                    onMouseEnter={()=>{\r\n                                        onEnterItem(data)\r\n                                    }}\r\n                                    onMouseLeave={()=>{\r\n                                        onLeaveItem(data)\r\n                                    }}\r\n                                >\r\n                                    {data.from.name}\r\n                                </spam>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteNode;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport DeleteNode from './DeleteNode';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        marginBottom: '.5em',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        display:'flex', \r\n        alignItems:'center',\r\n        //backgroundColor: '#F0F0F0',\r\n        \"&:hover\": {\r\n            borderWidth: '2px'\r\n        },\r\n    },\r\n    magnet: {\r\n        position: 'absolute',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: '10em',\r\n        right: '0',\r\n        top: '0',\r\n        zIndex: '1',\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '0'\r\n    },\r\n    grouperCircle: {\r\n        width: '1em',\r\n        height: '1em',\r\n        backgroundColor: props => props.color,\r\n        borderRadius: '50%',\r\n        marginRight: '.5em',\r\n    },\r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    }\r\n}));\r\n\r\nconst EndBox = ({data, id, onEnter, onExit, related=false, onEnterDelete, onExitDelete, relations=[], onEnterItem, onLeaveItem, onDelete}) => {\r\n\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    const handleEnter = () => {\r\n        setHover(true);\r\n        if(onEnter)\r\n            onEnter(data);\r\n    }\r\n\r\n    const handleExit = () => {\r\n        setHover(false);\r\n        if(onExit)\r\n            onExit(data);\r\n    }\r\n\r\n    const handleEnterDelete = () => {\r\n        if(onEnterDelete)\r\n            onEnterDelete(data);\r\n    }\r\n\r\n    const handleExitDelete = () => {\r\n        if(onExitDelete)\r\n            onExitDelete(data);\r\n    }\r\n\r\n    return (\r\n        <div id={'endBox-'+id}>\r\n            <DeleteNode \r\n                related={related}\r\n                onMouseEnter={handleEnterDelete}\r\n                onMouseLeave={handleExitDelete}\r\n                relations={relations}\r\n                onEnterItem={onEnterItem}\r\n                onLeaveItem={onLeaveItem}\r\n                onDelete={(data)=>onDelete(data)}\r\n                className={classes.container}\r\n                color={data.grouper.color}\r\n            />\r\n            <div \r\n                className={classes.endNode}\r\n                style={{backgroundColor: hover?'rgba(0,0,0,.05)':'#fff', borderWidth: hover?'2px':'1px'}}\r\n            >\r\n                \r\n            <div \r\n                className={classes.magnet} \r\n                onMouseEnter={handleEnter}\r\n                onMouseLeave={handleExit}\r\n            />\r\n                <div className={classes.borderColor}/>\r\n                               \r\n                <span style={{marginRight:'1em'}}>\r\n                    {\r\n                    data.img?\r\n                            <Avatar\r\n                                alt=\"\"\r\n                                src={data.img}\r\n                                sx={{ width: 50, height: 50 }}\r\n                            />\r\n                    :\r\n                        <Avatar\r\n                            sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                        >\r\n                            {data.name.toUpperCase().charAt(0)}\r\n                        </Avatar>\r\n                    }\r\n                </span>\r\n                <div className={classes.dataContainer}>\r\n                    <div className={classes.title}>\r\n                        {data.name}\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndBox;","import React from 'react';\r\nimport { useScreenshot } from \"use-react-screenshot\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nimport Alert from '../Alert';\r\n\r\n/*import copy from './copy.svg';\r\nimport save from './save.svg';*/\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    circularButon: {\r\n        margin: '.5em',\r\n        marginRight: '0',\r\n        padding: '1em',\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '50%',\r\n        //border: '1px solid #000',\r\n        transition: 'all .25s',\r\n        backgroundColor: 'transparent',\r\n        cursor: 'pointer',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ecf0f1',\r\n            borderColor: '#95a5a6'\r\n        }\r\n    },\r\n    alert: {\r\n        position:'fixed',\r\n        bottom: '1em',\r\n        right: '1em',\r\n    },\r\n    container: {\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n    },\r\n    capture: {\r\n        position: 'absolute',\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        left: 0,\r\n        top: 0, \r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: '100'\r\n    }\r\n}));\r\n\r\nconst ScreenShot = ({children, onCapture}) => {\r\n    const classes = useStyles();\r\n\r\n    const ref = React.createRef(null);\r\n    const [image, takeScreenShot] = useScreenshot();\r\n    const [loaded, setLoaded] = React.useState(true);\r\n    //const [alert, setAlert] = React.useState(false);\r\n    //const [shutter, setShutter] = React.useState(false);\r\n    const getImage = () => {\r\n        ////console.log(ref2.current.getContext('2d'))\r\n        takeScreenShot(ref.current);\r\n        //setAlert(true);\r\n        //setShutter(true);\r\n        // if(onCapture)\r\n        //     onCapture(image);\r\n        // setTimeout(()=>{\r\n        //     setAlert(false);\r\n        // },3000)\r\n        // setTimeout(()=>{\r\n        //     setShutter(false);\r\n        // }, 100)\r\n    };\r\n\r\n    function downloadBase64File( base64Data, fileName) {\r\n        const linkSource = `${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        takeScreenShot(ref.current);\r\n        setLoaded(true);\r\n        //downloadBase64File(, image, 'ScreenShot');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className={classes.container}>\r\n                {/*<div className={classes.capture} style={{display: shutter?'block':'none'}}></div>\r\n                <canvas ref={ref2} style={{width: '100%', height: '100vh', background: 'red', position: 'absolute'}}></canvas>*/}\r\n                {children}\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                {/*<img src={image} alt='' style={{width: '100%'}}/>\r\n                <div className={classes.circularButon}>\r\n                    <img src={copy} style={{width:'100%'}} alt='copy' />\r\n                </div>\r\n                <div onClick={()=>{}} className={classes.circularButon}>\r\n                    <img src={save} style={{width:'100%'}} alt='save' />\r\n                </div>\r\n                */}\r\n                <Fab size=\"small\" onClick={getImage} color=\"primary\" aria-label=\"clean\">\r\n                    <ContentCopyIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\">\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" onClick={handleDownload} color=\"primary\" aria-label=\"clean\">\r\n                    <DownloadIcon />\r\n                </Fab>\r\n                {/*<div className={classes.alert}>\r\n                    <Alert\r\n                        type={'success'}\r\n                        open={alert}\r\n                        text='Copiado'\r\n                    />\r\n                </div>*/}\r\n                {\r\n                    loaded &&\r\n                    <img \r\n                        src={image} \r\n                        alt='' \r\n                        onLoad={()=>{\r\n                            ////console.log(image)\r\n                            downloadBase64File(image,'screenshot.png');\r\n                            setLoaded(false);\r\n                            if(onCapture)\r\n                                onCapture(image);\r\n                        }} \r\n                        style={{width: '0em', height: '0em'}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenShot;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport StartBox from './StartBox';\r\nimport EndBox from './EndBox';\r\nimport ReactBezier from \"react-bezier\";\r\nimport ScreenShot from '../ScreenShot';\r\n\r\n//import ContextMenu from '../ContextMenu';\r\nimport Fab from '@mui/material/Fab';\r\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    col: {\r\n        width: '30%',\r\n        /*padding: '1em',\r\n        width: '30%',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n        transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '4px',\r\n        margin: '.25em',*/\r\n        //overflow: 'hidden',\r\n    },\r\n    startNode: {\r\n        border: '1px solid #2B9982',\r\n        borderRadius: '.5em',\r\n        padding: '.5em 1.5em'\r\n    },\r\n    title: {\r\n        backgroundColor: '#2B9982',\r\n        top: '-1em',\r\n        left: '-1em',\r\n        position: 'relative',\r\n        width: 'calc( 100% + 1.5em)',\r\n        padding: '.25em',\r\n        color: '#fff',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n\r\n    '@global': {\r\n        \r\n    }\r\n\r\n});\r\n\r\nconst RelatableBoxes = ({dataFrom, dataTo, onUpdate, relations=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [draggablesNodes, setDraggablesNodes] = React.useState([]);\r\n    const [settings, setSettings] = React.useState([]);\r\n    const [enter, setEnter] = React.useState({data:null, flag:false});\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(()=>{\r\n        let newArray = [];\r\n        for(let i=0;i<relations.length;i++){\r\n            let newData = {\r\n                from: \"startBox-\"+relations[i].from.id,\r\n                to: \"endBox-\"+relations[i].to.id,\r\n                toData: relations[i].to,\r\n                fromData: relations[i].from,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            newArray.push(newData);\r\n        }\r\n        //console.log([...settings, ...newArray])\r\n        setDraggablesNodes([...newArray]);\r\n        setSettings([...settings, ...newArray]);\r\n        //console.log([...settings, ...newArray],relations);\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(dataFrom,dataTo)\r\n        ////console.log(groupers)\r\n        ////console.log(classes)\r\n        let newSettings = [];\r\n        //let newDraggablesNodes = [];\r\n        \r\n        for(let i=0;i<dataFrom.length;i++){\r\n            newSettings.push(\r\n                {\r\n                    from: \"start-\"+dataFrom[i].id,\r\n                    to: \"end-\"+dataFrom[i].id,\r\n                    toData: dataFrom[i],\r\n                    fromData: dataFrom[i],\r\n                    positions: {\r\n                        start: {\r\n                            side: \"right\",\r\n                            indent: 20\r\n                        },\r\n                        end: {\r\n                            side: \"left\",\r\n                        },\r\n                    },\r\n                    style: `relationship-line-selected`,\r\n              }\r\n            )\r\n        }\r\n        //console.log(newSettings)\r\n        // if(settings.length===0){\r\n        //     for(let i=0;i<relations.length;i++){\r\n        //         let newData = {\r\n        //             from: \"startBox-\"+relations[i].from.id,\r\n        //             to: \"endBox-\"+relations[i].to.id,\r\n        //             toData: relations[i].to,\r\n        //             fromData: relations[i].from,\r\n        //             positions: {\r\n        //                 start: {\r\n        //                     side: \"right\",\r\n        //                     indent: 20\r\n        //                 },\r\n        //                 end: {\r\n        //                     side: \"left\",\r\n        //                 },\r\n        //             },\r\n        //             style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n        //         }\r\n        //         newSettings.push(newData);\r\n        //     }\r\n        // }\r\n        //console.log(settings)\r\n        setSettings([...newSettings, ...draggablesNodes]);\r\n        if(settings.length!==0){\r\n            //console.log('updating')\r\n            handleUpdate([...newSettings, ...draggablesNodes]);\r\n        }\r\n        //console.log([...newSettings, ...draggablesNodes])\r\n        //console.log([...newSettings, ...draggablesNodes], relations, 'draggableNodes')\r\n    },[draggablesNodes]);\r\n\r\n    const handleUpdate = (data) => {\r\n        let aux = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].style!=='relationship-line-selected'){\r\n                aux.push({from:data[i].fromData, to:data[i].toData})\r\n            }\r\n        }\r\n        //console.log(aux)\r\n        if(onUpdate)\r\n            onUpdate(aux);\r\n    }\r\n\r\n    const handleEnter = (data) => {\r\n        setEnter({data, flag: true});\r\n    }\r\n\r\n    const handleExit = (data) => {\r\n        setEnter({data:null, flag:false});\r\n    }\r\n\r\n    const handleStop = (data) => {\r\n        ////console.log(data, enter)\r\n        let aux = draggablesNodes.slice();\r\n        let newData;\r\n        \r\n        // for(let i=0;i<aux.length;i++){\r\n        //     try {\r\n        //         if(aux[i].toData.id===enter.data.id && aux[i].fromData.id)\r\n        //             //console.log('from')\r\n        //     } catch (error) {\r\n        //     }\r\n        // }\r\n        \r\n        if(enter.flag){\r\n            newData = {\r\n                from: \"startBox-\"+data.id,\r\n                to: \"endBox-\"+enter.data.id,\r\n                toData: enter.data,\r\n                fromData: data,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${data.grouper.name}-${data.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            aux.push(newData);\r\n            ////console.log('newData')\r\n            setDraggablesNodes(aux);\r\n        }\r\n    }\r\n\r\n    const isRelated = (id) => {\r\n        //console.log(id)\r\n        for(let i=0;i<draggablesNodes.length;i++){\r\n            if(`${draggablesNodes[i].toData.id}`===`${id}`)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const changeLineColor = (data, newClass) => {\r\n        ////console.log(id)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].toData.id===data.id)\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                };\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const changeLineColorFrom = (from, to, newClass) => {\r\n        ////console.log('from',from)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            // if(newSettings[i].style!=='relationship-line-selected'){\r\n            //     newSettings[i] = {\r\n            //         ...newSettings[i],\r\n            //         style: defaultStyleClass,\r\n            //     };\r\n            //     //continue;\r\n            // }\r\n            if(newSettings[i].fromData.id===from.id && newSettings[i].toData.id===to.id){\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                }; \r\n                //continue;\r\n            }\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const getRelations = (id) => {\r\n        let data = settings.slice();\r\n        let newData = [];\r\n        let response = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].toData.id===id && (data[i].style!=='relationship-line-selected'))\r\n                newData.push({from:data[i].fromData, to:data[i].toData});\r\n        }\r\n        \r\n        for(let i=0;i<newData.length;i++){\r\n            let flag = false;\r\n            for(let j=0;j<response.length;j++){\r\n                if(newData[i].from.id===response[j].from.id){\r\n                    flag = true;\r\n                }\r\n            }\r\n            if(!flag){\r\n                response.push(newData[i]);\r\n            }\r\n        }\r\n        ////console.log('data', data, id, newData)\r\n        return response;\r\n    }\r\n\r\n    const hanldeDelete = (data) => {\r\n        ////console.log(data)\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(!(newSettings[i].fromData.id===data.from.id && newSettings[i].toData.id===data.to.id)){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n\r\n        let aux2 = [];\r\n        let newDraggables = draggablesNodes.slice();\r\n        for(let i=0;i<newDraggables.length;i++){\r\n            ////console.log(newDraggables);\r\n            if(!(newDraggables[i].fromData.id===data.from.id && newDraggables[i].toData.id===data.to.id)){\r\n                aux2.push(newDraggables[i])\r\n            }\r\n        }\r\n        \r\n\r\n        setDraggablesNodes([...aux2]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    const cleanNodes = () => {\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].style==='relationship-line'){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n        \r\n        setDraggablesNodes([]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ScreenShot>\r\n                <div ref={ref}>\r\n                    {/*<ContextMenu\r\n                        ref={ref}\r\n                    />*/}\r\n                    {\r\n                       ////console.log(groupers,'groupers')\r\n                    }\r\n                    <ReactBezier settings={settings}>\r\n                        {/*<CustonCursor/>*/}\r\n                        <div className={classes.container}>\r\n                            <div className={classes.col} style={{marginRight:'30%'}}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                </div>*/}\r\n                                {\r\n                                    dataFrom.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <StartBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onStop={handleStop}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={classes.col}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                            </div>*/}\r\n                                {\r\n                                    dataTo.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index} style={{position: 'relative'}}>\r\n                                                <EndBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onEnter={handleEnter}\r\n                                                    onExit={handleExit}\r\n                                                    related={isRelated(data.id)}\r\n\r\n                                                    onEnterDelete={()=>{/*changeLineColor(data, 'relationship-line-delete')*/}}\r\n                                                    onExitDelete={()=>{/*changeLineColor(data, 'relationship-line')*/}}//cambia el color a lines que llegan a un nodo final\r\n\r\n                                                    relations={getRelations(data.id)}\r\n\r\n                                                    onEnterItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line-delete')}\r\n                                                    onLeaveItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line '+`stroke-color-${data.from.grouper.name}-${data.from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"))}//cambia el color de la linea\r\n\r\n                                                    onDelete={(data)=>hanldeDelete(data)}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </ReactBezier>\r\n                </div>\r\n            </ScreenShot>\r\n            <div style={{display: 'flex'}}>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={cleanNodes}>\r\n                    <CleaningServicesIcon/>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RelatableBoxes;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function BasicTabs({tabs=[], children, onChange}) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if(onChange)\r\n        onChange(newValue)\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n          {\r\n              tabs.map((data, index)=>\r\n                <Tab key={index} label={data.name} {...a11yProps(index)} />\r\n              )\r\n          }\r\n        </Tabs>\r\n      </Box>\r\n      {\r\n          tabs.map((data, index)=>\r\n            <TabPanel key={index} value={value} index={index}>\r\n                {children}\r\n            </TabPanel>\r\n          )\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../Components/ConfirmDialog';\r\nimport FullScreenDialog from '../../Components/FullScreenDialog';\r\n\r\nimport Groupers from './Groupers';\r\nimport Skus from './Skus';\r\nimport Variables from './Variables';\r\n\r\n//temporal\r\nimport RelatableBoxes from '../../Components/RelatableBoxes';\r\nimport styled from 'styled-components';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport ColorPicker from '../../Components/ColorPicker';\r\nimport Tabs from '../../Components/Tabs';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst getid = () => {\r\n    return `${(Math.random() * (1000 - 1) + 1)}`.split('.').join(\"\");\r\n}\r\n\r\nconst initialValues = {\r\n    category: {\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n        id:getid()\r\n    },\r\n    subcategories: [],\r\n    groupers: [],\r\n    skus:[],\r\n    relations:[],\r\n}\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title:'SKU '+ {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        //marginTop: theme.spacing(1),\r\n        //marginRight: theme.spacing(1), \r\n    },\r\n    actionsContainer: {\r\n        //marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        //padding: theme.spacing(3),\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Carga tus categorias y subcategorias', 'Carga tus marcas y SKU', 'Relaciona tus SKUs con los de la competencia', 'Carga tus variables'];\r\n}\r\n\r\nconst NewData = ({onUpdate, onFinish}) => {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const [state, setState] = React.useState({\r\n        ...initialValues\r\n    });\r\n\r\n    const [subStep, setSubStep] = React.useState({\r\n        step: 0\r\n    })\r\n\r\n    const [category, setCategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n    });\r\n    \r\n    const [subcategory, setSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        totalSale:'',\r\n        totalSaleValue:'',\r\n        totalSaleUnit:'',\r\n        category:null,\r\n        color:randomColor()\r\n    });\r\n\r\n    const [editSubcategory, setEditSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        totalSale:'',\r\n        totalSaleValue:'',\r\n        totalSaleUnit:'',\r\n        category:null,\r\n    });\r\n\r\n    const [openEditSubcategory, setOpenEditSubcategory] = React.useState(false);\r\n\r\n    const [tab, setTab] = React.useState(0);\r\n    \r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleInputChangeCategory = (e) => {\r\n        const {name, value} = e.target;\r\n        setState({...state, category: {...state.category, [name]:value}});\r\n    }\r\n\r\n    const pushCategory = () => {\r\n        let data = category;\r\n        setState({\r\n            ...state,\r\n            categories:[...state.categories, {...data, id:state.categories.length}],\r\n        });\r\n        setCategory({name:'',description:''});\r\n    }\r\n\r\n    const handleInputChangeSubcategories = (e) => {\r\n        const {name, value} = e.target;\r\n        setSubcategory({...subcategory, [name]:value});\r\n    }\r\n\r\n    const pushSubcategory = () => {\r\n        let data = subcategory;\r\n        setState({\r\n            ...state,\r\n            subcategories:[...state.subcategories, {...data, id:getid(), category: state.category}],\r\n        });\r\n        setSubcategory({name:'',description:'', category:'', totalSale: '', totalSaleValue: '', totalSaleUnit:'', color:randomColor()});\r\n    }\r\n\r\n    const handleRemoveSubcategory = (index) => {\r\n        let subcategories = state.subcategories.slice();\r\n        subcategories.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            subcategories:[...subcategories],\r\n        });\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        let groupers = state.groupers.slice();\r\n        groupers.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            groupers:[...groupers],\r\n        });\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        let skus = state.skus.slice();\r\n        skus.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            skus:[...skus],\r\n        });\r\n    }\r\n\r\n    const getSubcategories = () => {\r\n        return (\r\n            state.subcategories.map((data, index) => \r\n                <React.Fragment key={index}>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta subcategoria?'\r\n                                title='Esta seguro de eliminar esta subcategoria?'\r\n                                onOk={()=>{handleRemoveSubcategory(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditSubcategory(!openEditSubcategory);\r\n                                setEditSubcategory({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const pushGrouper = (data) => {\r\n        setState({\r\n            ...state,\r\n            groupers:[...state.groupers, {...data, id: getid()}],\r\n        });\r\n    }\r\n\r\n    const pushSku = (data) => {\r\n        let newSkus = JSON.parse(JSON.stringify(data));\r\n        for(let i=0;i<newSkus.length;i++){\r\n            newSkus[i] = {...newSkus[i], id:getid()};\r\n            delete newSkus[i]['checked'];\r\n        }\r\n        newSkus = [...state.skus, ...newSkus];\r\n        \r\n        setState({\r\n            ...state,\r\n            skus:[...newSkus],\r\n        });\r\n        /*setState({\r\n            ...state,\r\n            skus:[...state.skus, {...data, id:getid()}],\r\n        });*/\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    const sortSkus = (base, sorted, brands) => {\r\n        let aux = [];\r\n        let skus = [];\r\n\r\n        //console.log(brands, sorted)\r\n        for(let j=0;j<brands.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                if(`${brands[j].id}`===`${sorted[i].grouper.id}`){\r\n                    skus.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.log(skus)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<skus.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${skus[i].subcategory.id}`){\r\n                    aux.push(skus[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const getClasses = () => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<state.groupers.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                ['.'+(`stroke-color-${state.groupers[i].name}-${state.groupers[i].id}`.replace(/\\s/g, '_').split('.').join(\"\"))]:{\r\n                    stroke:`${state.groupers[i].color} !important`\r\n                }\r\n            };\r\n        }\r\n        ////console.log(JSON.stringify(lineClasses))\r\n        return lineClasses;\r\n    }\r\n\r\n    const handleUpdate = (data) => {\r\n        setState({...state, relations: data})\r\n    }\r\n\r\n    const skuFilter = (index) => {\r\n        let newSkus = [];\r\n        for(let i=0;i<state.skus.length;i++){\r\n            if(state.skus[i].subcategory.id===state.subcategories[index].id)\r\n                newSkus.push(state.skus[i])\r\n            //console.log(state.skus[i].subcategory.id, state.subcategories[index].id)\r\n        }\r\n        return (newSkus);\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div>\r\n                        {   subStep.step===0?\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"primary\">\r\n                                                Categoria\r\n                                            </Typography>\r\n                                            <Typography color=\"inherit\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade los datos de la categoria\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.description}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >  \r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            disabled\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={\r\n                                                ()=>{\r\n                                                    setSubStep({step:1}); \r\n                                                    if(subStep.step===1){\r\n                                                        setActiveStep(1); \r\n                                                        setSubStep({step:0})\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            disabled={state.category.name===''}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"inherit\">\r\n                                                Categorias\r\n                                            </Typography>\r\n                                            <Typography color=\"primary\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade o elimina subcategorias para <span style={{textTransform:'capitalize'}}>{state.category.name}</span>\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                                    </Grid>\r\n                                    { getSubcategories() }\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.description}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <ColorPicker\r\n                                            onChangeComplete={handleInputChangeSubcategories}\r\n                                            name='color'\r\n                                            value={subcategory.color}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Venta total\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='totalSale'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.totalSale}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel>Unidad *</InputLabel>\r\n                                            <Select\r\n                                                //value={age}\r\n                                                name={'totalSaleUnit'}\r\n                                                label=\"Unidad *\"\r\n                                                value={subcategory.totalSaleUnit}\r\n                                                onChange={handleInputChangeSubcategories}\r\n                                            >\r\n                                                <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                                <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                                <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                                <MenuItem value={'T'}>T</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Total de ventas $\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='totalSaleValue'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.totalSaleValue}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <div style={{height: '100%', display: 'flex', justifyContent: 'left', alignItems:'center'}}>\r\n                                            {/*<DeleteIcon/>*/}\r\n                                            <Button\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={pushSubcategory}\r\n                                                disabled={subcategory.name===''}\r\n                                            >\r\n                                                Guardar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1){setActiveStep(1); setSubStep({step:0})}}}\r\n                                            disabled={state.subcategories.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                                <Modal\r\n                                    open={openEditSubcategory}\r\n                                    onClose={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                >\r\n                                    <Paper \r\n                                        className={classes.modal}\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    variant='h6'\r\n                                                    align=\"left\"\r\n                                                >\r\n                                                    Editar subcategoria\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    label=\"Nombre\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    name='name'\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, name:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.name}\r\n                                                    required\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Descripcion\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='description'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, description:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.description}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <ColorPicker\r\n                                                    onChangeComplete={(e)=>{\r\n                                                        //console.log(e)\r\n                                                        setEditSubcategory({...editSubcategory, color:e.target.value})\r\n                                                    }}\r\n                                                    name='color'\r\n                                                    value={editSubcategory.color}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={3}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Venta total\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='totalSale'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        //console.log(e)\r\n                                                        setEditSubcategory({...editSubcategory, totalSale:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.totalSale}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel>Unidad *</InputLabel>\r\n                                                    <Select\r\n                                                        //value={age}\r\n                                                        name={'totalSaleUnit'}\r\n                                                        label=\"Unidad *\"\r\n                                                        value={editSubcategory.totalSaleUnit}\r\n                                                        onChange={(e)=>{\r\n                                                            //console.log(e)\r\n                                                            setEditSubcategory({...editSubcategory, totalSaleUnit:e.target.value})\r\n                                                        }}\r\n                                                    >\r\n                                                        <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                                        <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                                        <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                                        <MenuItem value={'T'}>T</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Total de ventas $\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='totalSaleValue'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        //console.log(e)\r\n                                                        setEditSubcategory({...editSubcategory, totalSaleValue:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.totalSaleValue}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Stack spacing={2} direction=\"row\">\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='secondary'\r\n                                                        onClick={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                                    >\r\n                                                        Cancelar\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='primary'\r\n                                                        onClick={()=>{\r\n                                                            //updatesubcategories\r\n                                                            let aux = state.subcategories.slice();\r\n                                                            let auxSkus = state.skus.slice();\r\n                                                            aux[editSubcategory.index] = editSubcategory;\r\n                                                            setOpenEditSubcategory(!openEditSubcategory);\r\n                                                            //console.log(state.skus)\r\n                                                            for(let i=0;i<auxSkus.length;i++){\r\n                                                                if(auxSkus[i].subcategory.id===editSubcategory.id){\r\n                                                                    auxSkus[i].subcategory=editSubcategory;\r\n                                                                }\r\n                                                            }\r\n                                                            setState({...state, subcategories: aux, skus: auxSkus});\r\n                                                        }}\r\n                                                        disabled={editSubcategory.name===''}\r\n                                                    >\r\n                                                        Actualizar\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Modal>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                <Typography color={subStep.step===0?\"primary\":\"inherit\"}>\r\n                                    Marcas\r\n                                </Typography>\r\n                                <Typography  color={subStep.step===1?\"primary\":\"inherit\"}>\r\n                                    SKUs\r\n                                </Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                        {subStep.step===0?\r\n                            <>\r\n                                <Groupers\r\n                                    groupers={state.groupers} \r\n                                    pushGrouper={pushGrouper}\r\n                                    updateGroupers={(data)=>{\r\n                                        //console.log('upating groupers', data)\r\n                                        let newSkus = JSON.parse(JSON.stringify(state.skus));\r\n                                        for(let i=0;i<newSkus.length;i++){\r\n                                            for(let j=0;j<data.length;j++){\r\n                                                if(newSkus[i].grouper.id===data[j].id){\r\n                                                    newSkus[i].grouper=data[j];\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        setState({...state, groupers:data, skus:newSkus});\r\n                                    }}\r\n                                    removeGrouper={handleRemoveGrouper}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setActiveStep(0); setSubStep({step:1})}}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.groupers.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Skus\r\n                                    groupers={state.groupers} \r\n                                    subcategories={state.subcategories}\r\n                                    //groupers={[{color:'#eeefaf', name:'primer agrupador'},{color:'#25fafa', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}]}\r\n                                    //subcategories={[{name:'primero'},{name:'2'},{name:'uno con texto largo'},{name:'uno mas'}]}\r\n                                    pushSku={pushSku}\r\n                                    skus={state.skus}\r\n                                    updateSkus={(data)=>{\r\n                                        setState({...state, skus: data})\r\n                                    }}\r\n                                    removeSku={handleRemoveSku}\r\n                                    onFilter={(data)=>{\r\n                                        setState({...state, filter: data})\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.skus.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </React.Fragment>\r\n                );\r\n            case 2:\r\n            return(\r\n                <>\r\n                    <Grid container alignItems='center' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align='left'\r\n                            >\r\n                                Relaciona tus SKU con los de los competidores\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='caption'\r\n                                align='left'\r\n                                display='block'\r\n                                color='#aaa'\r\n                            >\r\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                // <RelatableBoxes\r\n                                //     dataFrom = {[...state.skus]}\r\n                                //     dataTo = {[...state.skus]}\r\n                                //     lineClasses={getClasses()}\r\n                                //     onUpdate={handleUpdate}\r\n                                //     relations={state.relations}\r\n                                // />\r\n                            }\r\n                            <Tabs\r\n                                tabs={state.subcategories}\r\n                                onChange={(index)=>{\r\n                                    //skuFilter(index);\r\n                                    setTab(index);\r\n                                }}\r\n                            >\r\n                                <RelatableBoxes\r\n                                     dataFrom = {[...skuFilter(tab)]}\r\n                                     dataTo = {[...skuFilter(tab)]}\r\n                                     lineClasses={getClasses()}\r\n                                     onUpdate={handleUpdate}\r\n                                     relations={state.relations}\r\n                                 />\r\n                            </Tabs>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{setActiveStep(1)}}\r\n                                disabled={subStep.step===0}\r\n                            >\r\n                                Volver\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setActiveStep(3)\r\n                                    //onUpdate(state);\r\n                                    //onFinish();\r\n                                }}\r\n                            >\r\n                                Siguiente\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            );\r\n            case 3:\r\n                return (\r\n                    <>\r\n                    <Grid container alignItems='center' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Variables\r\n                                subcategories={state.subcategories}\r\n                                skus={state.skus}\r\n                                brands={state.groupers}\r\n                                category={state.category}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{setActiveStep(2)}}\r\n                                disabled={subStep.step===0}\r\n                            >\r\n                                Volver\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setActiveStep(3)\r\n                                    //onUpdate(state);\r\n                                    //onFinish();\r\n                                }}\r\n                            >\r\n                                Siguiente\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                    </>\r\n                );\r\n            \r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv classes={getClasses()}>\r\n            <Grid container alignItems='flex-start' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.root}>\r\n                        <Stepper activeStep={activeStep} orientation=\"horizontal\" alternativeLabel>\r\n                            {steps.map((label, index) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                                <StepContent>\r\n                                    <div className={classes.actionsContainer}>\r\n                                        <div>\r\n                                            {\r\n                                            // <Button\r\n                                            //     disabled={activeStep === 0}\r\n                                            //     onClick={handleBack}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     Back\r\n                                            // </Button>\r\n                                            // <Button\r\n                                            //     variant=\"contained\"\r\n                                            //     color=\"primary\"\r\n                                            //     onClick={handleNext}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                            // </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </StepContent>\r\n                            </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        {\r\n                            // activeStep === steps.length && (\r\n                            // <Paper square elevation={0} className={classes.resetContainer}>\r\n                            //     <Typography>All steps completed - you&apos;re finished</Typography>\r\n                            //     <Button onClick={handleReset} className={classes.button}>\r\n                            //         Reset\r\n                            //     </Button>\r\n                            // </Paper>\r\n                            // )\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper \r\n                        variant=\"outlined\"\r\n                        style={{padding:'1em'}}\r\n                    >\r\n                        <Grid container alignItems='center' spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <LinearProgress variant=\"determinate\" value={activeStep*33.333} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <div>\r\n                                    {\r\n                                        getStepContent(activeStep)\r\n                                    }\r\n                                    {\r\n                                        ////console.log(state.groupers,'groupers')\r\n                                    }\r\n                                    {\r\n                                        activeStep<3?\r\n                                            <FullScreenDialog\r\n                                                skus={sortSkus( state.subcategories, state.skus, state.groupers)}\r\n                                                categories={[state.category]}\r\n                                                subcategories={sortSubcategories( [state.category], state.subcategories)}\r\n                                                brands={state.groupers}\r\n                                                filters={\r\n                                                    state.filter\r\n                                                }\r\n                                            />\r\n                                        :\r\n                                            <></>\r\n                                    }\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default NewData;","import React from 'react';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Button from '@mui/material/Button';\r\nimport FullScreenDialog from '../../../Components/FullScreenDialog';\r\n\r\nconst Category = ({data}) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        //console.log('test')\r\n        setOpen(!open);\r\n    }\r\n \r\n    const sortSkus = (base, sorted, brands) => {\r\n        let aux = [];\r\n        let skus = [];\r\n\r\n        //console.log(brands, sorted)\r\n        for(let j=0;j<brands.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                if(`${brands[j].id}`===`${sorted[i].grouper.id}`){\r\n                    skus.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.log(skus)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<skus.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${skus[i].subcategory.id}`){\r\n                    aux.push(skus[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper \r\n                        variant=\"outlined\"\r\n                        style={{padding:'1em'}}\r\n                    >\r\n                        <div>\r\n                            <Grid container alignItems='center' spacing={1} alignItems=\"stretch\">\r\n                                <Grid item xs={12}>\r\n                                    <Typography \r\n                                        variant='subtitle1'\r\n                                        align='left'\r\n                                        style={{textTransform:'capitalize'}}\r\n                                    >\r\n                                        {data.category.name}\r\n                                    </Typography>\r\n                                    <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                        {data.category.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left'>\r\n                                    <FullScreenDialog\r\n                                        skus={sortSkus( data.subcategories, data.skus, data.groupers)}\r\n                                        categories={[data.category]}\r\n                                        subcategories={sortSubcategories( [data.category], data.subcategories)}\r\n                                        brands={data.groupers}\r\n                                        position='relative'\r\n                                    >\r\n                                        <Button variant=\"outlined\">\r\n                                            Ver grafico\r\n                                        </Button>\r\n                                    </FullScreenDialog>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left' style={{marginBottom: open ? '1.5em': '0'}}>\r\n                                    {open ? <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver menos <ExpandLess/></div> : <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver mas <ExpandMore/></div>}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n                                    <Grid item xs={12} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Subcategorias\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.subcategories.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.description}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={12} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Marcas\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.groupers.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.maker}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                SKUs\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.skus.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography key={index} variant='body2' align='left'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.grouper.name} / {data.grouper.maker}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.content} {data.unit} / {data.presentation}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport NewData from '../NewData';\r\nimport Category from './Category';\r\n\r\nconst Categories = () => {\r\n\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [waiting, setWaiting] = React.useState(false);\r\n\r\n    return (\r\n        <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={3}>\r\n                <div style={{display: 'flex', flexDirection: 'column', position:'relative', height:'calc(100vh - 4em)', borderRight:'1px solid rgba(0, 0, 0, 0.12)', justifyContent: 'space-between'}}>\r\n                    <div style={{position: 'relative', maxHeight:'calc(100vh - 8em)', overflow:'auto', boxSizing:'border-box', padding:'1.5em'}}>\r\n                        {\r\n                            categories.map((state, index)=>{\r\n                                return (\r\n                                <div key={index} style={{marginBottom:'1em'}}>\r\n                                    <Category\r\n                                        data={state}\r\n                                    />\r\n                                </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div style={{padding:'1em', boxSizing:'border-box', borderTop:'1px solid rgba(0, 0, 0, 0.12)'}}>\r\n                        <Stack spacing={2}>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                \r\n                                }}\r\n                                disabled={categories.length===0}\r\n                            >\r\n                                Continuar\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={9} style={{padding:'1.5em', overflow:'auto', maxHeight: 'calc(100vh - 4em)'}}>\r\n                {waiting?\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em',\r\n                            height: '80vh',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2}>\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{\r\n                                    setWaiting(false);\r\n                                }}\r\n                            >\r\n                                Agregar otra categoria\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                    :\r\n                    <div style={{padding:'1.5em'}}>\r\n                        <NewData\r\n                            onUpdate={(data)=>{\r\n                                setCategories([...categories, data])\r\n                            }}\r\n                            onFinish={()=>{\r\n                                setWaiting(true);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Categories;","import React from 'react';\r\nimport 'chart.js/auto';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n  const sample = [[6.4,3807.36085151104],\r\n  [6.45,3925.08815281955],\r\n  [6.5,4041.55684226877],\r\n  [6.55,4156.7669198587],\r\n  [6.6,4270.71838558933],\r\n  [6.65,4383.41123946067],\r\n  [6.7,4494.84548147272],\r\n  [6.75,4605.02111162548],\r\n  [6.8,4713.93812991894],\r\n  [6.85,4821.59653635311],\r\n  [6.9,4927.99633092799],\r\n  [6.95,5033.13751364358],\r\n  [7,5137.02008449987],\r\n  [7.05,5239.64404349688],\r\n  [7.1,5341.00939063458],\r\n  [7.15,5441.116125913],\r\n  [7.2,5539.96424933212],\r\n  [7.25,5637.55376089196],\r\n  [7.3,5733.8846605925],\r\n  [7.35,5828.95694843374],\r\n  [7.4,5922.7706244157],\r\n  [7.45,6015.32568853836],\r\n  [7.5,6106.62214080173],\r\n  [7.55,6196.65998120581],\r\n  [7.6,6285.43920975059],\r\n  [7.65,6372.95982643609],\r\n  [7.7,6459.22183126228],\r\n  [7.75,6544.22522422919],\r\n  [7.8,6627.97000533681],\r\n  [7.85,6710.45617458513],\r\n  [7.9,6791.68373197416],\r\n  [7.95,6871.6526775039],\r\n  [8,6950.36301117435],\r\n  [8.05,7027.8147329855],\r\n  [8.1,7104.00784293736],\r\n  [8.15,7178.94234102993],\r\n  [8.2,7252.61822726321],\r\n  [8.25,7325.03550163719],\r\n  [8.3,7396.19416415189],\r\n  [8.35,7466.09421480729],\r\n  [8.4,7534.73565360339],\r\n  [8.45,7602.11848054021],\r\n  [8.5,7668.24269561773],\r\n  [8.55,7733.10829883596],\r\n  [8.6,7796.7152901949],\r\n  [8.65,7859.06366969454],\r\n  [8.7,7920.15343733489],\r\n  [8.75000000000001,7979.98459311595],\r\n  [8.80000000000001,8038.55713703772],\r\n  [8.85000000000001,8095.8710691002],\r\n  [8.90000000000001,8151.92638930338],\r\n  [8.95000000000001,8206.72309764727],\r\n  [9.00000000000001,8260.26119413187],\r\n  [9.05000000000001,8312.54067875717],\r\n  [9.10000000000001,8363.56155152318],\r\n  [9.15000000000001,8413.32381242991],\r\n  [9.20000000000001,8461.82746147733],\r\n  [9.25000000000001,8509.07249866547],\r\n  [9.30000000000001,8555.05892399431],\r\n  [9.35000000000001,8599.78673746386],\r\n  [9.40000000000001,8643.25593907412],\r\n  [9.45000000000002,8685.46652882508],\r\n  [9.50000000000002,8726.41850671676],\r\n  [9.55000000000002,8766.11187274914],\r\n  [9.60000000000002,8804.54662692222],\r\n  [9.65000000000002,8841.72276923602],\r\n  [9.70000000000002,8877.64029969052],\r\n  [9.75000000000002,8912.29921828573],\r\n  [9.80000000000002,8945.69952502165],\r\n  [9.85000000000002,8977.84121989828],\r\n  [9.90000000000002,9008.72430291561],\r\n  [9.95000000000002,9038.34877407365],\r\n  [10,9066.7146333724],\r\n  [10.05,9093.82188081186],\r\n  [10.1,9119.67051639202],\r\n  [10.15,9144.26054011289],\r\n  [10.2,9167.59195197447],\r\n  [10.25,9189.66475197676],\r\n  [10.3,9210.47894011975],\r\n  [10.35,9230.03451640345],\r\n  [10.4,9248.33148082786],\r\n  [10.45,9265.36983339297],\r\n  [10.5,9281.1495740988],\r\n  [10.55,9295.67070294533],\r\n  [10.6,9308.93321993257],\r\n  [10.65,9320.93712506051],\r\n  [10.7,9331.68241832917],\r\n  [10.75,9341.16909973853],\r\n  [10.8,9349.3971692886],\r\n  [10.85,9356.36662697937],\r\n  [10.9,9362.07747281086],\r\n  [10.95,9366.52970678305],\r\n  [11,9369.72332889595],\r\n  [11.05,9371.65833914955],\r\n  [11.1,9372.33473754387],\r\n  [11.15,9371.75252407889],\r\n  [11.2,9369.91169875462],\r\n  [11.25,9366.81226157105],\r\n  [11.3,9362.4542125282],\r\n  [11.35,9356.83755162605],\r\n  [11.4,9349.96227886461],\r\n  [11.45,9341.82839424388],\r\n  [11.5,9332.43589776385],\r\n  [11.55,9321.78478942453],\r\n  [11.6,9309.87506922592],\r\n  [11.65,9296.70673716802],\r\n  [11.7,9282.27979325082],\r\n  [11.75,9266.59423747433],\r\n  [11.8,9249.65006983855],\r\n  [11.8500000000001,9231.44729034348],\r\n  [11.9000000000001,9211.98589898911],\r\n  [11.9500000000001,9191.26589577546],\r\n  [12.0000000000001,9169.28728070251],\r\n  [12.0500000000001,9146.05005377026],\r\n  [12.1000000000001,9121.55421497873],\r\n  [12.1500000000001,9095.7997643279],\r\n  [12.2000000000001,9068.78670181778],\r\n  [12.2500000000001,9040.51502744836],\r\n  [12.3000000000001,9010.98474121966],\r\n  [12.3500000000001,8980.19584313166],\r\n  [12.4000000000001,8948.14833318437],\r\n  [12.4500000000001,8914.84221137779],\r\n  [12.5000000000001,8880.27747771191],\r\n  [12.5500000000001,8844.45413218675],\r\n  [12.6000000000001,8807.37217480229],\r\n  [12.6500000000001,8769.03160555853],\r\n  [12.7000000000001,8729.43242445549],\r\n  [12.7500000000001,8688.57463149315],\r\n  [12.8000000000001,8646.45822667152],\r\n  [12.8500000000001,8603.0832099906],\r\n  [12.9000000000001,8558.44958145038],\r\n  [12.9500000000001,8512.55734105088],\r\n  [13.0000000000001,8465.40648879208],\r\n  [13.0500000000001,8416.99702467398],\r\n  [13.1000000000001,8367.3289486966],\r\n  [13.1500000000001,8316.40226085992],\r\n  [13.2000000000001,8264.21696116395],\r\n  [13.2500000000001,8210.77304960869],\r\n  [13.3000000000001,8156.07052619413],\r\n  [13.3500000000001,8100.10939092029],\r\n  [13.4000000000001,8042.88964378715],\r\n  [13.4500000000001,7984.41128479472],\r\n  [13.5000000000001,7924.67431394299],\r\n  [13.5500000000001,7863.67873123197],\r\n  [13.6000000000001,7801.42453666166],\r\n  [13.6500000000001,7737.91173023206],\r\n  [13.7000000000001,7673.14031194317],\r\n  [13.7500000000001,7607.11028179498],\r\n  [13.8000000000001,7539.8216397875],\r\n  [13.8500000000001,7471.27438592073],\r\n  [13.9000000000001,7401.46852019466],\r\n  [13.9500000000001,7330.40404260931],\r\n  [14.0000000000001,7258.08095316466],\r\n  [14.0500000000001,7184.49925186072],\r\n  [14.1000000000001,7109.65893869748],\r\n  [14.1500000000001,7033.56001367496],\r\n  [14.2000000000001,6956.20247679314],\r\n  [14.2500000000001,6877.58632805202],\r\n  [14.3000000000001,6797.71156745162],\r\n  [14.3500000000001,6716.57819499192],\r\n  [14.4000000000001,6634.18621067293],\r\n  [14.4500000000001,6550.53561449465],\r\n  [14.5000000000001,6465.62640645708],\r\n  [14.5500000000001,6379.45858656021],\r\n  [14.6000000000001,6292.03215480405],\r\n  [14.6500000000001,6203.3471111886],\r\n  [14.7000000000001,6113.40345571386],\r\n  [14.7500000000001,6022.20118837982],\r\n  [14.8000000000001,5929.74030918649],\r\n  [14.8500000000001,5836.02081813387],\r\n  [14.9000000000001,5741.04271522196],\r\n  [14.9500000000001,5644.80600045075],\r\n  [15.0000000000001,5547.31067382025],\r\n  [15.0500000000001,5448.55673533046],\r\n  [15.1000000000001,5348.54418498138],\r\n  [15.1500000000001,5247.273022773],\r\n  [15.2000000000001,5144.74324870533],\r\n  [15.2500000000001,5040.95486277837],\r\n  [15.3000000000001,4935.90786499212],\r\n  [15.3500000000001,4829.60225534657],\r\n  [15.4000000000001,4722.03803384173],\r\n  [15.4500000000001,4613.2152004776],\r\n  [15.5000000000001,4503.13375525418],\r\n  [15.5500000000001,4391.79369817146],\r\n  [15.6000000000001,4279.19502922946],\r\n  [15.6500000000001,4165.33774842815],\r\n  [15.7000000000001,4050.22185576756],\r\n  [15.7500000000001,3933.84735124768],\r\n  [15.8000000000001,3816.2142348685],];\r\n\r\n  const max = [null,null,null,null,null,8.56]\r\n\r\n\r\nexport default ({type='bar'}) => {\r\n    React.useEffect(()=>{\r\n        //console.log('as',sample.map(i=>i[0]))        \r\n    },[])\r\n    return (\r\n        <>\r\n        {\r\n            //console.log('as',sample.map(i=>i[0]))\r\n        }\r\n        <Chart\r\n            data={{\r\n                //labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                datasets: [\r\n                    {\r\n                        type: type,\r\n                        //fill: false,\r\n                        //backgroundColor:'red',\r\n                        //borderColor:'blue',\r\n                        data: [10,50,200,30,150],\r\n                        label: 'sample 2',\r\n                        backgroundColor: [\r\n                            'rgba(50, 200, 100, .5)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                        ],\r\n                    },\r\n                    /*{\r\n                        type: 'line',\r\n                        //fill: false,\r\n                        //backgroundColor:'red',\r\n                        //borderColor:'blue',\r\n                        data: [...sample.map(i=>i[1])],\r\n                        label: 'sample legend',\r\n                        color:'red',\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                        ],\r\n                        // This binds the dataset to the left y axis\r\n                        yAxisID: 'left-y-axis'\r\n                    }, */\r\n                    // {\r\n                    //     type: 'bar',\r\n                    //     data: [0.1, 0.5, 1.0, 2.0, 1.5, 0],\r\n                    //     label: 'Right dataset',\r\n                    //     backgroundColor: [\r\n                    //         'rgba(50, 200, 100, .5)',\r\n                    //         'rgba(54, 162, 235, 1)',\r\n                    //         'rgba(255, 206, 86, 1)',\r\n                    //         'rgba(75, 192, 192, 1)',\r\n                    //         'rgba(153, 102, 255, 1)',\r\n                    //         'rgba(255, 159, 64, 1)',\r\n                    //     ],\r\n                    //     // This binds the dataset to the right y axis\r\n                    //     yAxisID: 'right-y-axis'\r\n                    // }\r\n                ],\r\n                labels: [1,2,3,4,5]\r\n                }\r\n            }\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    yAxes: [\r\n                    {\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                        },\r\n                    },\r\n                    ],\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        fontSize: 25,\r\n                    },\r\n                },\r\n            }}\r\n        />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport functionPlot from \"function-plot\";\r\n\r\n\r\nconst sample = [[6.4,3807.36085151104],\r\n  [6.45,3925.08815281955],\r\n  [6.5,4041.55684226877],\r\n  [6.55,4156.7669198587],\r\n  [6.6,4270.71838558933],\r\n  [6.65,4383.41123946067],\r\n  [6.7,4494.84548147272],\r\n  [6.75,4605.02111162548],\r\n  [6.8,4713.93812991894],\r\n  [6.85,4821.59653635311],\r\n  [6.9,4927.99633092799],\r\n  [6.95,5033.13751364358],\r\n  [7,5137.02008449987],\r\n  [7.05,5239.64404349688],\r\n  [7.1,5341.00939063458],\r\n  [7.15,5441.116125913],\r\n  [7.2,5539.96424933212],\r\n  [7.25,5637.55376089196],\r\n  [7.3,5733.8846605925],\r\n  [7.35,5828.95694843374],\r\n  [7.4,5922.7706244157],\r\n  [7.45,6015.32568853836],\r\n  [7.5,6106.62214080173],\r\n  [7.55,6196.65998120581],\r\n  [7.6,6285.43920975059],\r\n  [7.65,6372.95982643609],\r\n  [7.7,6459.22183126228],\r\n  [7.75,6544.22522422919],\r\n  [7.8,6627.97000533681],\r\n  [7.85,6710.45617458513],\r\n  [7.9,6791.68373197416],\r\n  [7.95,6871.6526775039],\r\n  [8,6950.36301117435],\r\n  [8.05,7027.8147329855],\r\n  [8.1,7104.00784293736],\r\n  [8.15,7178.94234102993],\r\n  [8.2,7252.61822726321],\r\n  [8.25,7325.03550163719],\r\n  [8.3,7396.19416415189],\r\n  [8.35,7466.09421480729],\r\n  [8.4,7534.73565360339],\r\n  [8.45,7602.11848054021],\r\n  [8.5,7668.24269561773],\r\n  [8.55,7733.10829883596],\r\n  [8.6,7796.7152901949],\r\n  [8.65,7859.06366969454],\r\n  [8.7,7920.15343733489],\r\n  [8.75000000000001,7979.98459311595],\r\n  [8.80000000000001,8038.55713703772],\r\n  [8.85000000000001,8095.8710691002],\r\n  [8.90000000000001,8151.92638930338],\r\n  [8.95000000000001,8206.72309764727],\r\n  [9.00000000000001,8260.26119413187],\r\n  [9.05000000000001,8312.54067875717],\r\n  [9.10000000000001,8363.56155152318],\r\n  [9.15000000000001,8413.32381242991],\r\n  [9.20000000000001,8461.82746147733],\r\n  [9.25000000000001,8509.07249866547],\r\n  [9.30000000000001,8555.05892399431],\r\n  [9.35000000000001,8599.78673746386],\r\n  [9.40000000000001,8643.25593907412],\r\n  [9.45000000000002,8685.46652882508],\r\n  [9.50000000000002,8726.41850671676],\r\n  [9.55000000000002,8766.11187274914],\r\n  [9.60000000000002,8804.54662692222],\r\n  [9.65000000000002,8841.72276923602],\r\n  [9.70000000000002,8877.64029969052],\r\n  [9.75000000000002,8912.29921828573],\r\n  [9.80000000000002,8945.69952502165],\r\n  [9.85000000000002,8977.84121989828],\r\n  [9.90000000000002,9008.72430291561],\r\n  [9.95000000000002,9038.34877407365],\r\n  [10,9066.7146333724],\r\n  [10.05,9093.82188081186],\r\n  [10.1,9119.67051639202],\r\n  [10.15,9144.26054011289],\r\n  [10.2,9167.59195197447],\r\n  [10.25,9189.66475197676],\r\n  [10.3,9210.47894011975],\r\n  [10.35,9230.03451640345],\r\n  [10.4,9248.33148082786],\r\n  [10.45,9265.36983339297],\r\n  [10.5,9281.1495740988],\r\n  [10.55,9295.67070294533],\r\n  [10.6,9308.93321993257],\r\n  [10.65,9320.93712506051],\r\n  [10.7,9331.68241832917],\r\n  [10.75,9341.16909973853],\r\n  [10.8,9349.3971692886],\r\n  [10.85,9356.36662697937],\r\n  [10.9,9362.07747281086],\r\n  [10.95,9366.52970678305],\r\n  [11,9369.72332889595],\r\n  [11.05,9371.65833914955],\r\n  [11.1,9372.33473754387],\r\n  [11.15,9371.75252407889],\r\n  [11.2,9369.91169875462],\r\n  [11.25,9366.81226157105],\r\n  [11.3,9362.4542125282],\r\n  [11.35,9356.83755162605],\r\n  [11.4,9349.96227886461],\r\n  [11.45,9341.82839424388],\r\n  [11.5,9332.43589776385],\r\n  [11.55,9321.78478942453],\r\n  [11.6,9309.87506922592],\r\n  [11.65,9296.70673716802],\r\n  [11.7,9282.27979325082],\r\n  [11.75,9266.59423747433],\r\n  [11.8,9249.65006983855],\r\n  [11.8500000000001,9231.44729034348],\r\n  [11.9000000000001,9211.98589898911],\r\n  [11.9500000000001,9191.26589577546],\r\n  [12.0000000000001,9169.28728070251],\r\n  [12.0500000000001,9146.05005377026],\r\n  [12.1000000000001,9121.55421497873],\r\n  [12.1500000000001,9095.7997643279],\r\n  [12.2000000000001,9068.78670181778],\r\n  [12.2500000000001,9040.51502744836],\r\n  [12.3000000000001,9010.98474121966],\r\n  [12.3500000000001,8980.19584313166],\r\n  [12.4000000000001,8948.14833318437],\r\n  [12.4500000000001,8914.84221137779],\r\n  [12.5000000000001,8880.27747771191],\r\n  [12.5500000000001,8844.45413218675],\r\n  [12.6000000000001,8807.37217480229],\r\n  [12.6500000000001,8769.03160555853],\r\n  [12.7000000000001,8729.43242445549],\r\n  [12.7500000000001,8688.57463149315],\r\n  [12.8000000000001,8646.45822667152],\r\n  [12.8500000000001,8603.0832099906],\r\n  [12.9000000000001,8558.44958145038],\r\n  [12.9500000000001,8512.55734105088],\r\n  [13.0000000000001,8465.40648879208],\r\n  [13.0500000000001,8416.99702467398],\r\n  [13.1000000000001,8367.3289486966],\r\n  [13.1500000000001,8316.40226085992],\r\n  [13.2000000000001,8264.21696116395],\r\n  [13.2500000000001,8210.77304960869],\r\n  [13.3000000000001,8156.07052619413],\r\n  [13.3500000000001,8100.10939092029],\r\n  [13.4000000000001,8042.88964378715],\r\n  [13.4500000000001,7984.41128479472],\r\n  [13.5000000000001,7924.67431394299],\r\n  [13.5500000000001,7863.67873123197],\r\n  [13.6000000000001,7801.42453666166],\r\n  [13.6500000000001,7737.91173023206],\r\n  [13.7000000000001,7673.14031194317],\r\n  [13.7500000000001,7607.11028179498],\r\n  [13.8000000000001,7539.8216397875],\r\n  [13.8500000000001,7471.27438592073],\r\n  [13.9000000000001,7401.46852019466],\r\n  [13.9500000000001,7330.40404260931],\r\n  [14.0000000000001,7258.08095316466],\r\n  [14.0500000000001,7184.49925186072],\r\n  [14.1000000000001,7109.65893869748],\r\n  [14.1500000000001,7033.56001367496],\r\n  [14.2000000000001,6956.20247679314],\r\n  [14.2500000000001,6877.58632805202],\r\n  [14.3000000000001,6797.71156745162],\r\n  [14.3500000000001,6716.57819499192],\r\n  [14.4000000000001,6634.18621067293],\r\n  [14.4500000000001,6550.53561449465],\r\n  [14.5000000000001,6465.62640645708],\r\n  [14.5500000000001,6379.45858656021],\r\n  [14.6000000000001,6292.03215480405],\r\n  [14.6500000000001,6203.3471111886],\r\n  [14.7000000000001,6113.40345571386],\r\n  [14.7500000000001,6022.20118837982],\r\n  [14.8000000000001,5929.74030918649],\r\n  [14.8500000000001,5836.02081813387],\r\n  [14.9000000000001,5741.04271522196],\r\n  [14.9500000000001,5644.80600045075],\r\n  [15.0000000000001,5547.31067382025],\r\n  [15.0500000000001,5448.55673533046],\r\n  [15.1000000000001,5348.54418498138],\r\n  [15.1500000000001,5247.273022773],\r\n  [15.2000000000001,5144.74324870533],\r\n  [15.2500000000001,5040.95486277837],\r\n  [15.3000000000001,4935.90786499212],\r\n  [15.3500000000001,4829.60225534657],\r\n  [15.4000000000001,4722.03803384173],\r\n  [15.4500000000001,4613.2152004776],\r\n  [15.5000000000001,4503.13375525418],\r\n  [15.5500000000001,4391.79369817146],\r\n  [15.6000000000001,4279.19502922946],\r\n  [15.6500000000001,4165.33774842815],\r\n  [15.7000000000001,4050.22185576756],\r\n  [15.7500000000001,3933.84735124768],\r\n  [15.8000000000001,3816.2142348685],];\r\n\r\n\r\nexport default ({points, xAxis, yAxis}) => {\r\n\r\n    React.useEffect(()=>{\r\n        functionPlot({\r\n            target: '#test',\r\n            data: [\r\n                {\r\n                    points: [\r\n                        ...points\r\n                    ],\r\n                    fnType: 'points',\r\n                    graphType: 'scatter',\r\n                    //graphType: 'polyline',\r\n                    color: 'blue'\r\n                },\r\n                // {\r\n                //     points: [\r\n                //         [8.56,7681.87].reverse()\r\n                //     ],\r\n                //     fnType: 'points',\r\n                //     graphType: 'scatter',\r\n                //     //graphType: 'polyline',\r\n                //     color: 'purple'\r\n                // },\r\n                // {\r\n                //     points: [\r\n                //         [10.22,9075.34].reverse()\r\n                //     ],\r\n                //     fnType: 'points',\r\n                //     graphType: 'scatter',\r\n                //     //graphType: 'polyline',\r\n                //     color: 'orange'\r\n                // },\r\n                // {\r\n                //     points: [\r\n                //         [11.06,9255.13].reverse()\r\n                //     ],\r\n                //     fnType: 'points',\r\n                //     graphType: 'scatter',\r\n                //     //graphType: 'polyline',\r\n                //     color: 'green'\r\n                // }\r\n            ],\r\n            // yAxis: {domain: [5, 17]},\r\n            // xAxis: {domain: [3000,10000]},\r\n            yAxis: yAxis,\r\n            xAxis: xAxis,\r\n            annotations: [\r\n                // {\r\n                //     y: 8.56,\r\n                //     text: 'MAXIMUM VALUE SALES = 8.56',\r\n                // },\r\n                // {\r\n                //     y: 10.22,\r\n                //     text: 'OPTIMUM = 10.22'\r\n                // },\r\n                // {\r\n                //     y: 11.06,\r\n                //     text: 'MAXIMUM GROSS PROFIT = 11.06'\r\n                // },\r\n            ]\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <div id='test'/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport RGL, { WidthProvider } from \"react-grid-layout\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Chart from '../../Components/Chart';\r\nimport Plot from '../../Components/Plot';\r\n\r\nconst ReactGridLayout = WidthProvider(RGL);\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n  .react-resizable-handle.react-resizable-handle-se{\r\n    width: .5em;\r\n    height: .5em;\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    border: 1px solid #333;\r\n    border-top: none;\r\n    border-left: none;\r\n    cursor: nw-resize;\r\n  }\r\n`;\r\n\r\nexport default class GridPropertyLayout extends React.PureComponent {\r\n  static defaultProps = {\r\n    isDraggable: true,\r\n    isResizable: true,\r\n    items: 5,\r\n    rowHeight: 30,\r\n    onLayoutChange: function() {},\r\n    cols: 6\r\n  };\r\n\r\n  generateDOM() {\r\n    // Generate items with properties from the layout, rather than pass the layout directly\r\n    const layout = this.generateLayout();\r\n    return _.map(_.range(this.props.items), function(i) {\r\n      return (\r\n        <div key={i} data-grid={layout[i]} style={{display: 'flex'}}>\r\n          <Paper \r\n            variant=\"outlined\"\r\n            style={{padding:'1em', width: '100%', boxSizing:'border-box', overflow:'hidden', backgroundColor:'#eee'}}\r\n          >\r\n            <Plot/>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  generateLayout() {\r\n    const p = this.props;\r\n    return _.map(new Array(p.items), function(item, i) {\r\n      var w = _.result(p, \"w\") || Math.ceil(Math.random() * 4);\r\n      var y = _.result(p, \"y\") || Math.ceil(Math.random() * 4) + 1;\r\n      return {\r\n        x: (i * 2) % 12,\r\n        y: Math.floor(i / 6) * y,\r\n        w: w,\r\n        h: y,\r\n        i: i.toString()\r\n      };\r\n    });\r\n  }\r\n\r\n  onLayoutChange(layout) {\r\n    this.props.onLayoutChange(layout);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '50vh', display: 'flex', width: '50vw'}}><Plot/></div>\r\n      \r\n      // <Wrapper>\r\n      //   <ReactGridLayout onLayoutChange={this.onLayoutChange} {...this.props}>\r\n      //     {this.generateDOM()}\r\n      //   </ReactGridLayout>\r\n      // </Wrapper>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n// const rows = [\r\n//   createData('dt', 159, 6.0, 24, 4.0),\r\n//   createData('Icdch', 237, 9.0, 37, 4.3),\r\n//   createData('Edir', 262, 16.0, 24, 6.0),\r\n//   createData('asd', 305, 3.7, 67, 4.3),\r\n//   createData('asd', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nexport default ({rows=[], heads=[], data=[]}) => {\r\n  return (\r\n    <Paper \r\n      variant=\"outlined\"\r\n      style={{padding:'1em'}}\r\n    >\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: '100%' }} aria-label=\"simple table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n              {\r\n                  heads.map((title, index)=>{\r\n                    return (\r\n                        <TableCell key={index}>{title}</TableCell>\r\n                    )\r\n                  })\r\n              }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n              data.map((item, i)=>{\r\n                  return (\r\n                        <TableRow\r\n                            key={i}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            {\r\n                                item.map((row, j) => {\r\n                                    return (\r\n                                        <TableCell key={`${i}${j}`}>{row}</TableCell>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableRow>\r\n                  )\r\n              })\r\n          }\r\n          {/* {rows.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>{row.calories}</TableCell>\r\n              <TableCell>{row.fat}</TableCell>\r\n              <TableCell>{row.carbs}</TableCell>\r\n              <TableCell>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))} */}\r\n\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/chart-illustration.53eb3457.jpg\";","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Grid from '@mui/material/Grid';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport Plot from '../../Components/Plot';\r\nimport Chart from '../../Components/Chart';\r\nimport Table from '../../Components/Table';\r\n\r\nimport img from '../../Assets/Img/chart-illustration.jpg';\r\n\r\nconst options = [\r\n  {\r\n    title:1//'Tablas históricas'\r\n  },\r\n  {\r\n    title:2//'Tablas comparativas'\r\n  },\r\n  {\r\n    title:3//'Gráficas de pie y barras'\r\n  },\r\n  {\r\n    title:4//'Gráficas 2D'\r\n  },\r\n  {\r\n    title:5//'Gráficas de burbujas'\r\n  },\r\n  {\r\n    title:6//'Gráficas'//(mensuales, trimestrales, semestrales, RY, YTD)\r\n  },\r\n  {\r\n    title:7//'Curvas de precios y simulador'\r\n  },\r\n  {\r\n    title:'Simulador'//'Simulador con tendencia'\r\n  },\r\n  {\r\n    title:9//'Simulador con tendencia'\r\n  },\r\n]\r\n\r\nexport default () => {\r\n\r\n  const [auth, setAuth] = React.useState({\r\n    access_token:null\r\n  });\r\n\r\n  const [data, setData] = React.useState({\r\n    skus: [],\r\n    simulation: null,\r\n    price:'',\r\n    curve:'price_profit', \r\n    points:[],\r\n    sku:null\r\n  })\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const [update, setUpdate] = React.useState(1)\r\n\r\n  const [option, setOption] = React.useState(0);\r\n\r\n\r\n  const getSkus = (token, cb) => {\r\n    \r\n      fetch(\"https://pricing.demo4to.com/api/pricing.sku?access-token=\"+token+\"&method=name_search\", {\r\n        'Access-Control-Allow-Origin': '*',\r\n        \"Content-Type\": \"application/json\",\r\n        method: \"GET\"\r\n      })   \r\n      .then(response => response.json())\r\n      .then(result => {\r\n        cb(result);\r\n      })\r\n      .catch(error => console.log('error2', error));\r\n  } \r\n\r\n  const findDomain = (nums) => {\r\n    //let max=-1000000000, min=1000000000000000;\r\n    /*for(let i=0;i<data.length;i++){\r\n      if(data[i]>max)\r\n        max=data[i];\r\n    }*/\r\n    return [Math.min(...nums),Math.max(...nums)];\r\n  }\r\n\r\n  const getCurve = () => {\r\n    let url = `https://pricing.demo4to.com/api/pricing.sku/${data.sku}?access-token=${auth.access_token}&method=get_table&price=${data.price}`;\r\n    let requestOptions = {\r\n      method: 'GET',\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    };\r\n    setLoading(true);\r\n    fetch(url, requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n      console.log(result)\r\n      let price_profit = [];\r\n      let price_quantity = [];\r\n      let price_value = [];\r\n      for(let i=0;i<result.data.table.price.length;i++){\r\n        price_profit.push([result.data.table.price[i], result.data.table.profit[i]]);\r\n       // price_profit.push([result.data.table.profit[i], result.data.table.value[i]]);\r\n        price_quantity.push([result.data.table.price[i], result.data.table.quantity[i]]);\r\n        price_value.push([result.data.table.price[i], result.data.table.value[i]]);\r\n      }\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setData({...data, ...result.data, simulation: {...result.data, price_profit, price_quantity, price_value, points:price_quantity}})\r\n      }, 3000);\r\n    })\r\n    .catch(error => {\r\n      console.log('error', error);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    });\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    };\r\n\r\n    fetch(\"https://pricing.demo4to.com/api/auth/token?login=admin&password=admin&db=pricing\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n      setAuth(result);\r\n      getSkus(result.access_token, (r)=>{\r\n        setData({...data, skus: r.data})\r\n      })\r\n    })\r\n    .catch(error => console.log('error', error));\r\n\r\n  },[]);\r\n\r\n  React.useEffect(()=>{\r\n    if(data.simulation)\r\n      setUpdate(update+1);\r\n  },[data.simulation]);\r\n\r\n  const truncateNumber = (number) => {\r\n    return (number+'').toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0];\r\n  }\r\n\r\n  const getContent = () => {\r\n    switch(option){\r\n      case 0:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  {\r\n                    data.skus.map((item, index)=>{\r\n                      return (\r\n                        <MenuItem value={'Rolling Year'} key={index}>{item[1]}</MenuItem>\r\n                      )\r\n                    })\r\n                  }\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar Variables</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Variables calculadas</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              \r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupadores</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={8} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                Tabla\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 1:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar Variables</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Variables calculadas</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button color=\"primary\"  variant='contained'>\r\n                Calcular\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupadores</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={8} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                Tabla\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 2:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Eje X</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                <Chart type='pie'/>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                <Chart type='bar'/>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 3:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Eje X</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Eje Y</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                <Plot/>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 4:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar Variables</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Variables calculadas</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                <Chart type='bubble'/>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 5:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar Variables</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Variables calculadas</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                <Chart type='bar'/>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 6:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Agrupacion de tiempo</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar Variables</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Variables calculadas</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em', display:'flex', height:'40vh'}}\r\n              >\r\n                <Chart type='bar'/>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em', display:'flex', height:'40vh'}}\r\n              >\r\n                <Chart type='bar'/>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      case 7:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Selecciona SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Agrupacion de tiempo\"\r\n                  /*value={subcategory.totalSaleUnit}*/\r\n                  onChange={(e)=>{\r\n                    setData({...data, sku:e.target.value});\r\n                  }}\r\n                >\r\n                  {\r\n                    data.skus.map((item, index)=>{\r\n                      return (\r\n                        <MenuItem value={item[0]} key={index}>{item[1]}</MenuItem>\r\n                      )\r\n                    })\r\n                  }\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Tipo de funcion</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Tipo de funcion\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Lineal</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Polinomial</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Logarítmica</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Tipo de curva</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Tipo de curva\"\r\n                  /*value={subcategory.totalSaleUnit}*/\r\n                  onChange={(e)=>{\r\n                    //console.log(e.target.value)\r\n                    if(e.target.value==='price_profit'){\r\n                      setData({...data, simulation: {...data.simulation, points:data.simulation.price_profit}});\r\n                    }\r\n                    if(e.target.value==='price_quantity'){\r\n                      setData({...data,  simulation: {...data.simulation, points:data.simulation.price_quantity}});\r\n                    }\r\n                    if(e.target.value==='price_value'){\r\n                      setData({...data,  simulation: {...data.simulation, points:data.simulation.price_value}});\r\n                    }\r\n                  }}\r\n                >\r\n                  <MenuItem value={'price_profit'}>Precio rentabilidad</MenuItem>\r\n                  <MenuItem value={'price_quantity'}>Precio cantidad</MenuItem>\r\n                  <MenuItem value={'price_value'}>Precio valor</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Mes</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Mes\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Año</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Año\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4} style={{display: 'flex'}}>\r\n                <Button onClick={()=>{getCurve()}} color='primary' variant='contained' size=\"large\">\r\n                  Simular\r\n                </Button>\r\n            </Grid>\r\n            {\r\n            data.simulation?\r\n            <>\r\n            <Grid item xs={6}>\r\n              <div style={{marginBottom:'1em'}}>\r\n                <Table\r\n                  heads={['Precio competidor', 'Distribucion', 'Inflacion', 'Pandemia']}\r\n                />\r\n              </div>\r\n              <div style={{marginBottom:'1em'}}>\r\n                <Table\r\n                  heads={['Precio', 'Cantidad', 'Venta', 'Rentabilidad']}\r\n                  data={[0,1,2].map((i)=>[truncateNumber(data.simulation.optimals.price[i]), truncateNumber(data.simulation.optimals.quantity[i]), truncateNumber(data.simulation.optimals.value[i]), truncateNumber(data.simulation.optimals.profit[i])])}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField \r\n                    id=\"\" \r\n                    label=\"Precio\" \r\n                    variant=\"outlined\" \r\n                    fullWidth\r\n                    name='price'\r\n                    onChange={(e)=>{\r\n                      setData({...data, price:e.target.value})\r\n                    }}\r\n                    // value={category.name}\r\n                    // required\r\n                />\r\n                <p>price: {data.simulation.user_point.price}</p>\r\n                <p>profit: {data.simulation.user_point.profit}</p>\r\n                <p>quantity: {data.simulation.user_point.quantity}</p>\r\n                <p>value: {data.simulation.user_point.value}</p>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                <div key={update}>\r\n                  <Plot\r\n                    points={data.simulation.points}\r\n                    xAxis={{domain: [...findDomain(data.simulation.points.map(i=>i[0]))]}}\r\n                    yAxis={{domain: [...findDomain(data.simulation.points.map(i=>i[1]))]}}\r\n                    optimals={data.optimals}\r\n                  />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            </>\r\n            :\r\n            <>\r\n              {\r\n              loading?\r\n                <Grid item xs={12} style={{display: 'flex', justifyContent:'center', marginTop: '20vh'}}>\r\n                  <ReactLoading type={'bars'} color=\"#fff\" />\r\n                </Grid>\r\n              :\r\n              <Grid item xs={12} style={{display: 'flex', justifyContent:'center', marginTop: '20vh'}}>\r\n                <div style={{width:'30vw'}}>\r\n                  <img src={img} alt='' style={{width:'100%'}}/>\r\n                </div>\r\n              </Grid>\r\n              }\r\n            </>\r\n            }\r\n          </Grid>\r\n        )\r\n      case 8:\r\n        return (\r\n          <Grid container alignItems='flex-start' spacing={3}>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar subcategoria</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar subcategoria\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Seleccionar SKU</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar SKU\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Tipo de pronostico</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Seleccionar Variables\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Tiempo de pronostico</InputLabel>\r\n                <Select\r\n                  //name={'totalSaleUnit'}\r\n                  label=\"Variables calculadas\"\r\n                  /*value={subcategory.totalSaleUnit}\r\n                  onChange={handleInputChangeSubcategories}*/\r\n                >\r\n                  <MenuItem value={'Rolling Year'}>Rolling Year</MenuItem>\r\n                  <MenuItem value={'Full Year'}>Full Year</MenuItem>\r\n                  <MenuItem value={'Mensual'}>Mensual</MenuItem>\r\n                  <MenuItem value={'Semestral'}>Semestral</MenuItem>\r\n                  <MenuItem value={'Trimestral'}>Trimestral</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} style={{textAlign:'center'}}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                style={{padding:'1em'}}\r\n              >\r\n                Tabla\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n    }\r\n  }\r\n  \r\n  const handleOption = (op) => {\r\n    setOption(op);\r\n  }\r\n\r\n  return (\r\n    <div style={{padding:'1em', paddingTop:'2em'}}>\r\n      <Grid container alignItems='flex-start' spacing={3}>\r\n        <Grid item xs={2} style={{height:'100vh',  borderRight:'1px solid rgba(0, 0, 0, 0.12)'}}>\r\n          <MenuList style={{width:'100%'}}>\r\n            {\r\n              options.map((data, index)=>\r\n                <MenuItem style={{width:'100%'}} key={index} onClick={()=>handleOption(index)}>\r\n                  {data.title}\r\n                </MenuItem>\r\n              )\r\n            }\r\n          </MenuList>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          {\r\n            getContent(option)\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport CustomCursor from './Components/CustomCursor';\r\nimport './App.css';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\n\r\nimport Header from './Containers/Header';\r\n\r\nimport Categories from './Pages/Categories';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Simulator from './Pages/Simulator';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2B9982',\r\n    },\r\n    secondary: {\r\n      main: '#eee'\r\n    },\r\n    bg:{\r\n      main: '#1F1C36'\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <Header/>\r\n        <CustomCursor/>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"categories\" element={<Categories />} />\r\n            <Route path=\"dashboard\" element={<Dashboard />} />\r\n            <Route path=\"horus\" element={<Simulator />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}