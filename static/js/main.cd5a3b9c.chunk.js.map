{"version":3,"sources":["Components/ConfirmDialog/index.js","Components/CheckboxGroup/index.js","Components/HorusChart/Item/Variable/index.js","Components/HorusChart/Item/index.js","Components/HorusChart/index.js","Components/Modal/index.js","Components/FullScreenDialog/index.js","Components/ColorPicker/index.js","Pages/NewData/Groupers/index.js","Components/RadioGroup/index.js","Pages/NewData/Skus/RadioGropupGroupers/index.js","Pages/NewData/Skus/index.js","Components/RelatableBoxes/Draggable/index.js","Components/RelatableBoxes/StartBox/index.js","Components/RelatableBoxes/EndBox/DeleteNode/index.js","Components/RelatableBoxes/EndBox/index.js","Components/ScreenShot/index.js","Components/RelatableBoxes/index.js","Components/Tabs/index.js","Pages/NewData/index.js","Pages/Categories/Category/index.js","Pages/Categories/index.js","Components/CustomCursor/horus.svg","Components/CustomCursor/index.js","Hooks/useMousePosition.js","App.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","Button","onClick","children","Dialog","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","color","onOk","autoFocus","useStyles","makeStyles","theme","colorSquare","width","height","borderRadius","marginRight","border","flex","checkboxContainer","display","alignItems","CheckboxGroup","items","onChange","name","itemList","setItemList","classes","handleChange","index","aux","JSON","parse","stringify","slice","checked","target","value","useEffect","flag","i","length","map","data","FormGroup","row","onchange","className","style","backgroundColor","Fragment","FormControlLabel","control","Checkbox","label","variablesCircle","marginBottom","popup","position","bottom","left","defaultVariable","Variable","handleOpen","Card","CardContent","Grid","container","spacing","item","xs","fullWidth","onMouseEnter","onMouseLeave","padding","overflow","zIndex","groupersContainer","variablesContainer","top","right","variablesContainerBottom","borderColor","description","opacity","paddingLeft","paddingTop","fontSize","Item","variant","groupers","vars","grouper","textTransform","postition","maker","presentation","fontWeight","content","unit","getVariantContent","WrapperDiv","styled","div","box","chartRow","flexDirection","justifyContent","HorusChart","categories","subcategories","skus","settings","setSettings","newSettings","j","category","push","from","split","join","to","positions","start","side","indent","end","subcategory","getItem","type","variables","lineClasses","stroke","getClasses","transform","boxShadow","p","visible","Modal","Paper","sx","root","appBar","input","iconButton","button","close","cursor","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","setVisible","apply","conf","filter","setFilter","handleClickOpen","Fab","size","fullScreen","TransitionComponent","edge","Typography","Divider","e","Stack","primary","newSkus","getSkus","colorContainer","colorPicker","ColorPicker","onChangeComplete","background","state","setState","anchorEl","setAnchorEl","callback","wrapperRef","useRef","handleChangeComplete","hex","handleVisible","currentTarget","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","Menu","disableAlpha","initialValue","formControl","minWidth","selectEmpty","modal","randomColor","Math","floor","random","toString","Step2","pushGrouper","updateGroupers","removeGrouper","setGrouper","editGrouper","setEditGrouper","openEditGrouper","setOpenEditGrouper","handleInputGrouper","handleRemoveGrouper","align","TextField","required","multiline","disabled","RadioButtonsGroup","FormControl","component","FormLabel","RadioGroup","Radio","pushSku","updateSkus","removeSku","sku","setSku","openEditSku","setOpenEditSku","editSku","setEditSku","handleInputSku","handleRemoveSku","replace","marginTop","InputLabel","Select","MenuItem","cpy","dragabbleNode","TransitionEvent","Draggable2","fixed","onStop","nodeRef","x","y","setConf","getTranslateValues","translate","result","parseInt","error","console","handle","defaultPosition","scale","onStart","onDrag","visibility","startNode","boxSizing","transition","startNodeContainer","detail","startPoint","StartBox","focus","setFocus","borderWidth","dataContainer","Draggable","endNodePoint","nodeContainer","DeleteNode","related","relations","onEnterItem","onLeaveItem","onDelete","Boolean","Tooltip","placement","anchorOrigin","horizontal","vertical","MenuListProps","handleDelete","endNode","magnet","grouperCircle","EndBox","onEnter","onExit","onEnterDelete","onExitDelete","hover","setHover","circularButon","margin","alert","capture","ScreenShot","onCapture","createRef","useScreenshot","image","takeScreenShot","loaded","setLoaded","src","alt","onLoad","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","downloadBase64File","paddingBottom","col","RelatableBoxes","dataFrom","dataTo","onUpdate","draggablesNodes","setDraggablesNodes","enter","setEnter","newArray","newData","toData","fromData","handleUpdate","handleEnter","handleExit","handleStop","isRelated","changeLineColorFrom","newClass","getRelations","response","aux2","newDraggables","hanldeDelete","TabPanel","other","role","hidden","Box","BasicTabs","tabs","setValue","borderBottom","Tabs","newValue","Tab","a11yProps","getid","initialValues","pos","actionsContainer","resetContainer","NewData","onFinish","activeStep","setActiveStep","step","subStep","setSubStep","setSubcategory","editSubcategory","setEditSubcategory","openEditSubcategory","setOpenEditSubcategory","tab","setTab","steps","handleInputChangeCategory","handleInputChangeSubcategories","pushSubcategory","splice","getSubcategories","handleRemoveSubcategory","skuFilter","Stepper","orientation","Step","StepLabel","StepContent","LinearProgress","Breadcrumbs","separator","Groupers","Skus","getStepContent","base","sorted","sortSkus","sortSubcategories","Category","handleClick","log","Collapse","in","timeout","unmountOnExit","light","Categories","setCategories","waiting","setWaiting","CustomCursor","mousePosition","setMousePosition","mouseMoveHandler","clientX","clientY","useMousePosition","logo","createTheme","palette","main","secondary","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd5a3b9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if(props.onOk){\r\n            props.onOk();\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <Button onClick={handleClickOpen}>\r\n            {props.children}\r\n        </Button>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\" autoFocus>\r\n                    Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function CheckboxGroup({items=[], title='', onChange, name}) {\r\n    const [itemList, setItemList] = React.useState([]);\r\n    const classes = useStyles();\r\n    const handleChange = (index) => {\r\n        let aux = JSON.parse(JSON.stringify(itemList.slice()));\r\n        aux[index].checked = !aux[index].checked;\r\n        setItemList(aux);\r\n        if(onChange)\r\n            onChange({target: {name, value:aux}})\r\n    };\r\n\r\n    React.useEffect(()=>{\r\n        let flag = false;\r\n        for(let i=0;i<items.length;i++){\r\n            if(items[i].checked)\r\n                flag = true;\r\n        }\r\n        setItemList(items); \r\n        if(!flag)\r\n            setItemList(items.map(data=>({ ...data, checked:false })));\r\n    },[])\r\n\r\n\r\n    return (\r\n        <FormGroup row onChange={onchange}>\r\n            {itemList.map((data, index)=>\r\n                <div key={index} className={classes.checkboxContainer}>\r\n                    {data.color?\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                        :\r\n                        <React.Fragment/>\r\n                    }\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={data.checked}\r\n                                onChange={()=>handleChange(index)}\r\n                                name={ index }\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={data.name}\r\n                    />\r\n                </div>\r\n            )}\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    variablesCircle: {\r\n        width: '1.5em',\r\n        height: '.5em',\r\n        borderRadius: '5px',\r\n        flex: '0 0 auto',\r\n        marginBottom: '.25em',\r\n        border: '1px solid #fff'\r\n    },\r\n    popup: {\r\n        position: 'absolute',\r\n        bottom: '1.5em',\r\n        left: '0',\r\n        width: '10em'\r\n    }\r\n}));\r\n\r\nconst defaultVariable = {\r\n    name: 'testing name',\r\n    //variables: [{name:'test 1', color: 'blue'}, {name: 'test 2', color: 'red'}]\r\n}\r\n\r\nconst Variable = ({color, data = defaultVariable, style, position='top'}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = (value) => {\r\n        setOpen(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{...style, position:'relative'}}>\r\n            <div className={classes.popup} style={{display: open?'flex':'none'/*, bottom: position==='top'?'-2em':'0'*/}}>\r\n                <Card style={{width: '100%'}}>\r\n                    <CardContent>\r\n                        <Grid container alignItems='center' spacing={3}>\r\n                            <Grid item xs={12} fullWidth>\r\n                                {data.name}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <div \r\n                className={classes.variablesCircle} \r\n                style={{backgroundColor:color}}\r\n                onMouseEnter={()=>handleOpen(true)}\r\n                onMouseLeave={()=>handleOpen(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variable;","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Variable from './Variable';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    container: {\r\n        width: '15em',\r\n        //height: '5em',\r\n        position: 'relative',\r\n        marginBottom: '2em',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        overflow: 'hidden',\r\n        zIndex: 1,\r\n        //border: '1px solid #E6EBF1'\r\n    },\r\n    groupersContainer: {\r\n        display: 'flex',\r\n        position: 'absolute'\r\n    },\r\n    variablesContainer: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '-2em'\r\n    },\r\n    variablesContainerBottom: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        bottom: '-.25em',\r\n    },\r\n    borderColor: {\r\n        backgroundColor: props => props.color,\r\n        height: '110%',\r\n        width: '.5em',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    description: {\r\n        opacity: '.5',\r\n        padding: '.5em',\r\n        paddingLeft: 0,\r\n        paddingTop: '.25em',\r\n        fontSize: '.75em'\r\n    }\r\n}));\r\n\r\nconst Item = ({id, style, title='', variant='', groupers=[], vars=[], data=null}) => {\r\n\r\n    const classes = useStyles({color:data.grouper?data.grouper.color:''});\r\n\r\n    const getVariantContent = () => {\r\n        switch(variant){\r\n            case 'sku':\r\n                return (\r\n                    <>\r\n                        <div style={{postition: 'relative', width: '100%'}}>\r\n                            <div className={classes.borderColor}/>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.name}\r\n                                </div> / \r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.maker}\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: 'flex'}}>\r\n                                <span style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.presentation}\r\n                                </span> \r\n                                <span style={{fontWeight: '600'}}>\r\n                                    {data.content} {data.unit} / {data.presentation}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.variablesContainer}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'subcategory':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            default:\r\n                return (<React.Fragment/>);     \r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div id={id} className={classes.container} style={{...style}}>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <span style={{textTransform:'uppercase'}}>\r\n                        {title}\r\n                    </span>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop:'0'}}>\r\n                    {getVariantContent()}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport ReactBezier from \"react-bezier\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport styled from 'styled-components';\r\n\r\nimport Item from './Item';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    box: {\r\n        width: '5em',\r\n        height: '5em',\r\n        backgroundColor: 'red'\r\n    },\r\n    chartRow: {\r\n        width: '30vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around'\r\n    }\r\n}));\r\n\r\n/*\r\n    {\r\n        from: \"cube-1\",\r\n        to: \"cube-2\",\r\n        positions: {\r\n            start: {\r\n                side: \"bottom\",\r\n                indent: 20\r\n            },\r\n            end: {\r\n                side: \"top\",\r\n            },\r\n        },\r\n        style: \"red-line\",\r\n  }\r\n*/\r\n\r\nconst HorusChart = ({categories=[], subcategories=[], skus=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [settings, setSettings] = React.useState([]);\r\n\r\n    const getClasses = (data) => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<data.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                [\".subcategory-color-\"+(`${data[i].id}`.split('.').join(\"\"))]:{\r\n                    stroke:`${data[i].color}`\r\n                }\r\n            };\r\n        }\r\n        //console.log(lineClasses)\r\n        return lineClasses;\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(categories)\r\n        let newSettings = [];\r\n        for(let i=0;i<categories.length;i++){\r\n            for(let j=0;j<subcategories.length;j++){\r\n                if(`${categories[i].id}`===`${subcategories[j].category.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"category-\"+(`${categories[i].id}`.split('.').join(\"\")),\r\n                            to: \"subcategory-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        //console.log(newSettings)\r\n        ////console.log('sub',subcategories)\r\n        ////console.log('skus',skus)\r\n        for(let i=0;i<subcategories.length;i++){\r\n            for(let j=0;j<skus.length;j++){\r\n                if(`${subcategories[i].id}`===`${skus[j].subcategory.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"subcategory-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                            to: \"sku-\"+(`${skus[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        ////console.log(newSettings)\r\n        setSettings(newSettings);\r\n    },[categories, subcategories, skus])\r\n\r\n    const getItem = (data, type) => {\r\n        ////console.log(data.groupers)\r\n        return (\r\n            <Item \r\n                id={`${type}-${data.id}`}\r\n                //id={'cube-'+data.id}\r\n                className={classes.box}\r\n                title={data.name}\r\n                variant={type}\r\n                vars={data.variables}\r\n                groupers={data.groupers}\r\n                data={data}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv style={{padding: '5em'}} classes={getClasses(subcategories)}>\r\n            <ReactBezier settings={settings}>\r\n                <div style={{display:'flex'}}>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            categories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'category')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            subcategories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'subcategory')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            skus.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'sku')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ReactBezier>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default HorusChart;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default ({children, visible=true, onClose}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={visible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Paper sx={style}>\r\n          {\r\n              children\r\n          }\r\n        </Paper>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slide from '@mui/material/Slide';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport CheckboxGroup from '../CheckboxGroup';\r\n\r\nimport HorusChart from '../HorusChart';\r\n\r\nimport Fab from '@mui/material/Fab';  \r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport Modal from '../Modal';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    //marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    //marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    position: props=>props.position,\r\n    bottom: props=>props.position==='fixed'?'1em':'auto',\r\n    right: props=>props.position==='fixed'?'1em':'auto',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '0em',\r\n    top: '1em',\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst datalist = [\r\n  {\r\n    title:'Marcas',\r\n    items: [\r\n      {color:'#eeefaf', name:'primer agrupador'},{color:'#e74c3c', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}\r\n    ]\r\n  }\r\n]\r\n\r\nexport default function FullScreenDialog({skus, categories, subcategories, position='fixed', children}) {\r\n  const classes = useStyles({position});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [filter, setFilter] = React.useState(\r\n    {\r\n      skus:skus,\r\n      subcategories:subcategories,\r\n      groupers:null,\r\n      apply: false,\r\n      conf: {\r\n        skus:skus,\r\n        subcategories:subcategories,\r\n        groupers:null,\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getSkus = () => {\r\n    //console.log(filter)\r\n    if(!filter.apply){\r\n      return skus;\r\n    }\r\n    let newSkus = [];\r\n    for(let j=0;j<filter.subcategories.length;j++){\r\n      for(let i=0;i<skus.length;i++){\r\n        //console.log(skus[i])\r\n        if(skus[i].subcategory.id===filter.subcategories[j].id && filter.subcategories[j].checked){\r\n          newSkus.push(skus[i])\r\n        }\r\n      }\r\n    }\r\n    return (newSkus);\r\n  }\r\n\r\n  const getSubcategories = () => {\r\n    if(!filter.apply){\r\n      return subcategories;\r\n    }\r\n    return filter.subcategories.filter(item=> item.checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className={classes.button}>\r\n          {children?\r\n            <div style={{width:'max-content'}} onClick={handleClickOpen}>\r\n              {children}\r\n            </div>\r\n            :\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={handleClickOpen}>\r\n              <OpenWithIcon />\r\n            </Fab>\r\n          }\r\n        </div>\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} className={classes.root}>\r\n            <div style={{backgroundColor: '#1F1C36', width: '200%', height: '100vh', position: 'fixed'}}/>\r\n            <div style={{backgroundColor: '#1F1C36', height: '100vh'}}>\r\n              <div className={classes.close} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <HighlightOffIcon />\r\n              </div>\r\n              <div>\r\n\r\n                {\r\n                  // <Drawer>\r\n                  //   <div style={{padding: '1em'}}>\r\n                  //     <span>\r\n                  //       <InputBase\r\n                  //         className={classes.input}\r\n                  //         placeholder=\"Buscar\"\r\n                  //         variant=\"outlined\"\r\n                  //       />\r\n                  //       <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                  //         <SearchIcon />\r\n                  //       </IconButton>\r\n                  //       <Divider />\r\n                  //     </span>\r\n                  //     {\r\n                  //       datalist.map((data, index)=>\r\n                  //         <span key={index}>\r\n                  //           <Typography variant='subtitle1'>\r\n                  //             {data.title}\r\n                  //           </Typography>\r\n                  //           <List style={{width:'15em'}}>\r\n                  //             {data.items.map((item, i) => (\r\n                  //               <ListItem button key={i}>\r\n                  //                 {\r\n                  //                   //<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                  //                 }\r\n                  //                 <ListItemIcon style={{minWidth:'2.5em'}}>\r\n                  //                   <div style={{width:'1.5em', height:'1.5em', borderRadius:'50%', backgroundColor:item.color}}/>\r\n                  //                 </ListItemIcon>\r\n                  //                 <ListItemText primary={item.name} />\r\n                  //               </ListItem>\r\n                  //             ))}\r\n                  //           </List>\r\n                  //           <Divider />\r\n                  //         </span>\r\n                  //       )\r\n                  //     }\r\n                  //   </div>\r\n                  // </Drawer>\r\n                }\r\n                {\r\n                  <Button onClick={()=>{setVisible(true)}}>\r\n                    <FilterAltIcon/>\r\n                  </Button>\r\n                }\r\n                {\r\n                  <Modal\r\n                    visible={visible}\r\n                    onClose={()=>{setVisible(false)}}\r\n                  >\r\n                    <div>\r\n\r\n                      <Typography variant='h5'>\r\n                        Filtros\r\n                      </Typography>\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Subcategorias\r\n                      </Typography>\r\n                      <CheckboxGroup\r\n                        items={filter.subcategories}\r\n                        title='some'\r\n                        name='subcategories'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, conf:{...filter.conf, subcategories: e.target.value}})\r\n                        }}\r\n                      />\r\n                      \r\n                      {/*<Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Skus\r\n                      </Typography>\r\n                      <CheckboxGroup\r\n                        items={skus}\r\n                        title='some'\r\n                        name='skus'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, skus: e.target.value})\r\n                        }}\r\n                      />*/}\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Stack spacing={2} direction=\"row\">\r\n                        <Button \r\n                          primary \r\n                          variant='contained' \r\n                          onClick={()=>{\r\n                            setFilter({...filter, apply:true, subcategories: filter.conf.subcategories});\r\n                            setVisible(false);\r\n                          }}\r\n                        >\r\n                          Filtrar\r\n                        </Button>\r\n                        <Button \r\n                          primary \r\n                          variant='outlined'\r\n                          onClick={()=>{\r\n                            setFilter({...filter, apply:false})\r\n                          }}\r\n                        >\r\n                          Limpiar filtros\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                  </Modal>\r\n                }\r\n                <HorusChart\r\n                  categories={[...categories]}\r\n                  subcategories={getSubcategories()}\r\n                  skus={getSkus()}\r\n                />\r\n              </div>\r\n            </div>\r\n        </Dialog>\r\n        {/*<Divider />*/}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        width: 'inherit'\r\n    },\r\n    colorPicker: {\r\n        position: 'absolute',\r\n        width: 'max-content',\r\n        zIndex: '10'\r\n    }\r\n});\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst ColorPicker = ({ onChangeComplete, value='#ffffff', name='' }) => {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({background:'#ffffff'});\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n    useEffect(() => {\r\n        setState({background:value});\r\n    },[value])\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const handleChangeComplete = (color) => {\r\n        if(onChangeComplete)\r\n            onChangeComplete({target: { name, value: color.hex}});\r\n        setState({ background: color.hex });\r\n    };\r\n\r\n    const handleVisible = (e) => {\r\n        setVisible(!visible);\r\n        setAnchorEl(e.currentTarget)\r\n    }\r\n    useOutsideAlerter(wrapperRef, handleVisible);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.colorContainer} onClick={handleVisible}>\r\n                <div className={classes.colorSquare} style={{backgroundColor:state.background}}/>\r\n                <Typography variant=\"subtitle1\">{state.background.split('#')[1]}</Typography>\r\n            </div>\r\n            {/*visible?\r\n                <div className={classes.colorPicker} ref={wrapperRef}>\r\n                    <SketchPicker\r\n                        color={ state.background }\r\n                        onChangeComplete={ handleChangeComplete }\r\n                        onChange={handleChangeComplete}\r\n                        disableAlpha\r\n                    />\r\n                </div>\r\n                :\r\n                <React.Fragment/>*/\r\n            }\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={anchorEl}\r\n                onClose={()=>{\r\n                    setAnchorEl(null);\r\n                }}\r\n            >\r\n                <SketchPicker\r\n                    color={ state.background }\r\n                    onChangeComplete={ handleChangeComplete }\r\n                    onChange={ handleChangeComplete }\r\n                    disableAlpha\r\n                />\r\n            </Menu>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport ColorPicker from '../../../Components/ColorPicker';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    maker:'',\r\n    color:'#ffffff',\r\n    //presentation :''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        //margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst Step2 = ({ groupers=[], pushGrouper, updateGroupers, removeGrouper }) => {\r\n    const classes = useStyles();\r\n    const [grouper, setGrouper] = React.useState({\r\n        ...initialValue,\r\n        color: randomColor(),\r\n    })\r\n\r\n    const [editGrouper, setEditGrouper] = React.useState({});\r\n    const [openEditGrouper, setOpenEditGrouper] = React.useState(false);\r\n\r\n    const getGroupers = () => {\r\n        return (\r\n            groupers.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.maker}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorContainer}>\r\n                            <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                            {/*<Typography variant=\"subtitle1\" align=\"left\">{data.color.split('#')[1]}</Typography>*/}\r\n                        </div>\r\n                    </Grid>\r\n                    {/*<Grid item xs={2}>\r\n                        <Typography align=\"left\">\r\n                            {data.presentation }\r\n                        </Typography>\r\n                    </Grid>*/}\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta marca?'\r\n                                onOk={()=>{handleRemoveGrouper(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor: 'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditGrouper(!openEditGrouper);\r\n                                setEditGrouper({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputGrouper = (e) => {\r\n        const {name, value} = e.target;\r\n        setGrouper({...grouper, [name]:value});\r\n    }\r\n\r\n    const handleSaveGrouper = () => {\r\n        if(pushGrouper){\r\n            pushGrouper(grouper);\r\n        }   \r\n        setGrouper({...initialValue, color: randomColor()})\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        if(removeGrouper)\r\n            removeGrouper(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align=\"left\"\r\n                    >\r\n                        Añade o elimina tus marcas\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align=\"left\"\r\n                        display=\"block\"\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marca</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Fabricante</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                </Grid>\r\n                {/*<Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Presentación</Typography>\r\n                </Grid>*/}\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getGroupers() }\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Marca\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        name='name'\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Fabricante\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='maker'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.maker}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ColorPicker \r\n                        onChangeComplete={handleInputGrouper}\r\n                        name='color'\r\n                        value={grouper.color}\r\n                    />\r\n                </Grid>\r\n                {/*<Grid item xs={2}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Presentación\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='presentation'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.presentation}\r\n                        required\r\n                    />\r\n                </Grid>*/}\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveGrouper}\r\n                            disabled={grouper.name==='' || grouper.maker===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Modal\r\n                open={openEditGrouper}\r\n                onClose={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar marca\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Marca\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, name:e.target.value})\r\n                                }}\r\n                                value={editGrouper.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Fabricante\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='maker'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, maker:e.target.value})\r\n                                }}\r\n                                value={editGrouper.maker}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <ColorPicker \r\n                                onChangeComplete={(e)=>{\r\n                                    //console.log(e)\r\n                                    setEditGrouper({...editGrouper, color:e.target.value})\r\n                                }}\r\n                                name='color'\r\n                                value={editGrouper.color}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, presentation:e.target.value})\r\n                                }}\r\n                                value={editGrouper.presentation}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = groupers.slice();\r\n                                        aux[editGrouper.index] = editGrouper;\r\n                                        if(updateGroupers){\r\n                                            //console.log(editGrouper)\r\n                                            updateGroupers(aux, editGrouper.index);\r\n                                        }\r\n                                        setOpenEditGrouper(!openEditGrouper)\r\n                                    }}\r\n                                    disabled={editGrouper.name==='' || editGrouper.maker==='' || editGrouper.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value=null}) {\r\n    //const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={data.name} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '.5em',\r\n        height: '1em',\r\n        borderRadius: '5px',\r\n        marginRight: '.25em',\r\n        border: '1px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value}) {\r\n    //const [value, setValue] = React.useState();\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        ////console.log(JSON.parse(event.target.value))\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n    //console.log(value)\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={<div style={{display: 'flex', alignItems: 'center'}}><div className={classes.colorSquare} style={{backgroundColor:data.color}}/>{data.name}</div>} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport RadioGroup from '../../../Components/RadioGroup';\r\nimport RadioGropupGroupers from './RadioGropupGroupers';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    content:'',\r\n    unit: null,\r\n    grouper:null,\r\n    subcategory:null,\r\n    presentation:''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n       // margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst Step2 = ({ groupers=[], pushSku, subcategories=[], skus=[], updateSkus, removeSku }) => {\r\n\r\n    const classes = useStyles();\r\n    const [sku, setSku] = React.useState({\r\n        ...initialValue\r\n    })\r\n\r\n    const [openEditSku, setOpenEditSku] = React.useState(false);\r\n    const [editSku, setEditSku] = React.useState({});\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log('useffect',groupers,skus)\r\n    },[skus])\r\n\r\n    const getSkus = () => {\r\n        return (\r\n            skus.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={3}>\r\n                        <Typography align='left'>\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.content} {data.unit} / {data.presentation}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {\r\n                            data.grouper?\r\n                                <div className={classes.colorContainer}>\r\n                                    <div className={classes.colorSquare} style={{backgroundColor:data.grouper.color}}/>\r\n                                    <Typography variant=\"subtitle1\" align=\"left\">{data.grouper.name}</Typography>\r\n                                </div>\r\n                            :\r\n                            <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.subcategory.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta categoria?'\r\n                                onOk={()=>{handleRemoveSku(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setEditSku({...data, index})\r\n                                setOpenEditSku(!openEditSku);\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputSku = (e) => {\r\n        const {name, value} = e.target;\r\n        ////console.log(value)\r\n        setSku({...sku, [name]:value});\r\n    }\r\n\r\n    const handleSaveSku = () => {\r\n        ////console.log(sku)\r\n        let cpy = JSON.stringify(sku);\r\n        if(pushSku){\r\n            pushSku(JSON.parse(cpy));\r\n        }   \r\n        setSku({...initialValue})\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        if(removeSku)\r\n            removeSku(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align='left'\r\n                    >\r\n                        Añade o elimina tus SKUS\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align='left'\r\n                        display='block'\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Contenido</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marcas</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Subcategoria</Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getSkus() }\r\n                <Grid item xs={3}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Nombre\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='name'\r\n                        onChange={handleInputSku}\r\n                        value={sku.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{display:'flex', flexDirection:'column'}}>\r\n                        <TextField \r\n                            id=\"\" \r\n                            label=\"Contenido\" \r\n                            variant=\"outlined\" \r\n                            fullWidth\r\n                            multiline\r\n                            name='content'\r\n                            //rows={2}\r\n                            onChange={(e)=>{handleInputSku({target:{name:e.target.name, value:e.target.value.replace(/[^0-9]/g, '')}})}}\r\n                            value={sku.content}\r\n                            required\r\n                        />\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                <Select\r\n                                    //value={age}\r\n                                    name={'unit'}\r\n                                    label=\"Unidad *\"\r\n                                    value={sku.unit}\r\n                                    onChange={handleInputSku}\r\n                                >\r\n                                    <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                    <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                    <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={handleInputSku}\r\n                                value={sku.presentation}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div style={{display:'flex'}}>\r\n                        <RadioGropupGroupers\r\n                            name = 'grouper'\r\n                            items = {[...groupers]}\r\n                            onChange={handleInputSku}\r\n                            value={sku.grouper}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} align='left'>\r\n                    <RadioGroup\r\n                        name = 'subcategory'\r\n                        items = {[...subcategories]}\r\n                        onChange={handleInputSku}\r\n                        value={sku.subcategory}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveSku}\r\n                            disabled={sku.name==='' || sku.content==='' || sku.grouper===null || sku.subcategory===null || sku.unit===null || sku.presentation===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={openEditSku}\r\n                onClose={()=>{setOpenEditSku(!openEditSku)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar Sku\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Nombre\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, name:e.target.value})\r\n                                }}\r\n                                value={editSku.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <div style={{display:'flex', flexDirection:'column'}}>\r\n                                <TextField \r\n                                    id=\"\" \r\n                                    label=\"Contenido\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    multiline\r\n                                    name='content'\r\n                                    //rows={2}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value.replace(/[^0-9]/g, '')})\r\n                                    }}\r\n                                    value={editSku.content}\r\n                                    required\r\n                                />\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                        <Select\r\n                                            //value={age}\r\n                                            name={'unit'}\r\n                                            label=\"Unidad *\"\r\n                                            value={editSku.unit}\r\n                                            onChange={(e)=>{\r\n                                                setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                            <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                            <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField \r\n                                        id=\"\"\r\n                                        label=\"Presentación\" \r\n                                        variant=\"outlined\" \r\n                                        fullWidth\r\n                                        multiline\r\n                                        name='presentation'\r\n                                        //rows={2}\r\n                                        onChange={handleInputSku}\r\n                                        value={editSku.presentation}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <div style={{display:'flex'}}>\r\n                                <RadioGropupGroupers\r\n                                    name = 'grouper'\r\n                                    items = {[...groupers]}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                    }}\r\n                                    value={editSku.grouper}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <RadioGroup\r\n                                name = 'subcategory'\r\n                                items = {[...subcategories]}\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                }}\r\n                                value={editSku.subcategory}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = skus.slice();\r\n                                        aux[editSku.index] = editSku;\r\n                                        if(updateSkus){\r\n                                            //console.log(editGrouper)\r\n                                            updateSkus(aux, editSku.index);\r\n                                        }\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                    disabled={editSku.name==='' || editSku.content==='' || editSku.grouper===null || editSku.subcategory===null || editSku.unit===null || editSku.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    dragabbleNode: {\r\n        width: '.75em',\r\n        height: '.75em',\r\n        cursor: 'move',\r\n        backgroundColor: props=>props.color,\r\n        borderRadius: '50%',\r\n        border: '2px solid #E6EBF1',//verde principal\r\n        TransitionEvent: 'all 1.5s ease',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        left: '-.5em',\r\n        \"&:hover\": {\r\n            boxShadow: '0px 0px 10px 0px rgba(43,153,130,1)',\r\n            backgroundColor: '#2B9982',\r\n        }\r\n    },\r\n}));\r\n\r\nconst Draggable2 = ({data, position=null, fixed=false, onStop, color='#fff'}) => {\r\n\r\n    const classes = useStyles({color: color});\r\n    const nodeRef = React.useRef(null);\r\n    const [conf, setConf] = React.useState({\r\n        position:{\r\n            x:0,\r\n            y:0,\r\n        }, \r\n        fixed: false\r\n    })\r\n\r\n    React.useEffect(()=>{\r\n        if(position)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: position.x,\r\n                    y: position.y\r\n                },\r\n                fixed: true\r\n            })\r\n    },[position])\r\n\r\n    const eventLogger = (e) => {\r\n        ////console.log('Data: ', e);\r\n    };\r\n\r\n    const getTranslateValues = (translate) => {\r\n        let result = translate.split('translate(')[1].split(')')[0].split(', ');\r\n        try {\r\n            return {x: parseInt(result[0].split('px')[0]), y :parseInt(result[1].split('px')[0])};\r\n        } catch (error) {\r\n            console.error(result)\r\n            console.error(error)\r\n            return {x:0, y:0}\r\n        }\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        ////console.log(getTranslateValues(nodeRef.current.style.transform));\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                ...getTranslateValues(nodeRef.current.style.transform)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStart = (e) => {\r\n        /*//console.log( e)\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                x: 0,\r\n                y: 10\r\n            }\r\n        })*/\r\n    }\r\n    \r\n    const handleEnd = (e) => {\r\n        /*//console.log( e)*/\r\n        if(onStop){\r\n            onStop(data)\r\n        }\r\n        if(!fixed)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            //axis=\"x\"\r\n            handle=\".handle\"\r\n            defaultPosition={{x: 0, y: 0}}\r\n            position={conf.position}\r\n            //grid={[25, 25]}\r\n            scale={1}\r\n            onStart={eventLogger}\r\n            onDrag={handleDrag}\r\n            onStop={handleEnd}\r\n        >\r\n            <div className={classes.dragabbleNode} id={'end-'+data.id} ref={nodeRef}>\r\n                <div className=\"handle\">\r\n                    <span style={{visibility: 'hidden', width: 0, height: 0}}>.</span>\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n    );\r\n  \r\n}\r\n\r\nexport default Draggable2;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Draggable from '../Draggable';\r\n\r\nconst maingreen = '#2B9982';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    startNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        transition: 'all .5s',\r\n        backgroundColor: '#fff',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        //backgroundColor: '#fff'\r\n    },\r\n    startNodeContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginBottom: '.5em',\r\n        transition: 'all .5s'\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0'\r\n    },    \r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    },\r\n    startPoint: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '25%'\r\n    }\r\n}));\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    React.useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst StartBox = ({id, data, onStop}) => {\r\n\r\n    const wrapperRef = React.useRef(null);\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [focus, setFocus] = React.useState(false);\r\n\r\n    const hanldeFocus = () => {\r\n        setFocus(true);\r\n    }\r\n\r\n    const handleFocusOut = () => {\r\n        setFocus(false);\r\n    }\r\n\r\n    useOutsideAlerter(wrapperRef, handleFocusOut);\r\n//console.log(data)\r\n    return (\r\n        <div className={classes.startNodeContainer} ref={wrapperRef}>\r\n            <div \r\n                className={classes.startNode} \r\n                 \r\n                onClick={hanldeFocus}\r\n                style={{borderWidth: focus?'2px':'1px'}}\r\n            >\r\n                <div id={'startBox-'+id} className={classes.startPoint}/>\r\n                <div id={'start-'+id} className={classes.startPoint}/>\r\n                <div className={classes.borderColor}/>\r\n                <div className={classes.title}>\r\n                    {data.name}\r\n                </div>\r\n                <div className={classes.dataContainer}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Draggable \r\n                data={data} \r\n                onStop={onStop}\r\n                color={data.grouper.color}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartBox;","import React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNodePoint: {\r\n        position: 'absolute',\r\n        width: '.75em',\r\n        height: '.75em',\r\n        border: '2px solid #E6EBF1',\r\n        backgroundColor: '#aaa',\r\n        borderRadius: '50%',\r\n        left: '-.75em',\r\n        top: 'calc(50% - .25em)',\r\n        zIndex: '1',\r\n        \"&:hover\": {\r\n            backgroundColor: '#C72C1C',\r\n            borderColor: '#C72C1C'\r\n        }\r\n    },\r\n    nodeContainer: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - .15em)',\r\n        left: '.25em',\r\n    }\r\n}));\r\n\r\nconst DeleteNode = ({ onMouseEnter, onMouseLeave, related, relations, onEnterItem, onLeaveItem, onDelete, color='#fff' }) => {\r\n\r\n    const classes = useStyles({color: color});\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = (data) => {\r\n        if(onDelete)\r\n            onDelete(data)\r\n        handleClose();\r\n    }\r\n\r\n    ////console.log('relations',relations)\r\n    return (\r\n        <div className={classes.nodeContainer}>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <div \r\n                    className={classes.endNodePoint} \r\n                    style={{display:related?'block':'none'}} \r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    onClick={handleClick}\r\n                />\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {\r\n                    relations.map((data, index)=>{\r\n                        ////console.log(data)\r\n                        return (\r\n                            <MenuItem \r\n                                key={index} \r\n                                onClick={()=>handleDelete(data)}\r\n                            >\r\n                                <spam\r\n                                    onMouseEnter={()=>{\r\n                                        onEnterItem(data)\r\n                                    }}\r\n                                    onMouseLeave={()=>{\r\n                                        onLeaveItem(data)\r\n                                    }}\r\n                                >\r\n                                    {data.from.name}\r\n                                </spam>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteNode;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteNode from './DeleteNode';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        marginBottom: '.5em',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        //backgroundColor: '#F0F0F0',\r\n        \"&:hover\": {\r\n            borderWidth: '2px'\r\n        },\r\n    },\r\n    magnet: {\r\n        position: 'absolute',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: '10em',\r\n        right: '0',\r\n        top: '0',\r\n        zIndex: '1',\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '0'\r\n    },\r\n    grouperCircle: {\r\n        width: '1em',\r\n        height: '1em',\r\n        backgroundColor: props => props.color,\r\n        borderRadius: '50%',\r\n        marginRight: '.5em',\r\n    },\r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    }\r\n}));\r\n\r\nconst EndBox = ({data, id, onEnter, onExit, related=false, onEnterDelete, onExitDelete, relations=[], onEnterItem, onLeaveItem, onDelete}) => {\r\n\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    const handleEnter = () => {\r\n        setHover(true);\r\n        if(onEnter)\r\n            onEnter(data);\r\n    }\r\n\r\n    const handleExit = () => {\r\n        setHover(false);\r\n        if(onExit)\r\n            onExit(data);\r\n    }\r\n\r\n    const handleEnterDelete = () => {\r\n        if(onEnterDelete)\r\n            onEnterDelete(data);\r\n    }\r\n\r\n    const handleExitDelete = () => {\r\n        if(onExitDelete)\r\n            onExitDelete(data);\r\n    }\r\n\r\n    return (\r\n        <div id={'endBox-'+id}>\r\n            <DeleteNode \r\n                related={related}\r\n                onMouseEnter={handleEnterDelete}\r\n                onMouseLeave={handleExitDelete}\r\n                relations={relations}\r\n                onEnterItem={onEnterItem}\r\n                onLeaveItem={onLeaveItem}\r\n                onDelete={(data)=>onDelete(data)}\r\n                className={classes.container}\r\n                color={data.grouper.color}\r\n            />\r\n            <div \r\n                className={classes.endNode}\r\n                style={{backgroundColor: hover?'rgba(0,0,0,.05)':'#fff', borderWidth: hover?'2px':'1px'}}\r\n            >\r\n                \r\n            <div \r\n                className={classes.magnet} \r\n                onMouseEnter={handleEnter}\r\n                onMouseLeave={handleExit}\r\n            />\r\n                <div className={classes.borderColor}/>\r\n                <div className={classes.title}>\r\n                    {data.name}\r\n                </div>\r\n                <div className={classes.dataContainer}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndBox;","import React from 'react';\r\nimport { useScreenshot } from \"use-react-screenshot\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nimport Alert from '../Alert';\r\n\r\n/*import copy from './copy.svg';\r\nimport save from './save.svg';*/\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    circularButon: {\r\n        margin: '.5em',\r\n        marginRight: '0',\r\n        padding: '1em',\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '50%',\r\n        //border: '1px solid #000',\r\n        transition: 'all .25s',\r\n        backgroundColor: 'transparent',\r\n        cursor: 'pointer',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ecf0f1',\r\n            borderColor: '#95a5a6'\r\n        }\r\n    },\r\n    alert: {\r\n        position:'fixed',\r\n        bottom: '1em',\r\n        right: '1em',\r\n    },\r\n    container: {\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n    },\r\n    capture: {\r\n        position: 'absolute',\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        left: 0,\r\n        top: 0, \r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: '100'\r\n    }\r\n}));\r\n\r\nconst ScreenShot = ({children, onCapture}) => {\r\n    const classes = useStyles();\r\n\r\n    const ref = React.createRef(null);\r\n    const [image, takeScreenShot] = useScreenshot();\r\n    const [loaded, setLoaded] = React.useState(true);\r\n    //const [alert, setAlert] = React.useState(false);\r\n    //const [shutter, setShutter] = React.useState(false);\r\n    const getImage = () => {\r\n        ////console.log(ref2.current.getContext('2d'))\r\n        takeScreenShot(ref.current);\r\n        //setAlert(true);\r\n        //setShutter(true);\r\n        // if(onCapture)\r\n        //     onCapture(image);\r\n        // setTimeout(()=>{\r\n        //     setAlert(false);\r\n        // },3000)\r\n        // setTimeout(()=>{\r\n        //     setShutter(false);\r\n        // }, 100)\r\n    };\r\n\r\n    function downloadBase64File( base64Data, fileName) {\r\n        const linkSource = `${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        takeScreenShot(ref.current);\r\n        setLoaded(true);\r\n        //downloadBase64File(, image, 'ScreenShot');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className={classes.container}>\r\n                {/*<div className={classes.capture} style={{display: shutter?'block':'none'}}></div>\r\n                <canvas ref={ref2} style={{width: '100%', height: '100vh', background: 'red', position: 'absolute'}}></canvas>*/}\r\n                {children}\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                {/*<img src={image} alt='' style={{width: '100%'}}/>\r\n                <div className={classes.circularButon}>\r\n                    <img src={copy} style={{width:'100%'}} alt='copy' />\r\n                </div>\r\n                <div onClick={()=>{}} className={classes.circularButon}>\r\n                    <img src={save} style={{width:'100%'}} alt='save' />\r\n                </div>\r\n                */}\r\n                <Fab size=\"small\" onClick={getImage} color=\"primary\" aria-label=\"clean\">\r\n                    <ContentCopyIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\">\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" onClick={handleDownload} color=\"primary\" aria-label=\"clean\">\r\n                    <DownloadIcon />\r\n                </Fab>\r\n                {/*<div className={classes.alert}>\r\n                    <Alert\r\n                        type={'success'}\r\n                        open={alert}\r\n                        text='Copiado'\r\n                    />\r\n                </div>*/}\r\n                {\r\n                    loaded &&\r\n                    <img \r\n                        src={image} \r\n                        alt='' \r\n                        onLoad={()=>{\r\n                            ////console.log(image)\r\n                            downloadBase64File(image,'screenshot.png');\r\n                            setLoaded(false);\r\n                            if(onCapture)\r\n                                onCapture(image);\r\n                        }} \r\n                        style={{width: '0em', height: '0em'}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenShot;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport StartBox from './StartBox';\r\nimport EndBox from './EndBox';\r\nimport ReactBezier from \"react-bezier\";\r\nimport ScreenShot from '../ScreenShot';\r\n\r\n//import ContextMenu from '../ContextMenu';\r\nimport Fab from '@mui/material/Fab';\r\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    col: {\r\n        width: '30%',\r\n        /*padding: '1em',\r\n        width: '30%',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n        transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '4px',\r\n        margin: '.25em',*/\r\n        //overflow: 'hidden',\r\n    },\r\n    startNode: {\r\n        border: '1px solid #2B9982',\r\n        borderRadius: '.5em',\r\n        padding: '.5em 1.5em'\r\n    },\r\n    title: {\r\n        backgroundColor: '#2B9982',\r\n        top: '-1em',\r\n        left: '-1em',\r\n        position: 'relative',\r\n        width: 'calc( 100% + 1.5em)',\r\n        padding: '.25em',\r\n        color: '#fff',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n\r\n    '@global': {\r\n        \r\n    }\r\n\r\n});\r\n\r\nconst RelatableBoxes = ({dataFrom, dataTo, onUpdate, relations=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [draggablesNodes, setDraggablesNodes] = React.useState([]);\r\n    const [settings, setSettings] = React.useState([]);\r\n    const [enter, setEnter] = React.useState({data:null, flag:false});\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(()=>{\r\n        let newArray = [];\r\n        for(let i=0;i<relations.length;i++){\r\n            let newData = {\r\n                from: \"startBox-\"+relations[i].from.id,\r\n                to: \"endBox-\"+relations[i].to.id,\r\n                toData: relations[i].to,\r\n                fromData: relations[i].from,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            newArray.push(newData);\r\n        }\r\n        //console.log([...settings, ...newArray])\r\n        setDraggablesNodes([...newArray]);\r\n        setSettings([...settings, ...newArray]);\r\n        //console.log([...settings, ...newArray],relations);\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(dataFrom,dataTo)\r\n        ////console.log(groupers)\r\n        ////console.log(classes)\r\n        let newSettings = [];\r\n        //let newDraggablesNodes = [];\r\n        \r\n        for(let i=0;i<dataFrom.length;i++){\r\n            newSettings.push(\r\n                {\r\n                    from: \"start-\"+dataFrom[i].id,\r\n                    to: \"end-\"+dataFrom[i].id,\r\n                    toData: dataFrom[i],\r\n                    fromData: dataFrom[i],\r\n                    positions: {\r\n                        start: {\r\n                            side: \"right\",\r\n                            indent: 20\r\n                        },\r\n                        end: {\r\n                            side: \"left\",\r\n                        },\r\n                    },\r\n                    style: `relationship-line-selected`,\r\n              }\r\n            )\r\n        }\r\n        //console.log(newSettings)\r\n        // if(settings.length===0){\r\n        //     for(let i=0;i<relations.length;i++){\r\n        //         let newData = {\r\n        //             from: \"startBox-\"+relations[i].from.id,\r\n        //             to: \"endBox-\"+relations[i].to.id,\r\n        //             toData: relations[i].to,\r\n        //             fromData: relations[i].from,\r\n        //             positions: {\r\n        //                 start: {\r\n        //                     side: \"right\",\r\n        //                     indent: 20\r\n        //                 },\r\n        //                 end: {\r\n        //                     side: \"left\",\r\n        //                 },\r\n        //             },\r\n        //             style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n        //         }\r\n        //         newSettings.push(newData);\r\n        //     }\r\n        // }\r\n        //console.log(settings)\r\n        setSettings([...newSettings, ...draggablesNodes]);\r\n        if(settings.length!==0){\r\n            //console.log('updating')\r\n            handleUpdate([...newSettings, ...draggablesNodes]);\r\n        }\r\n        //console.log([...newSettings, ...draggablesNodes])\r\n        //console.log([...newSettings, ...draggablesNodes], relations, 'draggableNodes')\r\n    },[draggablesNodes]);\r\n\r\n    const handleUpdate = (data) => {\r\n        let aux = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].style!=='relationship-line-selected'){\r\n                aux.push({from:data[i].fromData, to:data[i].toData})\r\n            }\r\n        }\r\n        //console.log(aux)\r\n        if(onUpdate)\r\n            onUpdate(aux);\r\n    }\r\n\r\n    const handleEnter = (data) => {\r\n        setEnter({data, flag: true});\r\n    }\r\n\r\n    const handleExit = (data) => {\r\n        setEnter({data:null, flag:false});\r\n    }\r\n\r\n    const handleStop = (data) => {\r\n        ////console.log(data, enter)\r\n        let aux = draggablesNodes.slice();\r\n        let newData;\r\n        \r\n        // for(let i=0;i<aux.length;i++){\r\n        //     try {\r\n        //         if(aux[i].toData.id===enter.data.id && aux[i].fromData.id)\r\n        //             //console.log('from')\r\n        //     } catch (error) {\r\n        //     }\r\n        // }\r\n        \r\n        if(enter.flag){\r\n            newData = {\r\n                from: \"startBox-\"+data.id,\r\n                to: \"endBox-\"+enter.data.id,\r\n                toData: enter.data,\r\n                fromData: data,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${data.grouper.name}-${data.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            aux.push(newData);\r\n            ////console.log('newData')\r\n            setDraggablesNodes(aux);\r\n        }\r\n    }\r\n\r\n    const isRelated = (id) => {\r\n        //console.log(id)\r\n        for(let i=0;i<draggablesNodes.length;i++){\r\n            if(`${draggablesNodes[i].toData.id}`===`${id}`)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const changeLineColor = (data, newClass) => {\r\n        ////console.log(id)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].toData.id===data.id)\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                };\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const changeLineColorFrom = (from, to, newClass) => {\r\n        ////console.log('from',from)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            // if(newSettings[i].style!=='relationship-line-selected'){\r\n            //     newSettings[i] = {\r\n            //         ...newSettings[i],\r\n            //         style: defaultStyleClass,\r\n            //     };\r\n            //     //continue;\r\n            // }\r\n            if(newSettings[i].fromData.id===from.id && newSettings[i].toData.id===to.id){\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                }; \r\n                //continue;\r\n            }\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const getRelations = (id) => {\r\n        let data = settings.slice();\r\n        let newData = [];\r\n        let response = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].toData.id===id && (data[i].style!=='relationship-line-selected'))\r\n                newData.push({from:data[i].fromData, to:data[i].toData});\r\n        }\r\n        \r\n        for(let i=0;i<newData.length;i++){\r\n            let flag = false;\r\n            for(let j=0;j<response.length;j++){\r\n                if(newData[i].from.id===response[j].from.id){\r\n                    flag = true;\r\n                }\r\n            }\r\n            if(!flag){\r\n                response.push(newData[i]);\r\n            }\r\n        }\r\n        ////console.log('data', data, id, newData)\r\n        return response;\r\n    }\r\n\r\n    const hanldeDelete = (data) => {\r\n        ////console.log(data)\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(!(newSettings[i].fromData.id===data.from.id && newSettings[i].toData.id===data.to.id)){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n\r\n        let aux2 = [];\r\n        let newDraggables = draggablesNodes.slice();\r\n        for(let i=0;i<newDraggables.length;i++){\r\n            ////console.log(newDraggables);\r\n            if(!(newDraggables[i].fromData.id===data.from.id && newDraggables[i].toData.id===data.to.id)){\r\n                aux2.push(newDraggables[i])\r\n            }\r\n        }\r\n        \r\n\r\n        setDraggablesNodes([...aux2]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    const cleanNodes = () => {\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].style==='relationship-line'){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n        \r\n        setDraggablesNodes([]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ScreenShot>\r\n                <div ref={ref}>\r\n                    {/*<ContextMenu\r\n                        ref={ref}\r\n                    />*/}\r\n                    {\r\n                       ////console.log(groupers,'groupers')\r\n                    }\r\n                    <ReactBezier settings={settings}>\r\n                        {/*<CustonCursor/>*/}\r\n                        <div className={classes.container}>\r\n                            <div className={classes.col} style={{marginRight:'30%'}}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                </div>*/}\r\n                                {\r\n                                    dataFrom.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <StartBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onStop={handleStop}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={classes.col}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                            </div>*/}\r\n                                {\r\n                                    dataTo.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index} style={{position: 'relative'}}>\r\n                                                <EndBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onEnter={handleEnter}\r\n                                                    onExit={handleExit}\r\n                                                    related={isRelated(data.id)}\r\n\r\n                                                    onEnterDelete={()=>{/*changeLineColor(data, 'relationship-line-delete')*/}}\r\n                                                    onExitDelete={()=>{/*changeLineColor(data, 'relationship-line')*/}}//cambia el color a lines que llegan a un nodo final\r\n\r\n                                                    relations={getRelations(data.id)}\r\n\r\n                                                    onEnterItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line-delete')}\r\n                                                    onLeaveItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line '+`stroke-color-${data.from.grouper.name}-${data.from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"))}//cambia el color de la linea\r\n\r\n                                                    onDelete={(data)=>hanldeDelete(data)}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </ReactBezier>\r\n                </div>\r\n            </ScreenShot>\r\n            <div style={{display: 'flex'}}>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={cleanNodes}>\r\n                    <CleaningServicesIcon/>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RelatableBoxes;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function BasicTabs({tabs=[], children, onChange}) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if(onChange)\r\n        onChange(newValue)\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n          {\r\n              tabs.map((data, index)=>\r\n                <Tab key={index} label={data.name} {...a11yProps(index)} />\r\n              )\r\n          }\r\n        </Tabs>\r\n      </Box>\r\n      {\r\n          tabs.map((data, index)=>\r\n            <TabPanel key={index} value={value} index={index}>\r\n                {children}\r\n            </TabPanel>\r\n          )\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Card from '@mui/material/Card';\r\n//import CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../Components/ConfirmDialog';\r\nimport FullScreenDialog from '../../Components/FullScreenDialog';\r\n\r\nimport Groupers from './Groupers';\r\nimport Skus from './Skus';\r\n\r\n//temporal\r\nimport RelatableBoxes from '../../Components/RelatableBoxes';\r\nimport styled from 'styled-components';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport ColorPicker from '../../Components/ColorPicker';\r\nimport Tabs from '../../Components/Tabs';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst getid = () => {\r\n    return `${(Math.random() * (1000 - 1) + 1)}`.split('.').join(\"\");\r\n}\r\n\r\nconst initialValues = {\r\n    category: {\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n        id:getid()\r\n    },\r\n    subcategories: [],\r\n    groupers: [],\r\n    skus:[],\r\n    relations:[],\r\n}\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title:'SKU '+ {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        //marginTop: theme.spacing(1),\r\n        //marginRight: theme.spacing(1), \r\n    },\r\n    actionsContainer: {\r\n        //marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        //padding: theme.spacing(3),\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n    return ['Carga tus categorias y subcategorias', 'Carga tus marcas y SKU', 'Relaciona tus SKUs con los de la competencia'];\r\n}\r\n\r\nconst NewData = ({onUpdate, onFinish}) => {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const [state, setState] = React.useState({\r\n        ...initialValues\r\n    });\r\n\r\n    const [subStep, setSubStep] = React.useState({\r\n        step: 0\r\n    })\r\n\r\n    const [category, setCategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n    });\r\n    \r\n    const [subcategory, setSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n        color:randomColor()\r\n    });\r\n\r\n    const [editSubcategory, setEditSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n    });\r\n\r\n    const [openEditSubcategory, setOpenEditSubcategory] = React.useState(false);\r\n\r\n    const [tab, setTab] = React.useState(0);\r\n    \r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleInputChangeCategory = (e) => {\r\n        const {name, value} = e.target;\r\n        setState({...state, category: {...state.category, [name]:value}});\r\n    }\r\n\r\n    const pushCategory = () => {\r\n        let data = category;\r\n        setState({\r\n            ...state,\r\n            categories:[...state.categories, {...data, id:state.categories.length}],\r\n        });\r\n        setCategory({name:'',description:''});\r\n    }\r\n\r\n    const handleInputChangeSubcategories = (e) => {\r\n        const {name, value} = e.target;\r\n        setSubcategory({...subcategory, [name]:value});\r\n    }\r\n\r\n    const pushSubcategory = () => {\r\n        let data = subcategory;\r\n        setState({\r\n            ...state,\r\n            subcategories:[...state.subcategories, {...data, id:getid(), category: state.category}],\r\n        });\r\n        setSubcategory({name:'',description:'', category:'', color:randomColor()});\r\n    }\r\n\r\n    const handleRemoveSubcategory = (index) => {\r\n        let subcategories = state.subcategories.slice();\r\n        subcategories.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            subcategories:[...subcategories],\r\n        });\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        let groupers = state.groupers.slice();\r\n        groupers.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            groupers:[...groupers],\r\n        });\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        let skus = state.skus.slice();\r\n        skus.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            skus:[...skus],\r\n        });\r\n    }\r\n\r\n    const getSubcategories = () => {\r\n        return (\r\n            state.subcategories.map((data, index) => \r\n                <React.Fragment key={index}>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta subcategoria?'\r\n                                title='Esta seguro de eliminar esta subcategoria?'\r\n                                onOk={()=>{handleRemoveSubcategory(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditSubcategory(!openEditSubcategory);\r\n                                setEditSubcategory({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const pushGrouper = (data) => {\r\n        setState({\r\n            ...state,\r\n            groupers:[...state.groupers, {...data, id: getid()}],\r\n        });\r\n    }\r\n\r\n    const pushSku = (data) => {\r\n        setState({\r\n            ...state,\r\n            skus:[...state.skus, {...data, id:getid()}],\r\n        });\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const getClasses = () => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<state.groupers.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                ['.'+(`stroke-color-${state.groupers[i].name}-${state.groupers[i].id}`.replace(/\\s/g, '_').split('.').join(\"\"))]:{\r\n                    stroke:`${state.groupers[i].color} !important`\r\n                }\r\n            };\r\n        }\r\n        ////console.log(JSON.stringify(lineClasses))\r\n        return lineClasses;\r\n    }\r\n\r\n    const handleUpdate = (data) => {\r\n        setState({...state, relations: data})\r\n    }\r\n\r\n    const skuFilter = (index) => {\r\n        let newSkus = [];\r\n        for(let i=0;i<state.skus.length;i++){\r\n            if(state.skus[i].subcategory.id===state.subcategories[index].id)\r\n                newSkus.push(state.skus[i])\r\n            //console.log(state.skus[i].subcategory.id, state.subcategories[index].id)\r\n        }\r\n        return (newSkus);\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div>\r\n                        {   subStep.step===0?\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"primary\">\r\n                                                Categoria\r\n                                            </Typography>\r\n                                            <Typography color=\"inherit\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade los datos de la categoria\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.description}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >  \r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            disabled\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={\r\n                                                ()=>{\r\n                                                    setSubStep({step:1}); \r\n                                                    if(subStep.step===1){\r\n                                                        setActiveStep(1); \r\n                                                        setSubStep({step:0})\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            disabled={state.category.name===''}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"inherit\">\r\n                                                Categorias\r\n                                            </Typography>\r\n                                            <Typography color=\"primary\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade o elimina subcategorias para <span style={{textTransform:'capitalize'}}>{state.category.name}</span>\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                                    </Grid>\r\n                                    { getSubcategories() }\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.description}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <ColorPicker\r\n                                            onChangeComplete={handleInputChangeSubcategories}\r\n                                            name='color'\r\n                                            value={subcategory.color}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                                            {/*<DeleteIcon/>*/}\r\n                                            <Button\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={pushSubcategory}\r\n                                                disabled={subcategory.name===''}\r\n                                            >\r\n                                                Guardar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1){setActiveStep(1); setSubStep({step:0})}}}\r\n                                            disabled={state.subcategories.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                                <Modal\r\n                                    open={openEditSubcategory}\r\n                                    onClose={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                >\r\n                                    <Paper \r\n                                        className={classes.modal}\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    variant='h6'\r\n                                                    align=\"left\"\r\n                                                >\r\n                                                    Editar subcategoria\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    label=\"Nombre\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    name='name'\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, name:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.name}\r\n                                                    required\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Descripcion\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='description'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, description:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.description}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <ColorPicker\r\n                                                    onChangeComplete={(e)=>{\r\n                                                        //console.log(e)\r\n                                                        setEditSubcategory({...editSubcategory, color:e.target.value})\r\n                                                    }}\r\n                                                    name='color'\r\n                                                    value={editSubcategory.color}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Stack spacing={2} direction=\"row\">\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='secondary'\r\n                                                        onClick={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                                    >\r\n                                                        Cancelar\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='primary'\r\n                                                        onClick={()=>{\r\n                                                            let aux = state.subcategories.slice();\r\n                                                            aux[editSubcategory.index] = editSubcategory;\r\n                                                            setState({...state, subcategories: aux});\r\n                                                            setOpenEditSubcategory(!openEditSubcategory)\r\n                                                        }}\r\n                                                        disabled={editSubcategory.name===''}\r\n                                                    >\r\n                                                        Actualizar\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Modal>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                <Typography color={subStep.step===0?\"primary\":\"inherit\"}>\r\n                                    Marcas\r\n                                </Typography>\r\n                                <Typography  color={subStep.step===1?\"primary\":\"inherit\"}>\r\n                                    SKUs\r\n                                </Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                        {subStep.step===0?\r\n                            <>\r\n                                <Groupers\r\n                                    groupers={state.groupers} \r\n                                    pushGrouper={pushGrouper}\r\n                                    updateGroupers={(data)=>{\r\n                                        //console.log('upating groupers', data)\r\n                                        setState({...state, groupers:data});\r\n                                    }}\r\n                                    removeGrouper={handleRemoveGrouper}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setActiveStep(0); setSubStep({step:1})}}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.groupers.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Skus\r\n                                    groupers={state.groupers} \r\n                                    subcategories={state.subcategories}\r\n                                    //groupers={[{color:'#eeefaf', name:'primer agrupador'},{color:'#25fafa', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}]}\r\n                                    //subcategories={[{name:'primero'},{name:'2'},{name:'uno con texto largo'},{name:'uno mas'}]}\r\n                                    pushSku={pushSku}\r\n                                    skus={state.skus}\r\n                                    updateSkus={(data)=>{\r\n                                        setState({...state, skus: data})\r\n                                    }}\r\n                                    removeSku={handleRemoveSku}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.skus.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </React.Fragment>\r\n                );\r\n            case 2:\r\n            return(\r\n                <>\r\n                    <Grid container alignItems='center' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align='left'\r\n                            >\r\n                                Relaciona tus SKU con los de los competidores\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='caption'\r\n                                align='left'\r\n                                display='block'\r\n                                color='#aaa'\r\n                            >\r\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                // <RelatableBoxes\r\n                                //     dataFrom = {[...state.skus]}\r\n                                //     dataTo = {[...state.skus]}\r\n                                //     lineClasses={getClasses()}\r\n                                //     onUpdate={handleUpdate}\r\n                                //     relations={state.relations}\r\n                                // />\r\n                            }\r\n                            <Tabs\r\n                                tabs={state.subcategories}\r\n                                onChange={(index)=>{\r\n                                    //skuFilter(index);\r\n                                    setTab(index);\r\n                                }}\r\n                            >\r\n                                <RelatableBoxes\r\n                                     dataFrom = {[...skuFilter(tab)]}\r\n                                     dataTo = {[...skuFilter(tab)]}\r\n                                     lineClasses={getClasses()}\r\n                                     onUpdate={handleUpdate}\r\n                                     relations={state.relations}\r\n                                 />\r\n                            </Tabs>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{setActiveStep(1)}}\r\n                                disabled={subStep.step===0}\r\n                            >\r\n                                Volver\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setActiveStep(3)\r\n                                    onUpdate(state);\r\n                                    onFinish();\r\n                                }}\r\n                            >\r\n                                Guardar categoria\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            );\r\n            // case 3:\r\n            //     return (\r\n            //         <>\r\n            //             <Grid container alignItems='center' spacing={3}>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Typography\r\n            //                         variant='h6'\r\n            //                         align='left'\r\n            //                     >\r\n            //                         Categoria {state.category.name} creada con exito\r\n            //                     </Typography>\r\n            //                 </Grid>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Paper \r\n            //                         variant=\"outlined\"\r\n            //                         style={{padding:'1em'}}\r\n            //                     >\r\n            //                         <div>\r\n                                        \r\n            //                         <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n            //                             <Grid item xs={12}>\r\n            //                                 <Typography \r\n            //                                     variant='subtitle1'\r\n            //                                     align='left'\r\n            //                                     style={{textTransform:'capitalize'}}\r\n            //                                 >\r\n            //                                     {state.category.name}\r\n            //                                 </Typography>\r\n            //                                 <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                     {state.category.description}\r\n            //                                 </Typography>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         Marcas\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.groupers.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                                         <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>{data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         SKUs\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.skus.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left'>\r\n            //                                                         {data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                         </Grid>\r\n            //                         </div>\r\n            //                     </Paper>\r\n            //                 </Grid>\r\n            //             </Grid>\r\n            //             <div\r\n            //                 style={{\r\n            //                     marginTop: '1em'\r\n            //                 }}\r\n            //             >\r\n            //                 <Stack spacing={2} direction=\"row\">\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         onClick={()=>{}}\r\n            //                     >\r\n            //                         Agregar otra categoria\r\n            //                     </Button>\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         color='primary'\r\n            //                         onClick={()=>{\r\n            //                             if(onFinish){\r\n            //                                 onFinish();\r\n            //                             }\r\n            //                         }}\r\n            //                     >\r\n            //                         Finalizar\r\n            //                     </Button>\r\n            //                 </Stack>\r\n            //             </div>\r\n            //         </>\r\n            //     );\r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv classes={getClasses()}>\r\n            <Grid container alignItems='flex-start' spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <div className={classes.root}>\r\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                            {steps.map((label, index) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                                <StepContent>\r\n                                    <div className={classes.actionsContainer}>\r\n                                        <div>\r\n                                            {\r\n                                            // <Button\r\n                                            //     disabled={activeStep === 0}\r\n                                            //     onClick={handleBack}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     Back\r\n                                            // </Button>\r\n                                            // <Button\r\n                                            //     variant=\"contained\"\r\n                                            //     color=\"primary\"\r\n                                            //     onClick={handleNext}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                            // </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </StepContent>\r\n                            </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        {\r\n                            // activeStep === steps.length && (\r\n                            // <Paper square elevation={0} className={classes.resetContainer}>\r\n                            //     <Typography>All steps completed - you&apos;re finished</Typography>\r\n                            //     <Button onClick={handleReset} className={classes.button}>\r\n                            //         Reset\r\n                            //     </Button>\r\n                            // </Paper>\r\n                            // )\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n                            <Grid container alignItems='center' spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <LinearProgress variant=\"determinate\" value={activeStep*33.333} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div>\r\n                                        {\r\n                                            getStepContent(activeStep)\r\n                                        }\r\n                                        {\r\n                                            ////console.log(state.groupers,'groupers')\r\n                                        }\r\n                                        {\r\n                                            activeStep<3?\r\n                                                <FullScreenDialog\r\n                                                    skus={sortSkus( state.subcategories, state.skus)}\r\n                                                    categories={[state.category]}\r\n                                                    subcategories={sortSubcategories( [state.category], state.subcategories)}\r\n                                                />\r\n                                            :\r\n                                                <></>\r\n                                        }\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        {/*<CardActions>\r\n                            <Button variant='contained'>Learn More</Button>\r\n                        </CardActions>*/}\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default NewData;","import React from 'react';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Button from '@mui/material/Button';\r\nimport FullScreenDialog from '../../../Components/FullScreenDialog';\r\n\r\nconst Category = ({data}) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        console.log('test')\r\n        setOpen(!open);\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper \r\n                        variant=\"outlined\"\r\n                        style={{padding:'1em'}}\r\n                    >\r\n                        <div>\r\n                            <Grid container alignItems='center' spacing={1} alignItems=\"stretch\">\r\n                                <Grid item xs={12}>\r\n                                    <Typography \r\n                                        variant='subtitle1'\r\n                                        align='left'\r\n                                        style={{textTransform:'capitalize'}}\r\n                                    >\r\n                                        {data.category.name}\r\n                                    </Typography>\r\n                                    <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                        {data.category.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left'>\r\n                                    <FullScreenDialog\r\n                                        skus={sortSkus( data.subcategories, data.skus)}\r\n                                        categories={[data.category]}\r\n                                        subcategories={sortSubcategories( [data.category], data.subcategories)}\r\n                                        position='relative'\r\n                                    >\r\n                                        <Button variant=\"outlined\">\r\n                                            Ver grafico\r\n                                        </Button>\r\n                                    </FullScreenDialog>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left' style={{marginBottom: open ? '1.5em': '0'}}>\r\n                                    {open ? <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver menos <ExpandLess/></div> : <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver mas <ExpandMore/></div>}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Subcategorias\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.subcategories.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.description}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Marcas\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.groupers.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.maker}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                SKUs\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.skus.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography key={index} variant='body2' align='left'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.grouper.name} / {data.grouper.maker}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.content} {data.unit} / {data.presentation}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport NewData from '../NewData';\r\nimport Category from './Category';\r\n\r\nconst Categories = () => {\r\n\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [waiting, setWaiting] = React.useState(false);\r\n\r\n    return (\r\n        <>\r\n            {waiting?\r\n                <>\r\n                    {\r\n                    categories.map((state, index)=>{\r\n                        return (\r\n                        <div key={index} style={{marginBottom:'1em'}}>\r\n                            <Category\r\n                                data={state}\r\n                            />\r\n                        </div>\r\n                        );\r\n                    })\r\n                    }\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{\r\n                                    setWaiting(false);\r\n                                }}\r\n                            >\r\n                                Agregar otra categoria\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                \r\n                                }}\r\n                            >\r\n                                Finalizar\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            :\r\n                <NewData\r\n                    onUpdate={(data)=>{\r\n                        setCategories([...categories, data])\r\n                    }}\r\n                    onFinish={()=>{\r\n                        setWaiting(true);\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories;","export default __webpack_public_path__ + \"static/media/horus.a67137fc.svg\";","import React from 'react';\r\nimport useMousePosition from '../../Hooks/useMousePosition';\r\nimport { makeStyles } from '@mui/styles';\r\nimport logo from './horus.svg';\r\nimport { display } from '@mui/system';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    cursor: {\r\n        position: 'fixed',\r\n        width: '2em',\r\n        height: '2em',\r\n        //backgroundColor:'red',\r\n        zIndex: '1000000',\r\n        //cursor: 'none'\r\n        //backgroundColor: 'red',\r\n        display: 'flex',\r\n        filter: 'brightness(0)'\r\n    },\r\n}));\r\n\r\nconst CustomCursor = () => {\r\n    const classes = useStyles();\r\n    const { x, y } = useMousePosition();\r\n\r\n    return (\r\n        <div\r\n            style={{ left: `calc(${x}px + .5em)`, top: `calc(${y}px + 1.25em)` }}\r\n            className={classes.cursor}\r\n        >\r\n            <img style={{width:'100%'}} src={logo}/>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default CustomCursor;","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useMousePosition() {\r\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event) => {\r\n      const { clientX, clientY } = event;\r\n      setMousePosition({ x: clientX, y: clientY });\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n    };\r\n  }, []);\r\n\r\n  return mousePosition;\r\n}\r\n","import React from 'react';\r\nimport Categories from './Pages/Categories';\r\nimport CustomCursor from './Components/CustomCursor';\r\nimport './App.css';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2B9982',\r\n    },\r\n    secondary: {\r\n      main: '#eee'\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <ThemeProvider theme={theme}>\r\n        <CustomCursor/>\r\n        <Categories/>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}