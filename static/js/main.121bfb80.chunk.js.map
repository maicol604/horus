{"version":3,"sources":["Components/ConfirmDialog/index.js","Components/CheckboxGroup/index.js","Components/HorusChart/Item/Variable/index.js","Components/HorusChart/Item/index.js","Components/HorusChart/index.js","Components/Modal/index.js","Components/FullScreenDialog/index.js","Components/ColorPicker/index.js","Pages/NewData/Groupers/index.js","Components/RadioGroup/index.js","Pages/NewData/Skus/RadioGropupGroupers/index.js","Components/UploadImage/index.js","Pages/NewData/Skus/index.js","Components/RelatableBoxes/Draggable/index.js","Components/RelatableBoxes/StartBox/index.js","Components/RelatableBoxes/EndBox/DeleteNode/index.js","Components/RelatableBoxes/EndBox/index.js","Components/ScreenShot/index.js","Components/RelatableBoxes/index.js","Components/Tabs/index.js","Pages/NewData/index.js","Pages/Categories/Category/index.js","Pages/Categories/index.js","Components/CustomCursor/horus.svg","Components/CustomCursor/index.js","Hooks/useMousePosition.js","App.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","Button","onClick","children","Dialog","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","color","onOk","autoFocus","useStyles","makeStyles","theme","colorSquare","width","height","borderRadius","marginRight","border","flex","checkboxContainer","display","alignItems","CheckboxGroup","items","onChange","name","itemList","setItemList","classes","handleChange","index","aux","JSON","parse","stringify","slice","checked","target","value","useEffect","flag","i","length","map","data","FormGroup","row","onchange","className","style","backgroundColor","Fragment","FormControlLabel","control","Checkbox","label","variablesCircle","marginBottom","popup","position","bottom","left","defaultVariable","Variable","handleOpen","Card","CardContent","Grid","container","spacing","item","xs","fullWidth","onMouseEnter","onMouseLeave","padding","overflow","zIndex","groupersContainer","variablesContainer","top","right","variablesContainerBottom","borderColor","description","opacity","paddingLeft","paddingTop","fontSize","Item","variant","groupers","vars","grouper","img","Avatar","alt","src","sx","bgcolor","toUpperCase","charAt","textTransform","postition","maker","presentation","fontWeight","content","unit","getVariantContent","WrapperDiv","styled","div","box","chartRow","flexDirection","justifyContent","HorusChart","categories","subcategories","skus","settings","setSettings","newSettings","j","category","push","from","split","join","to","positions","start","side","indent","end","subcategory","getItem","type","variables","lineClasses","stroke","strokeWidth","getClasses","transform","boxShadow","p","visible","Modal","Paper","root","appBar","input","iconButton","button","close","cursor","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","setVisible","apply","conf","filter","setFilter","handleClickOpen","Fab","size","fullScreen","TransitionComponent","edge","Typography","Divider","e","Stack","primary","newSkus","getSkus","colorContainer","colorPicker","ColorPicker","onChangeComplete","background","state","setState","anchorEl","setAnchorEl","callback","wrapperRef","useRef","handleChangeComplete","hex","handleVisible","currentTarget","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","Menu","disableAlpha","initialValue","formControl","minWidth","selectEmpty","modal","randomColor","Math","floor","random","toString","Step2","pushGrouper","updateGroupers","removeGrouper","setGrouper","editGrouper","setEditGrouper","openEditGrouper","setOpenEditGrouper","handleInputGrouper","handleRemoveGrouper","align","TextField","required","multiline","disabled","RadioButtonsGroup","FormControl","component","FormLabel","RadioGroup","Radio","UploadImage","file","setFile","hidden","accept","files","reader","FileReader","readAsDataURL","onload","result","pushSku","updateSkus","removeSku","sku","setSku","openEditSku","setOpenEditSku","editSku","setEditSku","filterData","handleInputSku","handleRemoveSku","InputLabel","Select","MenuItem","replace","marginTop","cpy","dragabbleNode","TransitionEvent","Draggable2","fixed","onStop","nodeRef","x","y","setConf","getTranslateValues","translate","parseInt","error","console","handle","defaultPosition","scale","onStart","onDrag","visibility","startNode","boxSizing","transition","startNodeContainer","detail","startPoint","StartBox","focus","setFocus","borderWidth","dataContainer","Draggable","endNodePoint","nodeContainer","DeleteNode","related","relations","onEnterItem","onLeaveItem","onDelete","Boolean","Tooltip","placement","anchorOrigin","horizontal","vertical","MenuListProps","handleDelete","endNode","magnet","grouperCircle","EndBox","onEnter","onExit","onEnterDelete","onExitDelete","hover","setHover","circularButon","margin","alert","capture","ScreenShot","onCapture","createRef","useScreenshot","image","takeScreenShot","loaded","setLoaded","onLoad","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","downloadBase64File","paddingBottom","col","RelatableBoxes","dataFrom","dataTo","onUpdate","draggablesNodes","setDraggablesNodes","enter","setEnter","newArray","newData","toData","fromData","handleUpdate","handleEnter","handleExit","handleStop","isRelated","changeLineColorFrom","newClass","getRelations","response","aux2","newDraggables","hanldeDelete","TabPanel","other","role","Box","BasicTabs","tabs","setValue","borderBottom","Tabs","newValue","Tab","a11yProps","getid","initialValues","pos","actionsContainer","resetContainer","NewData","onFinish","activeStep","setActiveStep","step","subStep","setSubStep","setSubcategory","editSubcategory","setEditSubcategory","openEditSubcategory","setOpenEditSubcategory","tab","setTab","steps","handleInputChangeCategory","handleInputChangeSubcategories","pushSubcategory","splice","getSubcategories","handleRemoveSubcategory","skuFilter","Stepper","orientation","Step","StepLabel","StepContent","LinearProgress","Breadcrumbs","separator","Groupers","Skus","getStepContent","base","sorted","sortSkus","sortSubcategories","Category","handleClick","log","Collapse","in","timeout","unmountOnExit","light","Categories","setCategories","waiting","setWaiting","CustomCursor","mousePosition","setMousePosition","mouseMoveHandler","clientX","clientY","useMousePosition","logo","createTheme","palette","main","secondary","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.121bfb80.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if(props.onOk){\r\n            props.onOk();\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <Button onClick={handleClickOpen}>\r\n            {props.children}\r\n        </Button>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\" autoFocus>\r\n                    Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function CheckboxGroup({items=[], title='', onChange, name}) {\r\n    const [itemList, setItemList] = React.useState([]);\r\n    const classes = useStyles();\r\n    const handleChange = (index) => {\r\n        let aux = JSON.parse(JSON.stringify(itemList.slice()));\r\n        aux[index].checked = !aux[index].checked;\r\n        setItemList(aux);\r\n        if(onChange)\r\n            onChange({target: {name, value:aux}})\r\n    };\r\n\r\n    React.useEffect(()=>{\r\n        //console.log(items)\r\n        let flag = false;\r\n        for(let i=0;i<items.length;i++){\r\n            if(items[i].checked)\r\n                flag = true;\r\n        }\r\n        setItemList(items); \r\n        if(!flag)\r\n            setItemList(items.map(data=>({ ...data, checked:false })));\r\n    },[])\r\n\r\n\r\n    return (\r\n        <FormGroup row onChange={onchange}>\r\n            {itemList.map((data, index)=>\r\n                <div key={index} className={classes.checkboxContainer}>\r\n                    {data.color?\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                        :\r\n                        <React.Fragment/>\r\n                    }\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={data.checked}\r\n                                onChange={()=>handleChange(index)}\r\n                                name={ index }\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={data.name}\r\n                    />\r\n                </div>\r\n            )}\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    variablesCircle: {\r\n        width: '1.5em',\r\n        height: '.5em',\r\n        borderRadius: '5px',\r\n        flex: '0 0 auto',\r\n        marginBottom: '.25em',\r\n        border: '1px solid #fff'\r\n    },\r\n    popup: {\r\n        position: 'absolute',\r\n        bottom: '1.5em',\r\n        left: '0',\r\n        width: '10em'\r\n    }\r\n}));\r\n\r\nconst defaultVariable = {\r\n    name: 'testing name',\r\n    //variables: [{name:'test 1', color: 'blue'}, {name: 'test 2', color: 'red'}]\r\n}\r\n\r\nconst Variable = ({color, data = defaultVariable, style, position='top'}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = (value) => {\r\n        setOpen(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{...style, position:'relative'}}>\r\n            <div className={classes.popup} style={{display: open?'flex':'none'/*, bottom: position==='top'?'-2em':'0'*/}}>\r\n                <Card style={{width: '100%'}}>\r\n                    <CardContent>\r\n                        <Grid container alignItems='center' spacing={3}>\r\n                            <Grid item xs={12} fullWidth>\r\n                                {data.name}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <div \r\n                className={classes.variablesCircle} \r\n                style={{backgroundColor:color}}\r\n                onMouseEnter={()=>handleOpen(true)}\r\n                onMouseLeave={()=>handleOpen(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variable;","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport Variable from './Variable';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    container: {\r\n        width: '15em',\r\n        //height: '5em',\r\n        position: 'relative',\r\n        marginBottom: '2em',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        overflow: 'hidden',\r\n        zIndex: 1,\r\n        display:'flex', \r\n        alignItems:'center'\r\n        //border: '1px solid #E6EBF1'\r\n    },\r\n    groupersContainer: {\r\n        display: 'flex',\r\n        position: 'absolute'\r\n    },\r\n    variablesContainer: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '-2em'\r\n    },\r\n    variablesContainerBottom: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        bottom: '-.25em',\r\n    },\r\n    borderColor: {\r\n        backgroundColor: props => props.color,\r\n        height: '110%',\r\n        width: '.5em',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    description: {\r\n        opacity: '.5',\r\n        padding: '.5em',\r\n        paddingLeft: 0,\r\n        paddingTop: '.25em',\r\n        fontSize: '.75em'\r\n    }\r\n}));\r\n\r\nconst Item = ({id, style, title='', variant='', groupers=[], vars=[], data=null}) => {\r\n\r\n    const classes = useStyles({color:data.grouper?data.grouper.color:''});\r\n\r\n    const getVariantContent = () => {\r\n        switch(variant){\r\n            case 'sku':\r\n                return (\r\n                    <>\r\n                        <div style={{postition: 'relative', width: '100%'}}>\r\n                            <div className={classes.borderColor}/>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.name}\r\n                                </div> / \r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.maker}\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: 'flex'}}>\r\n                                <span style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.presentation}\r\n                                </span> \r\n                                <span style={{fontWeight: '600'}}>\r\n                                    {data.content} {data.unit} / {data.presentation}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.variablesContainer}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'subcategory':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            default:\r\n                return (<React.Fragment/>);     \r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div id={id} className={classes.container} style={{...style}}>\r\n            {variant==='sku'?                    \r\n            <span style={{marginRight:'1em'}}>\r\n                {\r\n                data.img?\r\n                        <Avatar\r\n                            alt=\"\"\r\n                            src={data.img}\r\n                            sx={{ width: 50, height: 50 }}\r\n                        />\r\n                :\r\n                    <Avatar\r\n                        sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                    >\r\n                        {data.name.toUpperCase().charAt(0)}\r\n                    </Avatar>\r\n                }\r\n            </span>\r\n            :\r\n            <></>}\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <span style={{textTransform:'uppercase'}}>\r\n                        {title}\r\n                    </span>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop:'0'}}>\r\n                    {getVariantContent()}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport ReactBezier from \"react-bezier\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport styled from 'styled-components';\r\n\r\nimport Item from './Item';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    box: {\r\n        width: '5em',\r\n        height: '5em',\r\n        backgroundColor: 'red'\r\n    },\r\n    chartRow: {\r\n        width: '30vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around'\r\n    }\r\n}));\r\n\r\n/*\r\n    {\r\n        from: \"cube-1\",\r\n        to: \"cube-2\",\r\n        positions: {\r\n            start: {\r\n                side: \"bottom\",\r\n                indent: 20\r\n            },\r\n            end: {\r\n                side: \"top\",\r\n            },\r\n        },\r\n        style: \"red-line\",\r\n  }\r\n*/\r\n\r\nconst HorusChart = ({categories=[], subcategories=[], skus=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [settings, setSettings] = React.useState([]);\r\n\r\n    const getClasses = (data) => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<data.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                [\".subcategory-color-\"+(`${data[i].id}`.split('.').join(\"\"))]:{\r\n                    stroke:`${data[i].color}`,\r\n                    strokeWidth: '3px',\r\n                }\r\n            };\r\n        }\r\n        //console.log(lineClasses)\r\n        return lineClasses;\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(categories)\r\n        let newSettings = [];\r\n        for(let i=0;i<categories.length;i++){\r\n            for(let j=0;j<subcategories.length;j++){\r\n                if(`${categories[i].id}`===`${subcategories[j].category.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"category-\"+(`${categories[i].id}`.split('.').join(\"\")),\r\n                            to: \"subcategory-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        //console.log(newSettings)\r\n        ////console.log('sub',subcategories)\r\n        ////console.log('skus',skus)\r\n        for(let i=0;i<subcategories.length;i++){\r\n            for(let j=0;j<skus.length;j++){\r\n                if(`${subcategories[i].id}`===`${skus[j].subcategory.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"subcategory-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                            to: \"sku-\"+(`${skus[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        ////console.log(newSettings)\r\n        setSettings(newSettings);\r\n    },[categories, subcategories, skus])\r\n\r\n    const getItem = (data, type) => {\r\n        ////console.log(data.groupers)\r\n        return (\r\n            <Item \r\n                id={`${type}-${data.id}`}\r\n                //id={'cube-'+data.id}\r\n                className={classes.box}\r\n                title={data.name}\r\n                variant={type}\r\n                vars={data.variables}\r\n                groupers={data.groupers}\r\n                data={data}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv style={{padding: '5em'}} classes={getClasses(subcategories)}>\r\n            <ReactBezier settings={settings}>\r\n                <div style={{display:'flex'}}>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            categories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'category')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            subcategories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'subcategory')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            skus.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'sku')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ReactBezier>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default HorusChart;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default ({children, visible=true, onClose}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={visible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Paper sx={style}>\r\n          {\r\n              children\r\n          }\r\n        </Paper>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slide from '@mui/material/Slide';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport CheckboxGroup from '../CheckboxGroup';\r\n\r\nimport HorusChart from '../HorusChart';\r\n\r\nimport Fab from '@mui/material/Fab';  \r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport Modal from '../Modal';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    //marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    //marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    position: props=>props.position,\r\n    bottom: props=>props.position==='fixed'?'1em':'auto',\r\n    right: props=>props.position==='fixed'?'1em':'auto',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '0em',\r\n    top: '1em',\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst datalist = [\r\n  {\r\n    title:'Marcas',\r\n    items: [\r\n      {color:'#eeefaf', name:'primer agrupador'},{color:'#e74c3c', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}\r\n    ]\r\n  }\r\n]\r\n\r\nexport default function FullScreenDialog({skus, categories, subcategories, position='fixed', children}) {\r\n  const classes = useStyles({position});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [filter, setFilter] = React.useState(\r\n    {\r\n      skus:skus,\r\n      subcategories:subcategories,\r\n      groupers:null,\r\n      apply: false,\r\n      conf: {\r\n        skus:skus,\r\n        subcategories:subcategories,\r\n        groupers:null,\r\n      }\r\n    }\r\n  );\r\n\r\n  React.useEffect(()=>{\r\n    if(subcategories.length>0){\r\n      setFilter({...filter, subcategories, conf:{...filter.conf, subcategories:subcategories}})\r\n    }\r\n  },[subcategories])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getSkus = () => {\r\n    //console.log(filter)\r\n    if(!filter.apply){\r\n      return skus;\r\n    }\r\n    let newSkus = [];\r\n    for(let j=0;j<filter.subcategories.length;j++){\r\n      for(let i=0;i<skus.length;i++){\r\n        //console.log(skus[i])\r\n        if(skus[i].subcategory.id===filter.subcategories[j].id && filter.subcategories[j].checked){\r\n          newSkus.push(skus[i])\r\n        }\r\n      }\r\n    }\r\n    return (newSkus);\r\n  }\r\n\r\n  const getSubcategories = () => {\r\n    if(!filter.apply){\r\n      return subcategories;\r\n    }\r\n    return filter.subcategories.filter(item=> item.checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className={classes.button}>\r\n          {children?\r\n            <div style={{width:'max-content'}} onClick={handleClickOpen}>\r\n              {children}\r\n            </div>\r\n            :\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={handleClickOpen}>\r\n              <OpenWithIcon />\r\n            </Fab>\r\n          }\r\n        </div>\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} className={classes.root}>\r\n            <div style={{backgroundColor: '#1F1C36', width: '200%', height: '100vh', position: 'fixed'}}/>\r\n            <div style={{backgroundColor: '#1F1C36', height: '100vh'}}>\r\n              <div className={classes.close} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <HighlightOffIcon />\r\n              </div>\r\n              <div>\r\n\r\n                {\r\n                  // <Drawer>\r\n                  //   <div style={{padding: '1em'}}>\r\n                  //     <span>\r\n                  //       <InputBase\r\n                  //         className={classes.input}\r\n                  //         placeholder=\"Buscar\"\r\n                  //         variant=\"outlined\"\r\n                  //       />\r\n                  //       <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                  //         <SearchIcon />\r\n                  //       </IconButton>\r\n                  //       <Divider />\r\n                  //     </span>\r\n                  //     {\r\n                  //       datalist.map((data, index)=>\r\n                  //         <span key={index}>\r\n                  //           <Typography variant='subtitle1'>\r\n                  //             {data.title}\r\n                  //           </Typography>\r\n                  //           <List style={{width:'15em'}}>\r\n                  //             {data.items.map((item, i) => (\r\n                  //               <ListItem button key={i}>\r\n                  //                 {\r\n                  //                   //<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                  //                 }\r\n                  //                 <ListItemIcon style={{minWidth:'2.5em'}}>\r\n                  //                   <div style={{width:'1.5em', height:'1.5em', borderRadius:'50%', backgroundColor:item.color}}/>\r\n                  //                 </ListItemIcon>\r\n                  //                 <ListItemText primary={item.name} />\r\n                  //               </ListItem>\r\n                  //             ))}\r\n                  //           </List>\r\n                  //           <Divider />\r\n                  //         </span>\r\n                  //       )\r\n                  //     }\r\n                  //   </div>\r\n                  // </Drawer>\r\n                }\r\n                {\r\n                  <Button onClick={()=>{setVisible(true)}}>\r\n                    <FilterAltIcon/>\r\n                  </Button>\r\n                }\r\n                {\r\n                  <Modal\r\n                    visible={visible}\r\n                    onClose={()=>{setVisible(false)}}\r\n                  >\r\n                    <div>\r\n\r\n                      <Typography variant='h5'>\r\n                        Filtros\r\n                      </Typography>\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Subcategorias\r\n                      </Typography>\r\n                      {\r\n                        //console.log(subcategories)\r\n                      }\r\n                      <CheckboxGroup\r\n                        items={filter.conf.subcategories}\r\n                        title='some'\r\n                        name='subcategories'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, conf:{...filter.conf, subcategories: e.target.value}})\r\n                        }}\r\n                      />\r\n                      \r\n                      {/*<Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Skus\r\n                      </Typography>\r\n                      <CheckboxGroup\r\n                        items={skus}\r\n                        title='some'\r\n                        name='skus'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, skus: e.target.value})\r\n                        }}\r\n                      />*/}\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Stack spacing={2} direction=\"row\">\r\n                        <Button \r\n                          primary \r\n                          variant='contained' \r\n                          onClick={()=>{\r\n                            setFilter({...filter, apply:true, subcategories: filter.conf.subcategories});\r\n                            setVisible(false);\r\n                          }}\r\n                        >\r\n                          Filtrar\r\n                        </Button>\r\n                        <Button \r\n                          primary \r\n                          variant='outlined'\r\n                          onClick={()=>{\r\n                            setFilter({...filter, apply:false})\r\n                          }}\r\n                        >\r\n                          Limpiar filtros\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                  </Modal>\r\n                }\r\n                <HorusChart\r\n                  categories={[...categories]}\r\n                  subcategories={getSubcategories()}\r\n                  skus={getSkus()}\r\n                />\r\n              </div>\r\n            </div>\r\n        </Dialog>\r\n        {/*<Divider />*/}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        width: 'inherit'\r\n    },\r\n    colorPicker: {\r\n        position: 'absolute',\r\n        width: 'max-content',\r\n        zIndex: '10'\r\n    }\r\n});\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst ColorPicker = ({ onChangeComplete, value='#ffffff', name='' }) => {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({background:'#ffffff'});\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n    useEffect(() => {\r\n        setState({background:value});\r\n    },[value])\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const handleChangeComplete = (color) => {\r\n        if(onChangeComplete)\r\n            onChangeComplete({target: { name, value: color.hex}});\r\n        setState({ background: color.hex });\r\n    };\r\n\r\n    const handleVisible = (e) => {\r\n        setVisible(!visible);\r\n        setAnchorEl(e.currentTarget)\r\n    }\r\n    useOutsideAlerter(wrapperRef, handleVisible);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.colorContainer} onClick={handleVisible}>\r\n                <div className={classes.colorSquare} style={{backgroundColor:state.background}}/>\r\n                <Typography variant=\"subtitle1\">{state.background.split('#')[1]}</Typography>\r\n            </div>\r\n            {/*visible?\r\n                <div className={classes.colorPicker} ref={wrapperRef}>\r\n                    <SketchPicker\r\n                        color={ state.background }\r\n                        onChangeComplete={ handleChangeComplete }\r\n                        onChange={handleChangeComplete}\r\n                        disableAlpha\r\n                    />\r\n                </div>\r\n                :\r\n                <React.Fragment/>*/\r\n            }\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={anchorEl}\r\n                onClose={()=>{\r\n                    setAnchorEl(null);\r\n                }}\r\n            >\r\n                <SketchPicker\r\n                    color={ state.background }\r\n                    onChangeComplete={ handleChangeComplete }\r\n                    onChange={ handleChangeComplete }\r\n                    disableAlpha\r\n                />\r\n            </Menu>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport ColorPicker from '../../../Components/ColorPicker';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    maker:'',\r\n    color:'#ffffff',\r\n    //presentation :''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        //margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst Step2 = ({ groupers=[], pushGrouper, updateGroupers, removeGrouper }) => {\r\n    const classes = useStyles();\r\n    const [grouper, setGrouper] = React.useState({\r\n        ...initialValue,\r\n        color: randomColor(),\r\n    })\r\n\r\n    const [editGrouper, setEditGrouper] = React.useState({});\r\n    const [openEditGrouper, setOpenEditGrouper] = React.useState(false);\r\n\r\n    const getGroupers = () => {\r\n        return (\r\n            groupers.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.maker}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorContainer}>\r\n                            <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                            {/*<Typography variant=\"subtitle1\" align=\"left\">{data.color.split('#')[1]}</Typography>*/}\r\n                        </div>\r\n                    </Grid>\r\n                    {/*<Grid item xs={2}>\r\n                        <Typography align=\"left\">\r\n                            {data.presentation }\r\n                        </Typography>\r\n                    </Grid>*/}\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta marca?'\r\n                                onOk={()=>{handleRemoveGrouper(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor: 'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditGrouper(!openEditGrouper);\r\n                                setEditGrouper({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputGrouper = (e) => {\r\n        const {name, value} = e.target;\r\n        setGrouper({...grouper, [name]:value});\r\n    }\r\n\r\n    const handleSaveGrouper = () => {\r\n        if(pushGrouper){\r\n            pushGrouper(grouper);\r\n        }   \r\n        setGrouper({...initialValue, color: randomColor()})\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        if(removeGrouper)\r\n            removeGrouper(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align=\"left\"\r\n                    >\r\n                        Añade o elimina tus marcas\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align=\"left\"\r\n                        display=\"block\"\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marca</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Fabricante</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                </Grid>\r\n                {/*<Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Presentación</Typography>\r\n                </Grid>*/}\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getGroupers() }\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Marca\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        name='name'\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Fabricante\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='maker'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.maker}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ColorPicker \r\n                        onChangeComplete={handleInputGrouper}\r\n                        name='color'\r\n                        value={grouper.color}\r\n                    />\r\n                </Grid>\r\n                {/*<Grid item xs={2}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Presentación\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='presentation'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.presentation}\r\n                        required\r\n                    />\r\n                </Grid>*/}\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveGrouper}\r\n                            disabled={grouper.name==='' || grouper.maker===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Modal\r\n                open={openEditGrouper}\r\n                onClose={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar marca\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Marca\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, name:e.target.value})\r\n                                }}\r\n                                value={editGrouper.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Fabricante\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='maker'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, maker:e.target.value})\r\n                                }}\r\n                                value={editGrouper.maker}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <ColorPicker \r\n                                onChangeComplete={(e)=>{\r\n                                    //console.log(e)\r\n                                    setEditGrouper({...editGrouper, color:e.target.value})\r\n                                }}\r\n                                name='color'\r\n                                value={editGrouper.color}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, presentation:e.target.value})\r\n                                }}\r\n                                value={editGrouper.presentation}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = groupers.slice();\r\n                                        aux[editGrouper.index] = editGrouper;\r\n                                        if(updateGroupers){\r\n                                            //console.log(editGrouper)\r\n                                            updateGroupers(aux, editGrouper.index);\r\n                                        }\r\n                                        setOpenEditGrouper(!openEditGrouper)\r\n                                    }}\r\n                                    disabled={editGrouper.name==='' || editGrouper.maker==='' || editGrouper.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value=null}) {\r\n    //const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={data.name} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '.5em',\r\n        height: '1em',\r\n        borderRadius: '5px',\r\n        marginRight: '.25em',\r\n        border: '1px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value}) {\r\n    //const [value, setValue] = React.useState();\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        ////console.log(JSON.parse(event.target.value))\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n    //console.log(value)\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={<div style={{display: 'flex', alignItems: 'center'}}><div className={classes.colorSquare} style={{backgroundColor:data.color}}/>{data.name}</div>} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst UploadImage = ({title='Upload file', variant=\"contained\", onChange, name, value}) => {\r\n\r\n    const [file,setFile] = React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        setFile(value);\r\n    },[value])\r\n\r\n    const handleChage = (event) => {\r\n        let files = event.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(files[0]);\r\n \r\n        reader.onload = (e) => {\r\n            setFile(e.target.result)\r\n            if(onChange){\r\n                //console.log({target:{value:e.target.result, name}})\r\n                onChange({target:{value:e.target.result, name}})\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        setFile(null)\r\n        if(onChange){\r\n            onChange({target:{value:null, name}})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection:'column'}}>\r\n            {file?\r\n                <div style={{width:'100%', position:'relative'}}>\r\n                    \r\n                    <div style={{position:'absolute', top:'.5em', right:'.5em', cursor:'pointer', fontSize: '1em'}} onClick={handleRemove}>\r\n                        <DeleteIcon/>\r\n                    </div>\r\n                    <img src={file} style={{width:'100%'}}/>\r\n                </div>\r\n                :<></>\r\n            }\r\n            <Button\r\n                variant={variant}\r\n                component=\"label\"\r\n                style={{width:'100%'}}\r\n            >\r\n                {title}\r\n                <input\r\n                    type=\"file\"\r\n                    hidden\r\n                    accept='.jpeg, .png, .jpg'\r\n                    onChange={handleChage}\r\n                />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadImage;  ","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport RadioGroup from '../../../Components/RadioGroup';\r\nimport RadioGropupGroupers from './RadioGropupGroupers';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport UploadImage from '../../../Components/UploadImage';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    content:'',\r\n    unit: null,\r\n    grouper:null,\r\n    subcategory:null,\r\n    presentation:'',\r\n    img:null\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n       // margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst Step2 = ({ groupers=[], pushSku, subcategories=[], skus=[], updateSkus, removeSku }) => {\r\n\r\n    const classes = useStyles();\r\n    const [sku, setSku] = React.useState({\r\n        ...initialValue\r\n    })\r\n\r\n    const [filter, setFilter] = React.useState({\r\n        subcategory:null\r\n    })\r\n\r\n    const [openEditSku, setOpenEditSku] = React.useState(false);\r\n    const [editSku, setEditSku] = React.useState({});\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log('useffect',groupers,skus)\r\n    },[skus])\r\n\r\n    const getSkus = (filterData) => {\r\n        let newSkus;\r\n        if(filterData){\r\n            newSkus = skus.filter(item=>(item.subcategory.id===filterData.id));\r\n        }\r\n        else{\r\n            newSkus = skus;\r\n        }\r\n        //console.log(newSkus)\r\n        return (\r\n            newSkus.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={3}>\r\n                        <div style={{display:'flex', alignItems:'center'}}>\r\n                            <span style={{marginRight:'1em'}}>\r\n                                {\r\n                                data.img?\r\n                                        <Avatar\r\n                                            alt=\"\"\r\n                                            src={data.img}\r\n                                            sx={{ width: 50, height: 50 }}\r\n                                        />\r\n                                :\r\n                                    <Avatar\r\n                                        sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                                    >\r\n                                        {data.name.toUpperCase().charAt(0)}\r\n                                    </Avatar>\r\n                                }\r\n                            </span>\r\n                            <Typography align='left'>\r\n                                {data.name}\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.content} {data.unit} / {data.presentation}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {\r\n                            data.grouper?\r\n                                <div className={classes.colorContainer}>\r\n                                    <div className={classes.colorSquare} style={{backgroundColor:data.grouper.color}}/>\r\n                                    <Typography variant=\"subtitle1\" align=\"left\">{data.grouper.name}</Typography>\r\n                                </div>\r\n                            :\r\n                            <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.subcategory.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta categoria?'\r\n                                onOk={()=>{handleRemoveSku(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setEditSku({...data, index})\r\n                                setOpenEditSku(!openEditSku);\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputSku = (e) => {\r\n        const {name, value} = e.target;\r\n        ////console.log(value)\r\n        setSku({...sku, [name]:value});\r\n    }\r\n\r\n    const handleSaveSku = () => {\r\n        ////console.log(sku)\r\n        let cpy = JSON.stringify(sku);\r\n        if(pushSku){\r\n            pushSku(JSON.parse(cpy));\r\n        }   \r\n        setSku({...initialValue})\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        if(removeSku)\r\n            removeSku(index);\r\n    }\r\n\r\n    const handleFilter = (e) => {\r\n        setFilter({...filter, subcategory:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align='left'\r\n                    >\r\n                        Añade o elimina tus SKUS\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align='left'\r\n                        display='block'\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Contenido</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marcas</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Subcategorias</InputLabel>\r\n                        <Select\r\n                            //value={age}\r\n                            name={'subcategory'}\r\n                            label=\"Subcategoria\"\r\n                            value={filter.subcategory}\r\n                            onChange={handleFilter}\r\n                        >\r\n                            <MenuItem value={null}>Subcategorias</MenuItem>\r\n                            {\r\n                                subcategories.map((data, index)=>\r\n                                    <MenuItem value={JSON.stringify(data)} key={index}>{data.name}</MenuItem>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getSkus(JSON.parse(filter.subcategory)) }\r\n                <Grid item xs={3}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Nombre\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='name'\r\n                        onChange={handleInputSku}\r\n                        value={sku.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{display:'flex', flexDirection:'column'}}>\r\n                        <TextField \r\n                            id=\"\" \r\n                            label=\"Contenido\" \r\n                            variant=\"outlined\" \r\n                            fullWidth\r\n                            multiline\r\n                            name='content'\r\n                            //rows={2}\r\n                            onChange={(e)=>{handleInputSku({target:{name:e.target.name, value:e.target.value.replace(/[^0-9]/g, '')}})}}\r\n                            value={sku.content}\r\n                            required\r\n                        />\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                <Select\r\n                                    //value={age}\r\n                                    name={'unit'}\r\n                                    label=\"Unidad *\"\r\n                                    value={sku.unit}\r\n                                    onChange={handleInputSku}\r\n                                >\r\n                                    <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                    <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                    <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={handleInputSku}\r\n                                value={sku.presentation}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div style={{marginTop:'.5em', display:'block'}}>\r\n                            <UploadImage\r\n                                title={'Subir imagen'}\r\n                                variant=\"outlined\"\r\n                                onChange={handleInputSku}\r\n                                name='img'\r\n                                value={sku.img}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div style={{display:'flex'}}>\r\n                        <RadioGropupGroupers\r\n                            name = 'grouper'\r\n                            items = {[...groupers]}\r\n                            onChange={handleInputSku}\r\n                            value={sku.grouper}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} align='left'>\r\n                    <RadioGroup\r\n                        name = 'subcategory'\r\n                        items = {[...subcategories]}\r\n                        onChange={handleInputSku}\r\n                        value={sku.subcategory}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveSku}\r\n                            disabled={sku.name==='' || sku.content==='' || sku.grouper===null || sku.subcategory===null || sku.unit===null || sku.presentation===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={openEditSku}\r\n                onClose={()=>{setOpenEditSku(!openEditSku)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar Sku\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Nombre\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, name:e.target.value})\r\n                                }}\r\n                                value={editSku.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <div style={{display:'flex', flexDirection:'column'}}>\r\n                                <TextField \r\n                                    id=\"\" \r\n                                    label=\"Contenido\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    multiline\r\n                                    name='content'\r\n                                    //rows={2}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value.replace(/[^0-9]/g, '')})\r\n                                    }}\r\n                                    value={editSku.content}\r\n                                    required\r\n                                />\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                        <Select\r\n                                            //value={age}\r\n                                            name={'unit'}\r\n                                            label=\"Unidad *\"\r\n                                            value={editSku.unit}\r\n                                            onChange={(e)=>{\r\n                                                setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                            <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                            <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <TextField \r\n                                        id=\"\"\r\n                                        label=\"Presentación\" \r\n                                        variant=\"outlined\" \r\n                                        fullWidth\r\n                                        multiline\r\n                                        name='presentation'\r\n                                        //rows={2}\r\n                                        onChange={(e)=>{\r\n                                            setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                        }}\r\n                                        value={editSku.presentation}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div style={{marginTop:'.5em', display:'block'}}>\r\n                                    <UploadImage\r\n                                        title={'Subir imagen'}\r\n                                        variant=\"outlined\"\r\n                                        name='img'\r\n                                        onChange={(e)=>{\r\n                                            setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                        }}\r\n                                        value={editSku.img}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <div style={{display:'flex'}}>\r\n                                <RadioGropupGroupers\r\n                                    name = 'grouper'\r\n                                    items = {[...groupers]}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                    }}\r\n                                    value={editSku.grouper}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <RadioGroup\r\n                                name = 'subcategory'\r\n                                items = {[...subcategories]}\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                }}\r\n                                value={editSku.subcategory}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = skus.slice();\r\n                                        aux[editSku.index] = editSku;\r\n                                        if(updateSkus){\r\n                                            //console.log(editGrouper)\r\n                                            updateSkus(aux, editSku.index);\r\n                                        }\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                    disabled={editSku.name==='' || editSku.content==='' || editSku.grouper===null || editSku.subcategory===null || editSku.unit===null || editSku.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    dragabbleNode: {\r\n        width: '.75em',\r\n        height: '.75em',\r\n        cursor: 'move',\r\n        backgroundColor: props=>props.color,\r\n        borderRadius: '50%',\r\n        border: '2px solid #E6EBF1',//verde principal\r\n        TransitionEvent: 'all 1.5s ease',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        left: '-.5em',\r\n        \"&:hover\": {\r\n            boxShadow: '0px 0px 10px 0px rgba(43,153,130,1)',\r\n            backgroundColor: '#2B9982',\r\n        }\r\n    },\r\n}));\r\n\r\nconst Draggable2 = ({data, position=null, fixed=false, onStop, color='#fff'}) => {\r\n\r\n    const classes = useStyles({color: color});\r\n    const nodeRef = React.useRef(null);\r\n    const [conf, setConf] = React.useState({\r\n        position:{\r\n            x:0,\r\n            y:0,\r\n        }, \r\n        fixed: false\r\n    })\r\n\r\n    React.useEffect(()=>{\r\n        if(position)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: position.x,\r\n                    y: position.y\r\n                },\r\n                fixed: true\r\n            })\r\n    },[position])\r\n\r\n    const eventLogger = (e) => {\r\n        ////console.log('Data: ', e);\r\n    };\r\n\r\n    const getTranslateValues = (translate) => {\r\n        let result = translate.split('translate(')[1].split(')')[0].split(', ');\r\n        try {\r\n            return {x: parseInt(result[0].split('px')[0]), y :parseInt(result[1].split('px')[0])};\r\n        } catch (error) {\r\n            console.error(result)\r\n            console.error(error)\r\n            return {x:0, y:0}\r\n        }\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        ////console.log(getTranslateValues(nodeRef.current.style.transform));\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                ...getTranslateValues(nodeRef.current.style.transform)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStart = (e) => {\r\n        /*//console.log( e)\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                x: 0,\r\n                y: 10\r\n            }\r\n        })*/\r\n    }\r\n    \r\n    const handleEnd = (e) => {\r\n        /*//console.log( e)*/\r\n        if(onStop){\r\n            onStop(data)\r\n        }\r\n        if(!fixed)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            //axis=\"x\"\r\n            handle=\".handle\"\r\n            defaultPosition={{x: 0, y: 0}}\r\n            position={conf.position}\r\n            //grid={[25, 25]}\r\n            scale={1}\r\n            onStart={eventLogger}\r\n            onDrag={handleDrag}\r\n            onStop={handleEnd}\r\n        >\r\n            <div className={classes.dragabbleNode} id={'end-'+data.id} ref={nodeRef}>\r\n                <div className=\"handle\">\r\n                    <span style={{visibility: 'hidden', width: 0, height: 0}}>.</span>\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n    );\r\n  \r\n}\r\n\r\nexport default Draggable2;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Draggable from '../Draggable';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    startNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        transition: 'all .5s',\r\n        backgroundColor: '#fff',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        display:'flex', \r\n        alignItems:'center'\r\n        //backgroundColor: '#fff'\r\n    },\r\n    startNodeContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginBottom: '.5em',\r\n        transition: 'all .5s'\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0'\r\n    },    \r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    },\r\n    startPoint: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '25%'\r\n    }\r\n}));\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    React.useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst StartBox = ({id, data, onStop}) => {\r\n\r\n    const wrapperRef = React.useRef(null);\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [focus, setFocus] = React.useState(false);\r\n\r\n    const hanldeFocus = () => {\r\n        setFocus(true);\r\n    }\r\n\r\n    const handleFocusOut = () => {\r\n        setFocus(false);\r\n    }\r\n\r\n    useOutsideAlerter(wrapperRef, handleFocusOut);\r\n//console.log(data)\r\n    return (\r\n        <div className={classes.startNodeContainer} ref={wrapperRef}>\r\n            <div \r\n                className={classes.startNode} \r\n                 \r\n                onClick={hanldeFocus}\r\n                style={{borderWidth: focus?'2px':'1px'}}\r\n            >\r\n                <div id={'startBox-'+id} className={classes.startPoint}/>\r\n                <div id={'start-'+id} className={classes.startPoint}/>\r\n                <div className={classes.borderColor}/>\r\n                               \r\n                <span style={{marginRight:'1em'}}>\r\n                    {\r\n                    data.img?\r\n                            <Avatar\r\n                                alt=\"\"\r\n                                src={data.img}\r\n                                sx={{ width: 50, height: 50 }}\r\n                            />\r\n                    :\r\n                        <Avatar\r\n                            sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                        >\r\n                            {data.name.toUpperCase().charAt(0)}\r\n                        </Avatar>\r\n                    }\r\n                </span>\r\n\r\n                <div className={classes.dataContainer}>\r\n                    <div className={classes.title}>\r\n                        {data.name}\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Draggable \r\n                data={data} \r\n                onStop={onStop}\r\n                color={data.grouper.color}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartBox;","import React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNodePoint: {\r\n        position: 'absolute',\r\n        width: '.75em',\r\n        height: '.75em',\r\n        border: '2px solid #E6EBF1',\r\n        backgroundColor: '#aaa',\r\n        borderRadius: '50%',\r\n        left: '-.75em',\r\n        top: 'calc(50% - .25em)',\r\n        zIndex: '1',\r\n        \"&:hover\": {\r\n            backgroundColor: '#C72C1C',\r\n            borderColor: '#C72C1C'\r\n        }\r\n    },\r\n    nodeContainer: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - .15em)',\r\n        left: '.25em',\r\n    }\r\n}));\r\n\r\nconst DeleteNode = ({ onMouseEnter, onMouseLeave, related, relations, onEnterItem, onLeaveItem, onDelete, color='#fff' }) => {\r\n\r\n    const classes = useStyles({color: color});\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = (data) => {\r\n        if(onDelete)\r\n            onDelete(data)\r\n        handleClose();\r\n    }\r\n\r\n    ////console.log('relations',relations)\r\n    return (\r\n        <div className={classes.nodeContainer}>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <div \r\n                    className={classes.endNodePoint} \r\n                    style={{display:related?'block':'none'}} \r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    onClick={handleClick}\r\n                />\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {\r\n                    relations.map((data, index)=>{\r\n                        ////console.log(data)\r\n                        return (\r\n                            <MenuItem \r\n                                key={index} \r\n                                onClick={()=>handleDelete(data)}\r\n                            >\r\n                                <spam\r\n                                    onMouseEnter={()=>{\r\n                                        onEnterItem(data)\r\n                                    }}\r\n                                    onMouseLeave={()=>{\r\n                                        onLeaveItem(data)\r\n                                    }}\r\n                                >\r\n                                    {data.from.name}\r\n                                </spam>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteNode;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport DeleteNode from './DeleteNode';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        marginBottom: '.5em',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        display:'flex', \r\n        alignItems:'center',\r\n        //backgroundColor: '#F0F0F0',\r\n        \"&:hover\": {\r\n            borderWidth: '2px'\r\n        },\r\n    },\r\n    magnet: {\r\n        position: 'absolute',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: '10em',\r\n        right: '0',\r\n        top: '0',\r\n        zIndex: '1',\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '0'\r\n    },\r\n    grouperCircle: {\r\n        width: '1em',\r\n        height: '1em',\r\n        backgroundColor: props => props.color,\r\n        borderRadius: '50%',\r\n        marginRight: '.5em',\r\n    },\r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    }\r\n}));\r\n\r\nconst EndBox = ({data, id, onEnter, onExit, related=false, onEnterDelete, onExitDelete, relations=[], onEnterItem, onLeaveItem, onDelete}) => {\r\n\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    const handleEnter = () => {\r\n        setHover(true);\r\n        if(onEnter)\r\n            onEnter(data);\r\n    }\r\n\r\n    const handleExit = () => {\r\n        setHover(false);\r\n        if(onExit)\r\n            onExit(data);\r\n    }\r\n\r\n    const handleEnterDelete = () => {\r\n        if(onEnterDelete)\r\n            onEnterDelete(data);\r\n    }\r\n\r\n    const handleExitDelete = () => {\r\n        if(onExitDelete)\r\n            onExitDelete(data);\r\n    }\r\n\r\n    return (\r\n        <div id={'endBox-'+id}>\r\n            <DeleteNode \r\n                related={related}\r\n                onMouseEnter={handleEnterDelete}\r\n                onMouseLeave={handleExitDelete}\r\n                relations={relations}\r\n                onEnterItem={onEnterItem}\r\n                onLeaveItem={onLeaveItem}\r\n                onDelete={(data)=>onDelete(data)}\r\n                className={classes.container}\r\n                color={data.grouper.color}\r\n            />\r\n            <div \r\n                className={classes.endNode}\r\n                style={{backgroundColor: hover?'rgba(0,0,0,.05)':'#fff', borderWidth: hover?'2px':'1px'}}\r\n            >\r\n                \r\n            <div \r\n                className={classes.magnet} \r\n                onMouseEnter={handleEnter}\r\n                onMouseLeave={handleExit}\r\n            />\r\n                <div className={classes.borderColor}/>\r\n                               \r\n                <span style={{marginRight:'1em'}}>\r\n                    {\r\n                    data.img?\r\n                            <Avatar\r\n                                alt=\"\"\r\n                                src={data.img}\r\n                                sx={{ width: 50, height: 50 }}\r\n                            />\r\n                    :\r\n                        <Avatar\r\n                            sx={{ width: 50, height: 50, bgcolor: data.grouper.color }}\r\n                        >\r\n                            {data.name.toUpperCase().charAt(0)}\r\n                        </Avatar>\r\n                    }\r\n                </span>\r\n                <div className={classes.dataContainer}>\r\n                    <div className={classes.title}>\r\n                        {data.name}\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndBox;","import React from 'react';\r\nimport { useScreenshot } from \"use-react-screenshot\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nimport Alert from '../Alert';\r\n\r\n/*import copy from './copy.svg';\r\nimport save from './save.svg';*/\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    circularButon: {\r\n        margin: '.5em',\r\n        marginRight: '0',\r\n        padding: '1em',\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '50%',\r\n        //border: '1px solid #000',\r\n        transition: 'all .25s',\r\n        backgroundColor: 'transparent',\r\n        cursor: 'pointer',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ecf0f1',\r\n            borderColor: '#95a5a6'\r\n        }\r\n    },\r\n    alert: {\r\n        position:'fixed',\r\n        bottom: '1em',\r\n        right: '1em',\r\n    },\r\n    container: {\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n    },\r\n    capture: {\r\n        position: 'absolute',\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        left: 0,\r\n        top: 0, \r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: '100'\r\n    }\r\n}));\r\n\r\nconst ScreenShot = ({children, onCapture}) => {\r\n    const classes = useStyles();\r\n\r\n    const ref = React.createRef(null);\r\n    const [image, takeScreenShot] = useScreenshot();\r\n    const [loaded, setLoaded] = React.useState(true);\r\n    //const [alert, setAlert] = React.useState(false);\r\n    //const [shutter, setShutter] = React.useState(false);\r\n    const getImage = () => {\r\n        ////console.log(ref2.current.getContext('2d'))\r\n        takeScreenShot(ref.current);\r\n        //setAlert(true);\r\n        //setShutter(true);\r\n        // if(onCapture)\r\n        //     onCapture(image);\r\n        // setTimeout(()=>{\r\n        //     setAlert(false);\r\n        // },3000)\r\n        // setTimeout(()=>{\r\n        //     setShutter(false);\r\n        // }, 100)\r\n    };\r\n\r\n    function downloadBase64File( base64Data, fileName) {\r\n        const linkSource = `${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        takeScreenShot(ref.current);\r\n        setLoaded(true);\r\n        //downloadBase64File(, image, 'ScreenShot');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className={classes.container}>\r\n                {/*<div className={classes.capture} style={{display: shutter?'block':'none'}}></div>\r\n                <canvas ref={ref2} style={{width: '100%', height: '100vh', background: 'red', position: 'absolute'}}></canvas>*/}\r\n                {children}\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                {/*<img src={image} alt='' style={{width: '100%'}}/>\r\n                <div className={classes.circularButon}>\r\n                    <img src={copy} style={{width:'100%'}} alt='copy' />\r\n                </div>\r\n                <div onClick={()=>{}} className={classes.circularButon}>\r\n                    <img src={save} style={{width:'100%'}} alt='save' />\r\n                </div>\r\n                */}\r\n                <Fab size=\"small\" onClick={getImage} color=\"primary\" aria-label=\"clean\">\r\n                    <ContentCopyIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\">\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" onClick={handleDownload} color=\"primary\" aria-label=\"clean\">\r\n                    <DownloadIcon />\r\n                </Fab>\r\n                {/*<div className={classes.alert}>\r\n                    <Alert\r\n                        type={'success'}\r\n                        open={alert}\r\n                        text='Copiado'\r\n                    />\r\n                </div>*/}\r\n                {\r\n                    loaded &&\r\n                    <img \r\n                        src={image} \r\n                        alt='' \r\n                        onLoad={()=>{\r\n                            ////console.log(image)\r\n                            downloadBase64File(image,'screenshot.png');\r\n                            setLoaded(false);\r\n                            if(onCapture)\r\n                                onCapture(image);\r\n                        }} \r\n                        style={{width: '0em', height: '0em'}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenShot;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport StartBox from './StartBox';\r\nimport EndBox from './EndBox';\r\nimport ReactBezier from \"react-bezier\";\r\nimport ScreenShot from '../ScreenShot';\r\n\r\n//import ContextMenu from '../ContextMenu';\r\nimport Fab from '@mui/material/Fab';\r\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    col: {\r\n        width: '30%',\r\n        /*padding: '1em',\r\n        width: '30%',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n        transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '4px',\r\n        margin: '.25em',*/\r\n        //overflow: 'hidden',\r\n    },\r\n    startNode: {\r\n        border: '1px solid #2B9982',\r\n        borderRadius: '.5em',\r\n        padding: '.5em 1.5em'\r\n    },\r\n    title: {\r\n        backgroundColor: '#2B9982',\r\n        top: '-1em',\r\n        left: '-1em',\r\n        position: 'relative',\r\n        width: 'calc( 100% + 1.5em)',\r\n        padding: '.25em',\r\n        color: '#fff',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n\r\n    '@global': {\r\n        \r\n    }\r\n\r\n});\r\n\r\nconst RelatableBoxes = ({dataFrom, dataTo, onUpdate, relations=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [draggablesNodes, setDraggablesNodes] = React.useState([]);\r\n    const [settings, setSettings] = React.useState([]);\r\n    const [enter, setEnter] = React.useState({data:null, flag:false});\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(()=>{\r\n        let newArray = [];\r\n        for(let i=0;i<relations.length;i++){\r\n            let newData = {\r\n                from: \"startBox-\"+relations[i].from.id,\r\n                to: \"endBox-\"+relations[i].to.id,\r\n                toData: relations[i].to,\r\n                fromData: relations[i].from,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            newArray.push(newData);\r\n        }\r\n        //console.log([...settings, ...newArray])\r\n        setDraggablesNodes([...newArray]);\r\n        setSettings([...settings, ...newArray]);\r\n        //console.log([...settings, ...newArray],relations);\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(dataFrom,dataTo)\r\n        ////console.log(groupers)\r\n        ////console.log(classes)\r\n        let newSettings = [];\r\n        //let newDraggablesNodes = [];\r\n        \r\n        for(let i=0;i<dataFrom.length;i++){\r\n            newSettings.push(\r\n                {\r\n                    from: \"start-\"+dataFrom[i].id,\r\n                    to: \"end-\"+dataFrom[i].id,\r\n                    toData: dataFrom[i],\r\n                    fromData: dataFrom[i],\r\n                    positions: {\r\n                        start: {\r\n                            side: \"right\",\r\n                            indent: 20\r\n                        },\r\n                        end: {\r\n                            side: \"left\",\r\n                        },\r\n                    },\r\n                    style: `relationship-line-selected`,\r\n              }\r\n            )\r\n        }\r\n        //console.log(newSettings)\r\n        // if(settings.length===0){\r\n        //     for(let i=0;i<relations.length;i++){\r\n        //         let newData = {\r\n        //             from: \"startBox-\"+relations[i].from.id,\r\n        //             to: \"endBox-\"+relations[i].to.id,\r\n        //             toData: relations[i].to,\r\n        //             fromData: relations[i].from,\r\n        //             positions: {\r\n        //                 start: {\r\n        //                     side: \"right\",\r\n        //                     indent: 20\r\n        //                 },\r\n        //                 end: {\r\n        //                     side: \"left\",\r\n        //                 },\r\n        //             },\r\n        //             style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n        //         }\r\n        //         newSettings.push(newData);\r\n        //     }\r\n        // }\r\n        //console.log(settings)\r\n        setSettings([...newSettings, ...draggablesNodes]);\r\n        if(settings.length!==0){\r\n            //console.log('updating')\r\n            handleUpdate([...newSettings, ...draggablesNodes]);\r\n        }\r\n        //console.log([...newSettings, ...draggablesNodes])\r\n        //console.log([...newSettings, ...draggablesNodes], relations, 'draggableNodes')\r\n    },[draggablesNodes]);\r\n\r\n    const handleUpdate = (data) => {\r\n        let aux = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].style!=='relationship-line-selected'){\r\n                aux.push({from:data[i].fromData, to:data[i].toData})\r\n            }\r\n        }\r\n        //console.log(aux)\r\n        if(onUpdate)\r\n            onUpdate(aux);\r\n    }\r\n\r\n    const handleEnter = (data) => {\r\n        setEnter({data, flag: true});\r\n    }\r\n\r\n    const handleExit = (data) => {\r\n        setEnter({data:null, flag:false});\r\n    }\r\n\r\n    const handleStop = (data) => {\r\n        ////console.log(data, enter)\r\n        let aux = draggablesNodes.slice();\r\n        let newData;\r\n        \r\n        // for(let i=0;i<aux.length;i++){\r\n        //     try {\r\n        //         if(aux[i].toData.id===enter.data.id && aux[i].fromData.id)\r\n        //             //console.log('from')\r\n        //     } catch (error) {\r\n        //     }\r\n        // }\r\n        \r\n        if(enter.flag){\r\n            newData = {\r\n                from: \"startBox-\"+data.id,\r\n                to: \"endBox-\"+enter.data.id,\r\n                toData: enter.data,\r\n                fromData: data,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${data.grouper.name}-${data.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            aux.push(newData);\r\n            ////console.log('newData')\r\n            setDraggablesNodes(aux);\r\n        }\r\n    }\r\n\r\n    const isRelated = (id) => {\r\n        //console.log(id)\r\n        for(let i=0;i<draggablesNodes.length;i++){\r\n            if(`${draggablesNodes[i].toData.id}`===`${id}`)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const changeLineColor = (data, newClass) => {\r\n        ////console.log(id)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].toData.id===data.id)\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                };\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const changeLineColorFrom = (from, to, newClass) => {\r\n        ////console.log('from',from)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            // if(newSettings[i].style!=='relationship-line-selected'){\r\n            //     newSettings[i] = {\r\n            //         ...newSettings[i],\r\n            //         style: defaultStyleClass,\r\n            //     };\r\n            //     //continue;\r\n            // }\r\n            if(newSettings[i].fromData.id===from.id && newSettings[i].toData.id===to.id){\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                }; \r\n                //continue;\r\n            }\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const getRelations = (id) => {\r\n        let data = settings.slice();\r\n        let newData = [];\r\n        let response = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].toData.id===id && (data[i].style!=='relationship-line-selected'))\r\n                newData.push({from:data[i].fromData, to:data[i].toData});\r\n        }\r\n        \r\n        for(let i=0;i<newData.length;i++){\r\n            let flag = false;\r\n            for(let j=0;j<response.length;j++){\r\n                if(newData[i].from.id===response[j].from.id){\r\n                    flag = true;\r\n                }\r\n            }\r\n            if(!flag){\r\n                response.push(newData[i]);\r\n            }\r\n        }\r\n        ////console.log('data', data, id, newData)\r\n        return response;\r\n    }\r\n\r\n    const hanldeDelete = (data) => {\r\n        ////console.log(data)\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(!(newSettings[i].fromData.id===data.from.id && newSettings[i].toData.id===data.to.id)){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n\r\n        let aux2 = [];\r\n        let newDraggables = draggablesNodes.slice();\r\n        for(let i=0;i<newDraggables.length;i++){\r\n            ////console.log(newDraggables);\r\n            if(!(newDraggables[i].fromData.id===data.from.id && newDraggables[i].toData.id===data.to.id)){\r\n                aux2.push(newDraggables[i])\r\n            }\r\n        }\r\n        \r\n\r\n        setDraggablesNodes([...aux2]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    const cleanNodes = () => {\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].style==='relationship-line'){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n        \r\n        setDraggablesNodes([]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ScreenShot>\r\n                <div ref={ref}>\r\n                    {/*<ContextMenu\r\n                        ref={ref}\r\n                    />*/}\r\n                    {\r\n                       ////console.log(groupers,'groupers')\r\n                    }\r\n                    <ReactBezier settings={settings}>\r\n                        {/*<CustonCursor/>*/}\r\n                        <div className={classes.container}>\r\n                            <div className={classes.col} style={{marginRight:'30%'}}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                </div>*/}\r\n                                {\r\n                                    dataFrom.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <StartBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onStop={handleStop}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={classes.col}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                            </div>*/}\r\n                                {\r\n                                    dataTo.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index} style={{position: 'relative'}}>\r\n                                                <EndBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onEnter={handleEnter}\r\n                                                    onExit={handleExit}\r\n                                                    related={isRelated(data.id)}\r\n\r\n                                                    onEnterDelete={()=>{/*changeLineColor(data, 'relationship-line-delete')*/}}\r\n                                                    onExitDelete={()=>{/*changeLineColor(data, 'relationship-line')*/}}//cambia el color a lines que llegan a un nodo final\r\n\r\n                                                    relations={getRelations(data.id)}\r\n\r\n                                                    onEnterItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line-delete')}\r\n                                                    onLeaveItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line '+`stroke-color-${data.from.grouper.name}-${data.from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"))}//cambia el color de la linea\r\n\r\n                                                    onDelete={(data)=>hanldeDelete(data)}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </ReactBezier>\r\n                </div>\r\n            </ScreenShot>\r\n            <div style={{display: 'flex'}}>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={cleanNodes}>\r\n                    <CleaningServicesIcon/>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RelatableBoxes;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function BasicTabs({tabs=[], children, onChange}) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if(onChange)\r\n        onChange(newValue)\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n          {\r\n              tabs.map((data, index)=>\r\n                <Tab key={index} label={data.name} {...a11yProps(index)} />\r\n              )\r\n          }\r\n        </Tabs>\r\n      </Box>\r\n      {\r\n          tabs.map((data, index)=>\r\n            <TabPanel key={index} value={value} index={index}>\r\n                {children}\r\n            </TabPanel>\r\n          )\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Card from '@mui/material/Card';\r\n//import CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../Components/ConfirmDialog';\r\nimport FullScreenDialog from '../../Components/FullScreenDialog';\r\n\r\nimport Groupers from './Groupers';\r\nimport Skus from './Skus';\r\n\r\n//temporal\r\nimport RelatableBoxes from '../../Components/RelatableBoxes';\r\nimport styled from 'styled-components';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport ColorPicker from '../../Components/ColorPicker';\r\nimport Tabs from '../../Components/Tabs';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst getid = () => {\r\n    return `${(Math.random() * (1000 - 1) + 1)}`.split('.').join(\"\");\r\n}\r\n\r\nconst initialValues = {\r\n    category: {\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n        id:getid()\r\n    },\r\n    subcategories: [],\r\n    groupers: [],\r\n    skus:[],\r\n    relations:[],\r\n}\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title:'SKU '+ {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        //marginTop: theme.spacing(1),\r\n        //marginRight: theme.spacing(1), \r\n    },\r\n    actionsContainer: {\r\n        //marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        //padding: theme.spacing(3),\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n    return ['Carga tus categorias y subcategorias', 'Carga tus marcas y SKU', 'Relaciona tus SKUs con los de la competencia'];\r\n}\r\n\r\nconst NewData = ({onUpdate, onFinish}) => {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const [state, setState] = React.useState({\r\n        ...initialValues\r\n    });\r\n\r\n    const [subStep, setSubStep] = React.useState({\r\n        step: 0\r\n    })\r\n\r\n    const [category, setCategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n    });\r\n    \r\n    const [subcategory, setSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n        color:randomColor()\r\n    });\r\n\r\n    const [editSubcategory, setEditSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n    });\r\n\r\n    const [openEditSubcategory, setOpenEditSubcategory] = React.useState(false);\r\n\r\n    const [tab, setTab] = React.useState(0);\r\n    \r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleInputChangeCategory = (e) => {\r\n        const {name, value} = e.target;\r\n        setState({...state, category: {...state.category, [name]:value}});\r\n    }\r\n\r\n    const pushCategory = () => {\r\n        let data = category;\r\n        setState({\r\n            ...state,\r\n            categories:[...state.categories, {...data, id:state.categories.length}],\r\n        });\r\n        setCategory({name:'',description:''});\r\n    }\r\n\r\n    const handleInputChangeSubcategories = (e) => {\r\n        const {name, value} = e.target;\r\n        setSubcategory({...subcategory, [name]:value});\r\n    }\r\n\r\n    const pushSubcategory = () => {\r\n        let data = subcategory;\r\n        setState({\r\n            ...state,\r\n            subcategories:[...state.subcategories, {...data, id:getid(), category: state.category}],\r\n        });\r\n        setSubcategory({name:'',description:'', category:'', color:randomColor()});\r\n    }\r\n\r\n    const handleRemoveSubcategory = (index) => {\r\n        let subcategories = state.subcategories.slice();\r\n        subcategories.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            subcategories:[...subcategories],\r\n        });\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        let groupers = state.groupers.slice();\r\n        groupers.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            groupers:[...groupers],\r\n        });\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        let skus = state.skus.slice();\r\n        skus.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            skus:[...skus],\r\n        });\r\n    }\r\n\r\n    const getSubcategories = () => {\r\n        return (\r\n            state.subcategories.map((data, index) => \r\n                <React.Fragment key={index}>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta subcategoria?'\r\n                                title='Esta seguro de eliminar esta subcategoria?'\r\n                                onOk={()=>{handleRemoveSubcategory(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditSubcategory(!openEditSubcategory);\r\n                                setEditSubcategory({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const pushGrouper = (data) => {\r\n        setState({\r\n            ...state,\r\n            groupers:[...state.groupers, {...data, id: getid()}],\r\n        });\r\n    }\r\n\r\n    const pushSku = (data) => {\r\n        setState({\r\n            ...state,\r\n            skus:[...state.skus, {...data, id:getid()}],\r\n        });\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const getClasses = () => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<state.groupers.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                ['.'+(`stroke-color-${state.groupers[i].name}-${state.groupers[i].id}`.replace(/\\s/g, '_').split('.').join(\"\"))]:{\r\n                    stroke:`${state.groupers[i].color} !important`\r\n                }\r\n            };\r\n        }\r\n        ////console.log(JSON.stringify(lineClasses))\r\n        return lineClasses;\r\n    }\r\n\r\n    const handleUpdate = (data) => {\r\n        setState({...state, relations: data})\r\n    }\r\n\r\n    const skuFilter = (index) => {\r\n        let newSkus = [];\r\n        for(let i=0;i<state.skus.length;i++){\r\n            if(state.skus[i].subcategory.id===state.subcategories[index].id)\r\n                newSkus.push(state.skus[i])\r\n            //console.log(state.skus[i].subcategory.id, state.subcategories[index].id)\r\n        }\r\n        return (newSkus);\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div>\r\n                        {   subStep.step===0?\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"primary\">\r\n                                                Categoria\r\n                                            </Typography>\r\n                                            <Typography color=\"inherit\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade los datos de la categoria\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.description}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >  \r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            disabled\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={\r\n                                                ()=>{\r\n                                                    setSubStep({step:1}); \r\n                                                    if(subStep.step===1){\r\n                                                        setActiveStep(1); \r\n                                                        setSubStep({step:0})\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            disabled={state.category.name===''}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"inherit\">\r\n                                                Categorias\r\n                                            </Typography>\r\n                                            <Typography color=\"primary\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade o elimina subcategorias para <span style={{textTransform:'capitalize'}}>{state.category.name}</span>\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                                    </Grid>\r\n                                    { getSubcategories() }\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.description}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <ColorPicker\r\n                                            onChangeComplete={handleInputChangeSubcategories}\r\n                                            name='color'\r\n                                            value={subcategory.color}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                                            {/*<DeleteIcon/>*/}\r\n                                            <Button\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={pushSubcategory}\r\n                                                disabled={subcategory.name===''}\r\n                                            >\r\n                                                Guardar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1){setActiveStep(1); setSubStep({step:0})}}}\r\n                                            disabled={state.subcategories.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                                <Modal\r\n                                    open={openEditSubcategory}\r\n                                    onClose={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                >\r\n                                    <Paper \r\n                                        className={classes.modal}\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    variant='h6'\r\n                                                    align=\"left\"\r\n                                                >\r\n                                                    Editar subcategoria\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    label=\"Nombre\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    name='name'\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, name:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.name}\r\n                                                    required\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Descripcion\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='description'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, description:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.description}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <ColorPicker\r\n                                                    onChangeComplete={(e)=>{\r\n                                                        //console.log(e)\r\n                                                        setEditSubcategory({...editSubcategory, color:e.target.value})\r\n                                                    }}\r\n                                                    name='color'\r\n                                                    value={editSubcategory.color}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Stack spacing={2} direction=\"row\">\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='secondary'\r\n                                                        onClick={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                                    >\r\n                                                        Cancelar\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='primary'\r\n                                                        onClick={()=>{\r\n                                                            let aux = state.subcategories.slice();\r\n                                                            aux[editSubcategory.index] = editSubcategory;\r\n                                                            setState({...state, subcategories: aux});\r\n                                                            setOpenEditSubcategory(!openEditSubcategory)\r\n                                                        }}\r\n                                                        disabled={editSubcategory.name===''}\r\n                                                    >\r\n                                                        Actualizar\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Modal>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                <Typography color={subStep.step===0?\"primary\":\"inherit\"}>\r\n                                    Marcas\r\n                                </Typography>\r\n                                <Typography  color={subStep.step===1?\"primary\":\"inherit\"}>\r\n                                    SKUs\r\n                                </Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                        {subStep.step===0?\r\n                            <>\r\n                                <Groupers\r\n                                    groupers={state.groupers} \r\n                                    pushGrouper={pushGrouper}\r\n                                    updateGroupers={(data)=>{\r\n                                        //console.log('upating groupers', data)\r\n                                        setState({...state, groupers:data});\r\n                                    }}\r\n                                    removeGrouper={handleRemoveGrouper}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setActiveStep(0); setSubStep({step:1})}}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.groupers.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Skus\r\n                                    groupers={state.groupers} \r\n                                    subcategories={state.subcategories}\r\n                                    //groupers={[{color:'#eeefaf', name:'primer agrupador'},{color:'#25fafa', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}]}\r\n                                    //subcategories={[{name:'primero'},{name:'2'},{name:'uno con texto largo'},{name:'uno mas'}]}\r\n                                    pushSku={pushSku}\r\n                                    skus={state.skus}\r\n                                    updateSkus={(data)=>{\r\n                                        setState({...state, skus: data})\r\n                                    }}\r\n                                    removeSku={handleRemoveSku}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.skus.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </React.Fragment>\r\n                );\r\n            case 2:\r\n            return(\r\n                <>\r\n                    <Grid container alignItems='center' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align='left'\r\n                            >\r\n                                Relaciona tus SKU con los de los competidores\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='caption'\r\n                                align='left'\r\n                                display='block'\r\n                                color='#aaa'\r\n                            >\r\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                // <RelatableBoxes\r\n                                //     dataFrom = {[...state.skus]}\r\n                                //     dataTo = {[...state.skus]}\r\n                                //     lineClasses={getClasses()}\r\n                                //     onUpdate={handleUpdate}\r\n                                //     relations={state.relations}\r\n                                // />\r\n                            }\r\n                            <Tabs\r\n                                tabs={state.subcategories}\r\n                                onChange={(index)=>{\r\n                                    //skuFilter(index);\r\n                                    setTab(index);\r\n                                }}\r\n                            >\r\n                                <RelatableBoxes\r\n                                     dataFrom = {[...skuFilter(tab)]}\r\n                                     dataTo = {[...skuFilter(tab)]}\r\n                                     lineClasses={getClasses()}\r\n                                     onUpdate={handleUpdate}\r\n                                     relations={state.relations}\r\n                                 />\r\n                            </Tabs>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{setActiveStep(1)}}\r\n                                disabled={subStep.step===0}\r\n                            >\r\n                                Volver\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setActiveStep(3)\r\n                                    onUpdate(state);\r\n                                    onFinish();\r\n                                }}\r\n                            >\r\n                                Guardar categoria\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            );\r\n            // case 3:\r\n            //     return (\r\n            //         <>\r\n            //             <Grid container alignItems='center' spacing={3}>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Typography\r\n            //                         variant='h6'\r\n            //                         align='left'\r\n            //                     >\r\n            //                         Categoria {state.category.name} creada con exito\r\n            //                     </Typography>\r\n            //                 </Grid>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Paper \r\n            //                         variant=\"outlined\"\r\n            //                         style={{padding:'1em'}}\r\n            //                     >\r\n            //                         <div>\r\n                                        \r\n            //                         <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n            //                             <Grid item xs={12}>\r\n            //                                 <Typography \r\n            //                                     variant='subtitle1'\r\n            //                                     align='left'\r\n            //                                     style={{textTransform:'capitalize'}}\r\n            //                                 >\r\n            //                                     {state.category.name}\r\n            //                                 </Typography>\r\n            //                                 <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                     {state.category.description}\r\n            //                                 </Typography>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         Marcas\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.groupers.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                                         <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>{data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         SKUs\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.skus.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left'>\r\n            //                                                         {data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                         </Grid>\r\n            //                         </div>\r\n            //                     </Paper>\r\n            //                 </Grid>\r\n            //             </Grid>\r\n            //             <div\r\n            //                 style={{\r\n            //                     marginTop: '1em'\r\n            //                 }}\r\n            //             >\r\n            //                 <Stack spacing={2} direction=\"row\">\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         onClick={()=>{}}\r\n            //                     >\r\n            //                         Agregar otra categoria\r\n            //                     </Button>\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         color='primary'\r\n            //                         onClick={()=>{\r\n            //                             if(onFinish){\r\n            //                                 onFinish();\r\n            //                             }\r\n            //                         }}\r\n            //                     >\r\n            //                         Finalizar\r\n            //                     </Button>\r\n            //                 </Stack>\r\n            //             </div>\r\n            //         </>\r\n            //     );\r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv classes={getClasses()}>\r\n            <Grid container alignItems='flex-start' spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <div className={classes.root}>\r\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                            {steps.map((label, index) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                                <StepContent>\r\n                                    <div className={classes.actionsContainer}>\r\n                                        <div>\r\n                                            {\r\n                                            // <Button\r\n                                            //     disabled={activeStep === 0}\r\n                                            //     onClick={handleBack}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     Back\r\n                                            // </Button>\r\n                                            // <Button\r\n                                            //     variant=\"contained\"\r\n                                            //     color=\"primary\"\r\n                                            //     onClick={handleNext}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                            // </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </StepContent>\r\n                            </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        {\r\n                            // activeStep === steps.length && (\r\n                            // <Paper square elevation={0} className={classes.resetContainer}>\r\n                            //     <Typography>All steps completed - you&apos;re finished</Typography>\r\n                            //     <Button onClick={handleReset} className={classes.button}>\r\n                            //         Reset\r\n                            //     </Button>\r\n                            // </Paper>\r\n                            // )\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n                            <Grid container alignItems='center' spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <LinearProgress variant=\"determinate\" value={activeStep*33.333} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div>\r\n                                        {\r\n                                            getStepContent(activeStep)\r\n                                        }\r\n                                        {\r\n                                            ////console.log(state.groupers,'groupers')\r\n                                        }\r\n                                        {\r\n                                            activeStep<3?\r\n                                                <FullScreenDialog\r\n                                                    skus={sortSkus( state.subcategories, state.skus)}\r\n                                                    categories={[state.category]}\r\n                                                    subcategories={sortSubcategories( [state.category], state.subcategories)}\r\n                                                />\r\n                                            :\r\n                                                <></>\r\n                                        }\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        {/*<CardActions>\r\n                            <Button variant='contained'>Learn More</Button>\r\n                        </CardActions>*/}\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default NewData;","import React from 'react';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Button from '@mui/material/Button';\r\nimport FullScreenDialog from '../../../Components/FullScreenDialog';\r\n\r\nconst Category = ({data}) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        console.log('test')\r\n        setOpen(!open);\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper \r\n                        variant=\"outlined\"\r\n                        style={{padding:'1em'}}\r\n                    >\r\n                        <div>\r\n                            <Grid container alignItems='center' spacing={1} alignItems=\"stretch\">\r\n                                <Grid item xs={12}>\r\n                                    <Typography \r\n                                        variant='subtitle1'\r\n                                        align='left'\r\n                                        style={{textTransform:'capitalize'}}\r\n                                    >\r\n                                        {data.category.name}\r\n                                    </Typography>\r\n                                    <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                        {data.category.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left'>\r\n                                    <FullScreenDialog\r\n                                        skus={sortSkus( data.subcategories, data.skus)}\r\n                                        categories={[data.category]}\r\n                                        subcategories={sortSubcategories( [data.category], data.subcategories)}\r\n                                        position='relative'\r\n                                    >\r\n                                        <Button variant=\"outlined\">\r\n                                            Ver grafico\r\n                                        </Button>\r\n                                    </FullScreenDialog>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left' style={{marginBottom: open ? '1.5em': '0'}}>\r\n                                    {open ? <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver menos <ExpandLess/></div> : <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver mas <ExpandMore/></div>}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Subcategorias\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.subcategories.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.description}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Marcas\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.groupers.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.maker}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                SKUs\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.skus.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography key={index} variant='body2' align='left'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.grouper.name} / {data.grouper.maker}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.content} {data.unit} / {data.presentation}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport NewData from '../NewData';\r\nimport Category from './Category';\r\n\r\nconst Categories = () => {\r\n\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [waiting, setWaiting] = React.useState(false);\r\n\r\n    return (\r\n        <>\r\n            {waiting?\r\n                <>\r\n                    {\r\n                    categories.map((state, index)=>{\r\n                        return (\r\n                        <div key={index} style={{marginBottom:'1em'}}>\r\n                            <Category\r\n                                data={state}\r\n                            />\r\n                        </div>\r\n                        );\r\n                    })\r\n                    }\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{\r\n                                    setWaiting(false);\r\n                                }}\r\n                            >\r\n                                Agregar otra categoria\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                \r\n                                }}\r\n                            >\r\n                                Finalizar\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            :\r\n                <NewData\r\n                    onUpdate={(data)=>{\r\n                        setCategories([...categories, data])\r\n                    }}\r\n                    onFinish={()=>{\r\n                        setWaiting(true);\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories;","export default __webpack_public_path__ + \"static/media/horus.a67137fc.svg\";","import React from 'react';\r\nimport useMousePosition from '../../Hooks/useMousePosition';\r\nimport { makeStyles } from '@mui/styles';\r\nimport logo from './horus.svg';\r\nimport { display } from '@mui/system';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    cursor: {\r\n        position: 'fixed',\r\n        width: '2em',\r\n        height: '2em',\r\n        //backgroundColor:'red',\r\n        zIndex: '1000000',\r\n        //cursor: 'none'\r\n        //backgroundColor: 'red',\r\n        display: 'flex',\r\n        filter: 'brightness(0)'\r\n    },\r\n}));\r\n\r\nconst CustomCursor = () => {\r\n    const classes = useStyles();\r\n    const { x, y } = useMousePosition();\r\n\r\n    return (\r\n        <div\r\n            style={{ left: `calc(${x}px + .5em)`, top: `calc(${y}px + 1.25em)` }}\r\n            className={classes.cursor}\r\n        >\r\n            <img style={{width:'100%'}} src={logo}/>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default CustomCursor;","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useMousePosition() {\r\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event) => {\r\n      const { clientX, clientY } = event;\r\n      setMousePosition({ x: clientX, y: clientY });\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n    };\r\n  }, []);\r\n\r\n  return mousePosition;\r\n}\r\n","import React from 'react';\r\nimport Categories from './Pages/Categories';\r\nimport CustomCursor from './Components/CustomCursor';\r\nimport './App.css';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2B9982',\r\n    },\r\n    secondary: {\r\n      main: '#eee'\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <ThemeProvider theme={theme}>\r\n        <CustomCursor/>\r\n        <Categories/>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}