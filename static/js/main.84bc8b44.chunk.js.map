{"version":3,"sources":["Components/ConfirmDialog/index.js","Components/CheckboxGroup/index.js","Components/HorusChart/Item/Variable/index.js","Components/HorusChart/Item/index.js","Components/HorusChart/index.js","Components/Modal/index.js","Components/FullScreenDialog/index.js","Components/ColorPicker/index.js","Pages/NewData/Groupers/index.js","Components/RadioGroup/index.js","Pages/NewData/Skus/RadioGropupGroupers/index.js","Pages/NewData/Skus/index.js","Components/RelatableBoxes/Draggable/index.js","Components/RelatableBoxes/StartBox/index.js","Components/RelatableBoxes/EndBox/DeleteNode/index.js","Components/RelatableBoxes/EndBox/index.js","Components/ScreenShot/index.js","Components/RelatableBoxes/index.js","Pages/NewData/index.js","Pages/Categories/Category/index.js","Pages/Categories/index.js","Components/CustomCursor/horus.svg","Components/CustomCursor/index.js","Hooks/useMousePosition.js","App.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","Button","onClick","children","Dialog","onClose","DialogTitle","id","title","DialogContent","DialogContentText","message","DialogActions","color","onOk","autoFocus","useStyles","makeStyles","theme","colorSquare","width","height","borderRadius","marginRight","border","flex","checkboxContainer","display","alignItems","CheckboxGroup","items","onChange","name","itemList","setItemList","classes","handleChange","index","aux","slice","checked","target","value","useEffect","map","data","FormGroup","row","onchange","className","style","backgroundColor","Fragment","FormControlLabel","control","Checkbox","label","variablesCircle","marginBottom","popup","position","bottom","left","defaultVariable","Variable","handleOpen","Card","CardContent","Grid","container","spacing","item","xs","fullWidth","onMouseEnter","onMouseLeave","padding","overflow","zIndex","groupersContainer","variablesContainer","top","right","variablesContainerBottom","borderColor","description","opacity","paddingLeft","paddingTop","fontSize","Item","variant","groupers","vars","grouper","textTransform","postition","maker","presentation","fontWeight","content","unit","getVariantContent","WrapperDiv","styled","div","box","chartRow","flexDirection","justifyContent","HorusChart","categories","subcategories","skus","settings","setSettings","newSettings","i","length","j","category","push","from","split","join","to","positions","start","side","indent","end","subcategory","getItem","type","variables","lineClasses","stroke","getClasses","transform","boxShadow","p","Modal","Paper","sx","root","appBar","input","iconButton","button","close","cursor","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","apply","filter","setFilter","handleClickOpen","Fab","size","fullScreen","TransitionComponent","edge","visible","Typography","Divider","e","Stack","primary","onclick","colorContainer","colorPicker","ColorPicker","onChangeComplete","background","state","setState","setVisible","anchorEl","setAnchorEl","callback","wrapperRef","useRef","handleChangeComplete","hex","handleVisible","currentTarget","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","Menu","disableAlpha","initialValue","formControl","minWidth","selectEmpty","modal","randomColor","Math","floor","random","toString","Step2","pushGrouper","updateGroupers","removeGrouper","setGrouper","editGrouper","setEditGrouper","openEditGrouper","setOpenEditGrouper","handleInputGrouper","handleRemoveGrouper","align","TextField","required","multiline","disabled","RadioButtonsGroup","FormControl","component","FormLabel","RadioGroup","JSON","stringify","parse","Radio","pushSku","updateSkus","removeSku","sku","setSku","openEditSku","setOpenEditSku","editSku","setEditSku","handleInputSku","handleRemoveSku","replace","marginTop","InputLabel","Select","MenuItem","cpy","dragabbleNode","TransitionEvent","Draggable2","fixed","onStop","nodeRef","x","y","conf","setConf","getTranslateValues","translate","result","parseInt","error","console","handle","defaultPosition","scale","onStart","onDrag","visibility","startNode","boxSizing","transition","startNodeContainer","detail","startPoint","StartBox","focus","setFocus","borderWidth","dataContainer","Draggable","endNodePoint","nodeContainer","DeleteNode","related","relations","onEnterItem","onLeaveItem","onDelete","Boolean","Tooltip","placement","anchorOrigin","horizontal","vertical","MenuListProps","handleDelete","endNode","magnet","grouperCircle","EndBox","onEnter","onExit","onEnterDelete","onExitDelete","hover","setHover","circularButon","margin","alert","capture","ScreenShot","onCapture","createRef","useScreenshot","image","takeScreenShot","loaded","setLoaded","src","alt","onLoad","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","downloadBase64File","paddingBottom","col","RelatableBoxes","dataFrom","dataTo","onUpdate","draggablesNodes","setDraggablesNodes","flag","enter","setEnter","newArray","newData","toData","fromData","handleUpdate","handleEnter","handleExit","handleStop","isRelated","changeLineColorFrom","newClass","getRelations","response","aux2","newDraggables","hanldeDelete","getid","initialValues","pos","actionsContainer","resetContainer","NewData","onFinish","activeStep","setActiveStep","step","subStep","setSubStep","setSubcategory","editSubcategory","setEditSubcategory","openEditSubcategory","setOpenEditSubcategory","steps","handleInputChangeCategory","handleInputChangeSubcategories","pushSubcategory","splice","getSubcategories","handleRemoveSubcategory","Stepper","orientation","Step","StepLabel","StepContent","LinearProgress","Breadcrumbs","separator","Groupers","Skus","getStepContent","base","sorted","sortSkus","sortSubcategories","Category","handleClick","log","Collapse","in","timeout","unmountOnExit","light","Categories","setCategories","waiting","setWaiting","CustomCursor","mousePosition","setMousePosition","mouseMoveHandler","clientX","clientY","useMousePosition","logo","createTheme","palette","main","secondary","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84bc8b44.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if(props.onOk){\r\n            props.onOk();\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <Button onClick={handleClickOpen}>\r\n            {props.children}\r\n        </Button>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {props.message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\" autoFocus>\r\n                    Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function CheckboxGroup({items=[], title='', onChange, name}) {\r\n    const [itemList, setItemList] = React.useState([]);\r\n    const classes = useStyles();\r\n    const handleChange = (index) => {\r\n        let aux = itemList.slice();\r\n        aux[index].checked = !aux[index].checked;\r\n        setItemList(aux);\r\n        if(onChange)\r\n            onChange({target: {name, value:aux}})\r\n    };\r\n\r\n    React.useEffect(()=>{\r\n        setItemList(items.map(data=>({ ...data, checked:false })));\r\n    },[])\r\n\r\n\r\n    return (\r\n        <FormGroup row onChange={onchange}>\r\n            {itemList.map((data, index)=>\r\n                <div key={index} className={classes.checkboxContainer}>\r\n                    {data.color?\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                        :\r\n                        <React.Fragment/>\r\n                    }\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={data.checked}\r\n                                onChange={()=>handleChange(index)}\r\n                                name={ index }\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={data.name}\r\n                    />\r\n                </div>\r\n            )}\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    variablesCircle: {\r\n        width: '1.5em',\r\n        height: '.5em',\r\n        borderRadius: '5px',\r\n        flex: '0 0 auto',\r\n        marginBottom: '.25em',\r\n        border: '1px solid #fff'\r\n    },\r\n    popup: {\r\n        position: 'absolute',\r\n        bottom: '1.5em',\r\n        left: '0',\r\n        width: '10em'\r\n    }\r\n}));\r\n\r\nconst defaultVariable = {\r\n    name: 'testing name',\r\n    //variables: [{name:'test 1', color: 'blue'}, {name: 'test 2', color: 'red'}]\r\n}\r\n\r\nconst Variable = ({color, data = defaultVariable, style, position='top'}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = (value) => {\r\n        setOpen(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{...style, position:'relative'}}>\r\n            <div className={classes.popup} style={{display: open?'flex':'none'/*, bottom: position==='top'?'-2em':'0'*/}}>\r\n                <Card style={{width: '100%'}}>\r\n                    <CardContent>\r\n                        <Grid container alignItems='center' spacing={3}>\r\n                            <Grid item xs={12} fullWidth>\r\n                                {data.name}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <div \r\n                className={classes.variablesCircle} \r\n                style={{backgroundColor:color}}\r\n                onMouseEnter={()=>handleOpen(true)}\r\n                onMouseLeave={()=>handleOpen(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Variable;","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Variable from './Variable';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    container: {\r\n        width: '15em',\r\n        //height: '5em',\r\n        position: 'relative',\r\n        marginBottom: '2em',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        overflow: 'hidden',\r\n        zIndex: 1,\r\n        //border: '1px solid #E6EBF1'\r\n    },\r\n    groupersContainer: {\r\n        display: 'flex',\r\n        position: 'absolute'\r\n    },\r\n    variablesContainer: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '-2em'\r\n    },\r\n    variablesContainerBottom: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        bottom: '-.25em',\r\n    },\r\n    borderColor: {\r\n        backgroundColor: props => props.color,\r\n        height: '110%',\r\n        width: '.5em',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    description: {\r\n        opacity: '.5',\r\n        padding: '.5em',\r\n        paddingLeft: 0,\r\n        paddingTop: '.25em',\r\n        fontSize: '.75em'\r\n    }\r\n}));\r\n\r\nconst Item = ({id, style, title='', variant='', groupers=[], vars=[], data=null}) => {\r\n\r\n    const classes = useStyles({color:data.grouper?data.grouper.color:''});\r\n\r\n    const getVariantContent = () => {\r\n        switch(variant){\r\n            case 'sku':\r\n                return (\r\n                    <>\r\n                        <div style={{postition: 'relative', width: '100%'}}>\r\n                            <div className={classes.borderColor}/>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.name}\r\n                                </div> / \r\n                                <div style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.maker}\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: 'flex'}}>\r\n                                <span style={{textTransform: 'capitalize'}}>\r\n                                    {data.grouper.presentation}\r\n                                </span> \r\n                                <span style={{fontWeight: '600'}}>\r\n                                    {data.content} {data.unit} / {data.presentation}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.variablesContainer}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'subcategory':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <>\r\n                        <div className={classes.description}>\r\n                            {data.description}\r\n                        </div>  \r\n                        <div className={classes.variablesContainerBottom}>\r\n                            {\r\n                                vars.map((data,index)=>\r\n                                    <Variable key={index} color={data.color} style={{marginRight: '.25em'}}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )\r\n            default:\r\n                return (<React.Fragment/>);     \r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div id={id} className={classes.container} style={{...style}}>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <span style={{textTransform:'uppercase'}}>\r\n                        {title}\r\n                    </span>\r\n                </Grid>\r\n                <Grid item xs={12} style={{paddingTop:'0'}}>\r\n                    {getVariantContent()}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport ReactBezier from \"react-bezier\";\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport styled from 'styled-components';\r\n\r\nimport Item from './Item';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    box: {\r\n        width: '5em',\r\n        height: '5em',\r\n        backgroundColor: 'red'\r\n    },\r\n    chartRow: {\r\n        width: '30vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around'\r\n    }\r\n}));\r\n\r\n/*\r\n    {\r\n        from: \"cube-1\",\r\n        to: \"cube-2\",\r\n        positions: {\r\n            start: {\r\n                side: \"bottom\",\r\n                indent: 20\r\n            },\r\n            end: {\r\n                side: \"top\",\r\n            },\r\n        },\r\n        style: \"red-line\",\r\n  }\r\n*/\r\n\r\nconst HorusChart = ({categories=[], subcategories=[], skus=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [settings, setSettings] = React.useState([]);\r\n\r\n    const getClasses = (data) => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<data.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                [\".subcategory-color-\"+(`${data[i].id}`.split('.').join(\"\"))]:{\r\n                    stroke:`${data[i].color}`\r\n                }\r\n            };\r\n        }\r\n        //console.log(lineClasses)\r\n        return lineClasses;\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(categories)\r\n        let newSettings = [];\r\n        for(let i=0;i<categories.length;i++){\r\n            for(let j=0;j<subcategories.length;j++){\r\n                if(`${categories[i].id}`===`${subcategories[j].category.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"category-\"+(`${categories[i].id}`.split('.').join(\"\")),\r\n                            to: \"subcategory-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[j].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        //console.log(newSettings)\r\n        ////console.log('sub',subcategories)\r\n        ////console.log('skus',skus)\r\n        for(let i=0;i<subcategories.length;i++){\r\n            for(let j=0;j<skus.length;j++){\r\n                if(`${subcategories[i].id}`===`${skus[j].subcategory.id}`){\r\n                    newSettings.push(\r\n                        {\r\n                            from: \"subcategory-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                            to: \"sku-\"+(`${skus[j].id}`.split('.').join(\"\")),\r\n                            positions: {\r\n                                start: {\r\n                                side: \"right\",\r\n                                indent: 20\r\n                                },\r\n                                end: {\r\n                                    side: \"left\",\r\n                                },\r\n                            },\r\n                            style: \"subcategory-color-\"+(`${subcategories[i].id}`.split('.').join(\"\")),\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        ////console.log(newSettings)\r\n        setSettings(newSettings);\r\n    },[categories, subcategories, skus])\r\n\r\n    const getItem = (data, type) => {\r\n        ////console.log(data.groupers)\r\n        return (\r\n            <Item \r\n                id={`${type}-${data.id}`}\r\n                //id={'cube-'+data.id}\r\n                className={classes.box}\r\n                title={data.name}\r\n                variant={type}\r\n                vars={data.variables}\r\n                groupers={data.groupers}\r\n                data={data}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv style={{padding: '5em'}} classes={getClasses(subcategories)}>\r\n            <ReactBezier settings={settings}>\r\n                <div style={{display:'flex'}}>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            categories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'category')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            subcategories.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'subcategory')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.chartRow}>\r\n                        {\r\n                            skus.map((data, index)=>\r\n                                <span key={index}>\r\n                                    {getItem(data, 'sku')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ReactBezier>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default HorusChart;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default ({children}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpen}>\r\n        Filtrar\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Paper sx={style}>\r\n          {\r\n              children\r\n          }\r\n        </Paper>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slide from '@mui/material/Slide';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport CheckboxGroup from '../CheckboxGroup';\r\n\r\nimport HorusChart from '../HorusChart';\r\n\r\nimport Fab from '@mui/material/Fab';  \r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\n\r\nimport Modal from '../Modal';\r\nimport { ConstructionOutlined } from '@mui/icons-material';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    //marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  input: {\r\n    //marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    position: props=>props.position,\r\n    bottom: props=>props.position==='fixed'?'1em':'auto',\r\n    right: props=>props.position==='fixed'?'1em':'auto',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '0em',\r\n    top: '1em',\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst datalist = [\r\n  {\r\n    title:'Marcas',\r\n    items: [\r\n      {color:'#eeefaf', name:'primer agrupador'},{color:'#e74c3c', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}\r\n    ]\r\n  }\r\n]\r\n\r\nexport default function FullScreenDialog({skus, categories, subcategories, position='fixed', children}) {\r\n  const classes = useStyles({position});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [filter, setFilter] = React.useState(\r\n    {\r\n      skus:skus,\r\n      subcategories:subcategories,\r\n      groupers:null,\r\n      apply: false,\r\n    }\r\n  );\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getSkus = () => {\r\n    if(!filter.apply)\r\n      return skus;\r\n    return filter.skus.filter(item => item.checked);\r\n  }\r\n\r\n  const getSubcategories = () => {\r\n    if(!filter.apply)\r\n      return subcategories;\r\n    return filter.subcategories.filter(item=> item.checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className={classes.button}>\r\n          {children?\r\n            <div style={{width:'max-content'}} onClick={handleClickOpen}>\r\n              {children}\r\n            </div>\r\n            :\r\n            <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={handleClickOpen}>\r\n              <OpenWithIcon />\r\n            </Fab>\r\n          }\r\n        </div>\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} className={classes.root}>\r\n            <div style={{backgroundColor: '#1F1C36', width: '200%', height: '100vh', position: 'fixed'}}/>\r\n            <div style={{backgroundColor: '#1F1C36', height: '100vh'}}>\r\n              <div className={classes.close} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                <HighlightOffIcon />\r\n              </div>\r\n              <div>\r\n\r\n                {\r\n                  // <Drawer>\r\n                  //   <div style={{padding: '1em'}}>\r\n                  //     <span>\r\n                  //       <InputBase\r\n                  //         className={classes.input}\r\n                  //         placeholder=\"Buscar\"\r\n                  //         variant=\"outlined\"\r\n                  //       />\r\n                  //       <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                  //         <SearchIcon />\r\n                  //       </IconButton>\r\n                  //       <Divider />\r\n                  //     </span>\r\n                  //     {\r\n                  //       datalist.map((data, index)=>\r\n                  //         <span key={index}>\r\n                  //           <Typography variant='subtitle1'>\r\n                  //             {data.title}\r\n                  //           </Typography>\r\n                  //           <List style={{width:'15em'}}>\r\n                  //             {data.items.map((item, i) => (\r\n                  //               <ListItem button key={i}>\r\n                  //                 {\r\n                  //                   //<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                  //                 }\r\n                  //                 <ListItemIcon style={{minWidth:'2.5em'}}>\r\n                  //                   <div style={{width:'1.5em', height:'1.5em', borderRadius:'50%', backgroundColor:item.color}}/>\r\n                  //                 </ListItemIcon>\r\n                  //                 <ListItemText primary={item.name} />\r\n                  //               </ListItem>\r\n                  //             ))}\r\n                  //           </List>\r\n                  //           <Divider />\r\n                  //         </span>\r\n                  //       )\r\n                  //     }\r\n                  //   </div>\r\n                  // </Drawer>\r\n                }\r\n                {\r\n                  <Modal\r\n                    visible={false}\r\n                  >\r\n                    <div>\r\n\r\n                      <Typography variant='h5'>\r\n                        Filtros\r\n                      </Typography>\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Subcategorias\r\n                      </Typography>\r\n                      <CheckboxGroup\r\n                        items={subcategories}\r\n                        title='some'\r\n                        name='subcategories'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, subcategories: e.target.value})\r\n                        }}\r\n                      />\r\n                      \r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Typography>\r\n                        Skus\r\n                      </Typography>\r\n                      <CheckboxGroup\r\n                        items={skus}\r\n                        title='some'\r\n                        name='skus'\r\n                        onChange={(e)=>{\r\n                          setFilter({...filter, skus: e.target.value})\r\n                        }}\r\n                      />\r\n\r\n                      <Divider style={{marginBottom:'.75em'}}/>\r\n                      <Stack spacing={2} direction=\"row\">\r\n                        <Button \r\n                          primary \r\n                          variant='contained' \r\n                          onclick={()=>{\r\n                            setFilter({...filter, apply:false})\r\n                          }}\r\n                        >\r\n                          Filtrar\r\n                        </Button>\r\n                        <Button primary variant='outlined'>\r\n                          Limpiar filtros\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                  </Modal>\r\n                }\r\n                <HorusChart\r\n                  categories={[...categories]}\r\n                  subcategories={getSubcategories()}\r\n                  skus={getSkus()}\r\n                />\r\n              </div>\r\n            </div>\r\n        </Dialog>\r\n        {/*<Divider />*/}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        width: 'inherit'\r\n    },\r\n    colorPicker: {\r\n        position: 'absolute',\r\n        width: 'max-content',\r\n        zIndex: '10'\r\n    }\r\n});\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst ColorPicker = ({ onChangeComplete, value='#ffffff', name='' }) => {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({background:'#ffffff'});\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n    useEffect(() => {\r\n        setState({background:value});\r\n    },[value])\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const handleChangeComplete = (color) => {\r\n        if(onChangeComplete)\r\n            onChangeComplete({target: { name, value: color.hex}});\r\n        setState({ background: color.hex });\r\n    };\r\n\r\n    const handleVisible = (e) => {\r\n        setVisible(!visible);\r\n        setAnchorEl(e.currentTarget)\r\n    }\r\n    useOutsideAlerter(wrapperRef, handleVisible);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.colorContainer} onClick={handleVisible}>\r\n                <div className={classes.colorSquare} style={{backgroundColor:state.background}}/>\r\n                <Typography variant=\"subtitle1\">{state.background.split('#')[1]}</Typography>\r\n            </div>\r\n            {/*visible?\r\n                <div className={classes.colorPicker} ref={wrapperRef}>\r\n                    <SketchPicker\r\n                        color={ state.background }\r\n                        onChangeComplete={ handleChangeComplete }\r\n                        onChange={handleChangeComplete}\r\n                        disableAlpha\r\n                    />\r\n                </div>\r\n                :\r\n                <React.Fragment/>*/\r\n            }\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={anchorEl}\r\n                onClose={()=>{\r\n                    setAnchorEl(null);\r\n                }}\r\n            >\r\n                <SketchPicker\r\n                    color={ state.background }\r\n                    onChangeComplete={ handleChangeComplete }\r\n                    onChange={ handleChangeComplete }\r\n                    disableAlpha\r\n                />\r\n            </Menu>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport ColorPicker from '../../../Components/ColorPicker';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    maker:'',\r\n    color:'#ffffff',\r\n    //presentation :''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        //margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst Step2 = ({ groupers=[], pushGrouper, updateGroupers, removeGrouper }) => {\r\n    const classes = useStyles();\r\n    const [grouper, setGrouper] = React.useState({\r\n        ...initialValue,\r\n        color: randomColor(),\r\n    })\r\n\r\n    const [editGrouper, setEditGrouper] = React.useState({});\r\n    const [openEditGrouper, setOpenEditGrouper] = React.useState(false);\r\n\r\n    const getGroupers = () => {\r\n        return (\r\n            groupers.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.maker}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorContainer}>\r\n                            <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                            {/*<Typography variant=\"subtitle1\" align=\"left\">{data.color.split('#')[1]}</Typography>*/}\r\n                        </div>\r\n                    </Grid>\r\n                    {/*<Grid item xs={2}>\r\n                        <Typography align=\"left\">\r\n                            {data.presentation }\r\n                        </Typography>\r\n                    </Grid>*/}\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta marca?'\r\n                                onOk={()=>{handleRemoveGrouper(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor: 'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditGrouper(!openEditGrouper);\r\n                                setEditGrouper({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputGrouper = (e) => {\r\n        const {name, value} = e.target;\r\n        setGrouper({...grouper, [name]:value});\r\n    }\r\n\r\n    const handleSaveGrouper = () => {\r\n        if(pushGrouper){\r\n            pushGrouper(grouper);\r\n        }   \r\n        setGrouper({...initialValue, color: randomColor()})\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        if(removeGrouper)\r\n            removeGrouper(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align=\"left\"\r\n                    >\r\n                        Añade o elimina tus marcas\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align=\"left\"\r\n                        display=\"block\"\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marca</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Fabricante</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                </Grid>\r\n                {/*<Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Presentación</Typography>\r\n                </Grid>*/}\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getGroupers() }\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Marca\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        name='name'\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Fabricante\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='maker'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.maker}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ColorPicker \r\n                        onChangeComplete={handleInputGrouper}\r\n                        name='color'\r\n                        value={grouper.color}\r\n                    />\r\n                </Grid>\r\n                {/*<Grid item xs={2}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Presentación\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='presentation'\r\n                        //rows={2}\r\n                        onChange={handleInputGrouper}\r\n                        value={grouper.presentation}\r\n                        required\r\n                    />\r\n                </Grid>*/}\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveGrouper}\r\n                            disabled={grouper.name==='' || grouper.maker===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Modal\r\n                open={openEditGrouper}\r\n                onClose={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar marca\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Marca\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, name:e.target.value})\r\n                                }}\r\n                                value={editGrouper.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Fabricante\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='maker'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, maker:e.target.value})\r\n                                }}\r\n                                value={editGrouper.maker}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <ColorPicker \r\n                                onChangeComplete={(e)=>{\r\n                                    //console.log(e)\r\n                                    setEditGrouper({...editGrouper, color:e.target.value})\r\n                                }}\r\n                                name='color'\r\n                                value={editGrouper.color}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={(e)=>{\r\n                                    setEditGrouper({...editGrouper, presentation:e.target.value})\r\n                                }}\r\n                                value={editGrouper.presentation}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{setOpenEditGrouper(!openEditGrouper)}}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = groupers.slice();\r\n                                        aux[editGrouper.index] = editGrouper;\r\n                                        if(updateGroupers){\r\n                                            //console.log(editGrouper)\r\n                                            updateGroupers(aux, editGrouper.index);\r\n                                        }\r\n                                        setOpenEditGrouper(!openEditGrouper)\r\n                                    }}\r\n                                    disabled={editGrouper.name==='' || editGrouper.maker==='' || editGrouper.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value=null}) {\r\n    //const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={data.name} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    colorSquare: {\r\n        width: '.5em',\r\n        height: '1em',\r\n        borderRadius: '5px',\r\n        marginRight: '.25em',\r\n        border: '1px solid #c4c4c4',\r\n        flex: '0 0 auto'\r\n    },\r\n    checkboxContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n}));\r\n\r\nexport default function RadioButtonsGroup({items, title, onChange, name, value}) {\r\n    //const [value, setValue] = React.useState();\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        ////console.log(JSON.parse(event.target.value))\r\n        if(onChange)\r\n            onChange({target: {name, value:JSON.parse(event.target.value)}})\r\n        //setValue(event.target.value);\r\n    };\r\n    //console.log(value)\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            {title?<FormLabel component=\"legend\">{title}</FormLabel>:<React.Fragment/>}\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={JSON.stringify(value)} onChange={handleChange}>\r\n                {items.map((data, index)=>\r\n                    <FormControlLabel key={index} value={JSON.stringify(data)} control={<Radio />} label={<div style={{display: 'flex', alignItems: 'center'}}><div className={classes.colorSquare} style={{backgroundColor:data.color}}/>{data.name}</div>} />\r\n                )}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../../Components/ConfirmDialog';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport RadioGroup from '../../../Components/RadioGroup';\r\nimport RadioGropupGroupers from './RadioGropupGroupers';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst initialValue = {\r\n    name:'',\r\n    content:'',\r\n    unit: null,\r\n    grouper:null,\r\n    subcategory:null,\r\n    presentation:''\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n       // margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        //marginTop: theme.spacing(2),\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n    colorContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'inherit'\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    }\r\n}));\r\n\r\nconst Step2 = ({ groupers=[], pushSku, subcategories=[], skus=[], updateSkus, removeSku }) => {\r\n\r\n    const classes = useStyles();\r\n    const [sku, setSku] = React.useState({\r\n        ...initialValue\r\n    })\r\n\r\n    const [openEditSku, setOpenEditSku] = React.useState(false);\r\n    const [editSku, setEditSku] = React.useState({});\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log('useffect',groupers,skus)\r\n    },[skus])\r\n\r\n    const getSkus = () => {\r\n        return (\r\n            skus.map((data, index) => \r\n                <React.Fragment>\r\n                    <Grid item xs={3}>\r\n                        <Typography align='left'>\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.content} {data.unit} / {data.presentation}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        {\r\n                            data.grouper?\r\n                                <div className={classes.colorContainer}>\r\n                                    <div className={classes.colorSquare} style={{backgroundColor:data.grouper.color}}/>\r\n                                    <Typography variant=\"subtitle1\" align=\"left\">{data.grouper.name}</Typography>\r\n                                </div>\r\n                            :\r\n                            <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Typography align='left'>\r\n                            {data.subcategory.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                message='Esta seguro de eliminar esta categoria?'\r\n                                title='Esta seguro de eliminar esta categoria?'\r\n                                onOk={()=>{handleRemoveSku(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setEditSku({...data, index})\r\n                                setOpenEditSku(!openEditSku);\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleInputSku = (e) => {\r\n        const {name, value} = e.target;\r\n        ////console.log(value)\r\n        setSku({...sku, [name]:value});\r\n    }\r\n\r\n    const handleSaveSku = () => {\r\n        ////console.log(sku)\r\n        let cpy = JSON.stringify(sku);\r\n        if(pushSku){\r\n            pushSku(JSON.parse(cpy));\r\n        }   \r\n        setSku({...initialValue})\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        if(removeSku)\r\n            removeSku(index);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant='h6'\r\n                        align='left'\r\n                    >\r\n                        Añade o elimina tus SKUS\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='caption'\r\n                        align='left'\r\n                        display='block'\r\n                    >\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Contenido</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Marcas</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">Subcategoria</Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    \r\n                </Grid>\r\n                { getSkus() }\r\n                <Grid item xs={3}>\r\n                    <TextField \r\n                        id=\"\" \r\n                        label=\"Nombre\" \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        multiline\r\n                        name='name'\r\n                        onChange={handleInputSku}\r\n                        value={sku.name}\r\n                        required\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{display:'flex', flexDirection:'column'}}>\r\n                        <TextField \r\n                            id=\"\" \r\n                            label=\"Contenido\" \r\n                            variant=\"outlined\" \r\n                            fullWidth\r\n                            multiline\r\n                            name='content'\r\n                            //rows={2}\r\n                            onChange={(e)=>{handleInputSku({target:{name:e.target.name, value:e.target.value.replace(/[^0-9]/g, '')}})}}\r\n                            value={sku.content}\r\n                            required\r\n                        />\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                <Select\r\n                                    //value={age}\r\n                                    name={'unit'}\r\n                                    label=\"Unidad *\"\r\n                                    value={sku.unit}\r\n                                    onChange={handleInputSku}\r\n                                >\r\n                                    <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                    <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                    <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div style={{marginTop:'.5em'}}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Presentación\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='presentation'\r\n                                //rows={2}\r\n                                onChange={handleInputSku}\r\n                                value={sku.presentation}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div style={{display:'flex'}}>\r\n                        <RadioGropupGroupers\r\n                            name = 'grouper'\r\n                            items = {[...groupers]}\r\n                            onChange={handleInputSku}\r\n                            value={sku.grouper}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={2} align='left'>\r\n                    <RadioGroup\r\n                        name = 'subcategory'\r\n                        items = {[...subcategories]}\r\n                        onChange={handleInputSku}\r\n                        value={sku.subcategory}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                        {/*<DeleteIcon/>*/}\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSaveSku}\r\n                            disabled={sku.name==='' || sku.content==='' || sku.grouper===null || sku.subcategory===null || sku.unit===null || sku.presentation===''}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={openEditSku}\r\n                onClose={()=>{setOpenEditSku(!openEditSku)}}\r\n            >\r\n                <Paper \r\n                    className={classes.modal}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align=\"left\"\r\n                            >\r\n                                Editar Sku\r\n                            </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={3}>\r\n                            <TextField \r\n                                id=\"\" \r\n                                label=\"Nombre\" \r\n                                variant=\"outlined\" \r\n                                fullWidth\r\n                                multiline\r\n                                name='name'\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, name:e.target.value})\r\n                                }}\r\n                                value={editSku.name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <div style={{display:'flex', flexDirection:'column'}}>\r\n                                <TextField \r\n                                    id=\"\" \r\n                                    label=\"Contenido\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    multiline\r\n                                    name='content'\r\n                                    //rows={2}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value.replace(/[^0-9]/g, '')})\r\n                                    }}\r\n                                    value={editSku.content}\r\n                                    required\r\n                                />\r\n                                <div style={{marginTop:'.5em'}}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Unidad *</InputLabel>\r\n                                        <Select\r\n                                            //value={age}\r\n                                            name={'unit'}\r\n                                            label=\"Unidad *\"\r\n                                            value={editSku.unit}\r\n                                            onChange={(e)=>{\r\n                                                setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={'Kg'}>Kg</MenuItem>\r\n                                            <MenuItem value={'Lib'}>Lib</MenuItem>\r\n                                            <MenuItem value={'Gr'}>Gr</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField \r\n                                        id=\"\"\r\n                                        label=\"Presentación\" \r\n                                        variant=\"outlined\" \r\n                                        fullWidth\r\n                                        multiline\r\n                                        name='presentation'\r\n                                        //rows={2}\r\n                                        onChange={handleInputSku}\r\n                                        value={editSku.presentation}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <div style={{display:'flex'}}>\r\n                                <RadioGropupGroupers\r\n                                    name = 'grouper'\r\n                                    items = {[...groupers]}\r\n                                    onChange={(e)=>{\r\n                                        setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                    }}\r\n                                    value={editSku.grouper}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <RadioGroup\r\n                                name = 'subcategory'\r\n                                items = {[...subcategories]}\r\n                                onChange={(e)=>{\r\n                                    setEditSku({...editSku, [e.target.name]:e.target.value})\r\n                                }}\r\n                                value={editSku.subcategory}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <Stack spacing={2} direction=\"row\">\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={()=>{\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    onClick={()=>{\r\n                                        let aux = skus.slice();\r\n                                        aux[editSku.index] = editSku;\r\n                                        if(updateSkus){\r\n                                            //console.log(editGrouper)\r\n                                            updateSkus(aux, editSku.index);\r\n                                        }\r\n                                        setOpenEditSku(!openEditSku)\r\n                                    }}\r\n                                    disabled={editSku.name==='' || editSku.content==='' || editSku.grouper===null || editSku.subcategory===null || editSku.unit===null || editSku.presentation===''}\r\n                                >\r\n                                    Actualizar\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Step2;","import React from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    dragabbleNode: {\r\n        width: '.75em',\r\n        height: '.75em',\r\n        cursor: 'move',\r\n        backgroundColor: props=>props.color,\r\n        borderRadius: '50%',\r\n        border: '2px solid #E6EBF1',//verde principal\r\n        TransitionEvent: 'all 1.5s ease',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        left: '-.5em',\r\n        \"&:hover\": {\r\n            boxShadow: '0px 0px 10px 0px rgba(43,153,130,1)',\r\n            backgroundColor: '#2B9982',\r\n        }\r\n    },\r\n}));\r\n\r\nconst Draggable2 = ({data, position=null, fixed=false, onStop, color='#fff'}) => {\r\n\r\n    const classes = useStyles({color: color});\r\n    const nodeRef = React.useRef(null);\r\n    const [conf, setConf] = React.useState({\r\n        position:{\r\n            x:0,\r\n            y:0,\r\n        }, \r\n        fixed: false\r\n    })\r\n\r\n    React.useEffect(()=>{\r\n        if(position)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: position.x,\r\n                    y: position.y\r\n                },\r\n                fixed: true\r\n            })\r\n    },[position])\r\n\r\n    const eventLogger = (e) => {\r\n        ////console.log('Data: ', e);\r\n    };\r\n\r\n    const getTranslateValues = (translate) => {\r\n        let result = translate.split('translate(')[1].split(')')[0].split(', ');\r\n        try {\r\n            return {x: parseInt(result[0].split('px')[0]), y :parseInt(result[1].split('px')[0])};\r\n        } catch (error) {\r\n            console.error(result)\r\n            console.error(error)\r\n            return {x:0, y:0}\r\n        }\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        ////console.log(getTranslateValues(nodeRef.current.style.transform));\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                ...getTranslateValues(nodeRef.current.style.transform)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleStart = (e) => {\r\n        /*//console.log( e)\r\n        setConf({\r\n            ...conf, \r\n            position: {\r\n                x: 0,\r\n                y: 10\r\n            }\r\n        })*/\r\n    }\r\n    \r\n    const handleEnd = (e) => {\r\n        /*//console.log( e)*/\r\n        if(onStop){\r\n            onStop(data)\r\n        }\r\n        if(!fixed)\r\n            setConf({\r\n                ...conf, \r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            //axis=\"x\"\r\n            handle=\".handle\"\r\n            defaultPosition={{x: 0, y: 0}}\r\n            position={conf.position}\r\n            //grid={[25, 25]}\r\n            scale={1}\r\n            onStart={eventLogger}\r\n            onDrag={handleDrag}\r\n            onStop={handleEnd}\r\n        >\r\n            <div className={classes.dragabbleNode} id={'end-'+data.id} ref={nodeRef}>\r\n                <div className=\"handle\">\r\n                    <span style={{visibility: 'hidden', width: 0, height: 0}}>.</span>\r\n                </div>\r\n            </div>\r\n        </Draggable>\r\n    );\r\n  \r\n}\r\n\r\nexport default Draggable2;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Draggable from '../Draggable';\r\n\r\nconst maingreen = '#2B9982';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    startNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        transition: 'all .5s',\r\n        backgroundColor: '#fff',\r\n        zIndex: '1',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        //backgroundColor: '#fff'\r\n    },\r\n    startNodeContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginBottom: '.5em',\r\n        transition: 'all .5s'\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0'\r\n    },    \r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    },\r\n    startPoint: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '25%'\r\n    }\r\n}));\r\n\r\nfunction useOutsideAlerter(ref, callback) {\r\n    React.useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                //alert(\"You clicked outside of me!\");\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst StartBox = ({id, data, onStop}) => {\r\n\r\n    const wrapperRef = React.useRef(null);\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [focus, setFocus] = React.useState(false);\r\n\r\n    const hanldeFocus = () => {\r\n        setFocus(true);\r\n    }\r\n\r\n    const handleFocusOut = () => {\r\n        setFocus(false);\r\n    }\r\n\r\n    useOutsideAlerter(wrapperRef, handleFocusOut);\r\n//console.log(data)\r\n    return (\r\n        <div className={classes.startNodeContainer} ref={wrapperRef}>\r\n            <div \r\n                className={classes.startNode} \r\n                 \r\n                onClick={hanldeFocus}\r\n                style={{borderWidth: focus?'2px':'1px'}}\r\n            >\r\n                <div id={'startBox-'+id} className={classes.startPoint}/>\r\n                <div id={'start-'+id} className={classes.startPoint}/>\r\n                <div className={classes.borderColor}/>\r\n                <div className={classes.title}>\r\n                    {data.name}\r\n                </div>\r\n                <div className={classes.dataContainer}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Draggable \r\n                data={data} \r\n                onStop={onStop}\r\n                color={data.grouper.color}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartBox;","import React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNodePoint: {\r\n        position: 'absolute',\r\n        width: '.75em',\r\n        height: '.75em',\r\n        border: '2px solid #E6EBF1',\r\n        backgroundColor: '#aaa',\r\n        borderRadius: '50%',\r\n        left: '-.75em',\r\n        top: 'calc(50% - .25em)',\r\n        zIndex: '1',\r\n        \"&:hover\": {\r\n            backgroundColor: '#C72C1C',\r\n            borderColor: '#C72C1C'\r\n        }\r\n    },\r\n    nodeContainer: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - .15em)',\r\n        left: '.25em',\r\n    }\r\n}));\r\n\r\nconst DeleteNode = ({ onMouseEnter, onMouseLeave, related, relations, onEnterItem, onLeaveItem, onDelete, color='#fff' }) => {\r\n\r\n    const classes = useStyles({color: color});\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = (data) => {\r\n        if(onDelete)\r\n            onDelete(data)\r\n        handleClose();\r\n    }\r\n\r\n    ////console.log('relations',relations)\r\n    return (\r\n        <div className={classes.nodeContainer}>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <div \r\n                    className={classes.endNodePoint} \r\n                    style={{display:related?'block':'none'}} \r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    onClick={handleClick}\r\n                />\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {\r\n                    relations.map((data, index)=>{\r\n                        ////console.log(data)\r\n                        return (\r\n                            <MenuItem \r\n                                key={index} \r\n                                onClick={()=>handleDelete(data)}\r\n                            >\r\n                                <spam\r\n                                    onMouseEnter={()=>{\r\n                                        onEnterItem(data)\r\n                                    }}\r\n                                    onMouseLeave={()=>{\r\n                                        onLeaveItem(data)\r\n                                    }}\r\n                                >\r\n                                    {data.from.name}\r\n                                </spam>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteNode;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport DeleteNode from './DeleteNode';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    endNode: {\r\n        border: '1px solid #E6EBF1',\r\n        borderRadius: '2px',\r\n        padding: '.25em 1.5em',\r\n        marginBottom: '.5em',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        color: '#727272',\r\n        //backgroundColor: '#F0F0F0',\r\n        \"&:hover\": {\r\n            borderWidth: '2px'\r\n        },\r\n    },\r\n    magnet: {\r\n        position: 'absolute',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: '10em',\r\n        right: '0',\r\n        top: '0',\r\n        zIndex: '1',\r\n    },\r\n    borderColor: {\r\n        height: '100%',\r\n        width: '.5em',\r\n        backgroundColor: props => props.color, \r\n        position: 'absolute',\r\n        left: '0',\r\n        top: '0'\r\n    },\r\n    grouperCircle: {\r\n        width: '1em',\r\n        height: '1em',\r\n        backgroundColor: props => props.color,\r\n        borderRadius: '50%',\r\n        marginRight: '.5em',\r\n    },\r\n    title: {\r\n        textTransform: 'uppercase',\r\n        display: 'flex',\r\n        marginBottom: '.25em',\r\n        fontWeight: '600'\r\n    },\r\n    detail: {\r\n        fontSize: '.75em',\r\n        display: 'flex',\r\n        opacity: '.75'\r\n    }\r\n}));\r\n\r\nconst EndBox = ({data, id, onEnter, onExit, related=false, onEnterDelete, onExitDelete, relations=[], onEnterItem, onLeaveItem, onDelete}) => {\r\n\r\n    const classes = useStyles({color: data.grouper.color});\r\n    const [hover, setHover] = React.useState(false);\r\n\r\n    const handleEnter = () => {\r\n        setHover(true);\r\n        if(onEnter)\r\n            onEnter(data);\r\n    }\r\n\r\n    const handleExit = () => {\r\n        setHover(false);\r\n        if(onExit)\r\n            onExit(data);\r\n    }\r\n\r\n    const handleEnterDelete = () => {\r\n        if(onEnterDelete)\r\n            onEnterDelete(data);\r\n    }\r\n\r\n    const handleExitDelete = () => {\r\n        if(onExitDelete)\r\n            onExitDelete(data);\r\n    }\r\n\r\n    return (\r\n        <div id={'endBox-'+id}>\r\n            <DeleteNode \r\n                related={related}\r\n                onMouseEnter={handleEnterDelete}\r\n                onMouseLeave={handleExitDelete}\r\n                relations={relations}\r\n                onEnterItem={onEnterItem}\r\n                onLeaveItem={onLeaveItem}\r\n                onDelete={(data)=>onDelete(data)}\r\n                className={classes.container}\r\n                color={data.grouper.color}\r\n            />\r\n            <div \r\n                className={classes.endNode}\r\n                style={{backgroundColor: hover?'rgba(0,0,0,.05)':'#fff', borderWidth: hover?'2px':'1px'}}\r\n            >\r\n                \r\n            <div \r\n                className={classes.magnet} \r\n                onMouseEnter={handleEnter}\r\n                onMouseLeave={handleExit}\r\n            />\r\n                <div className={classes.borderColor}/>\r\n                <div className={classes.title}>\r\n                    {data.name}\r\n                </div>\r\n                <div className={classes.dataContainer}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        {/*<div className={classes.grouperCircle}/> */}\r\n                        <span style={{textTransform: 'uppercase'}}>\r\n                            {data.grouper.name} / {data.grouper.maker}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        {data.grouper.description}\r\n                    </div>\r\n                    <div className={classes.detail}>\r\n                        <span style={{textTransform: 'capitalize'}}>{data.grouper.presentation}</span> / <span style={{fontWeight: '600'}}>{data.content} {data.unit}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndBox;","import React from 'react';\r\nimport { useScreenshot } from \"use-react-screenshot\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nimport Alert from '../Alert';\r\n\r\n/*import copy from './copy.svg';\r\nimport save from './save.svg';*/\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    circularButon: {\r\n        margin: '.5em',\r\n        marginRight: '0',\r\n        padding: '1em',\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '50%',\r\n        //border: '1px solid #000',\r\n        transition: 'all .25s',\r\n        backgroundColor: 'transparent',\r\n        cursor: 'pointer',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ecf0f1',\r\n            borderColor: '#95a5a6'\r\n        }\r\n    },\r\n    alert: {\r\n        position:'fixed',\r\n        bottom: '1em',\r\n        right: '1em',\r\n    },\r\n    container: {\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n    },\r\n    capture: {\r\n        position: 'absolute',\r\n        backgroundColor: 'rgba(0,0,0,.5)',\r\n        left: 0,\r\n        top: 0, \r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: '100'\r\n    }\r\n}));\r\n\r\nconst ScreenShot = ({children, onCapture}) => {\r\n    const classes = useStyles();\r\n\r\n    const ref = React.createRef(null);\r\n    const [image, takeScreenShot] = useScreenshot();\r\n    const [loaded, setLoaded] = React.useState(true);\r\n    //const [alert, setAlert] = React.useState(false);\r\n    //const [shutter, setShutter] = React.useState(false);\r\n    const getImage = () => {\r\n        ////console.log(ref2.current.getContext('2d'))\r\n        takeScreenShot(ref.current);\r\n        //setAlert(true);\r\n        //setShutter(true);\r\n        // if(onCapture)\r\n        //     onCapture(image);\r\n        // setTimeout(()=>{\r\n        //     setAlert(false);\r\n        // },3000)\r\n        // setTimeout(()=>{\r\n        //     setShutter(false);\r\n        // }, 100)\r\n    };\r\n\r\n    function downloadBase64File( base64Data, fileName) {\r\n        const linkSource = `${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        takeScreenShot(ref.current);\r\n        setLoaded(true);\r\n        //downloadBase64File(, image, 'ScreenShot');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={ref} className={classes.container}>\r\n                {/*<div className={classes.capture} style={{display: shutter?'block':'none'}}></div>\r\n                <canvas ref={ref2} style={{width: '100%', height: '100vh', background: 'red', position: 'absolute'}}></canvas>*/}\r\n                {children}\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                {/*<img src={image} alt='' style={{width: '100%'}}/>\r\n                <div className={classes.circularButon}>\r\n                    <img src={copy} style={{width:'100%'}} alt='copy' />\r\n                </div>\r\n                <div onClick={()=>{}} className={classes.circularButon}>\r\n                    <img src={save} style={{width:'100%'}} alt='save' />\r\n                </div>\r\n                */}\r\n                <Fab size=\"small\" onClick={getImage} color=\"primary\" aria-label=\"clean\">\r\n                    <ContentCopyIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\">\r\n                    <SaveIcon />\r\n                </Fab>\r\n                <Fab size=\"small\" onClick={handleDownload} color=\"primary\" aria-label=\"clean\">\r\n                    <DownloadIcon />\r\n                </Fab>\r\n                {/*<div className={classes.alert}>\r\n                    <Alert\r\n                        type={'success'}\r\n                        open={alert}\r\n                        text='Copiado'\r\n                    />\r\n                </div>*/}\r\n                {\r\n                    loaded &&\r\n                    <img \r\n                        src={image} \r\n                        alt='' \r\n                        onLoad={()=>{\r\n                            ////console.log(image)\r\n                            downloadBase64File(image,'screenshot.png');\r\n                            setLoaded(false);\r\n                            if(onCapture)\r\n                                onCapture(image);\r\n                        }} \r\n                        style={{width: '0em', height: '0em'}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenShot;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport StartBox from './StartBox';\r\nimport EndBox from './EndBox';\r\nimport ReactBezier from \"react-bezier\";\r\nimport ScreenShot from '../ScreenShot';\r\n\r\n//import ContextMenu from '../ContextMenu';\r\nimport Fab from '@mui/material/Fab';\r\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n    col: {\r\n        width: '30%',\r\n        /*padding: '1em',\r\n        width: '30%',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n        transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '4px',\r\n        margin: '.25em',*/\r\n        //overflow: 'hidden',\r\n    },\r\n    startNode: {\r\n        border: '1px solid #2B9982',\r\n        borderRadius: '.5em',\r\n        padding: '.5em 1.5em'\r\n    },\r\n    title: {\r\n        backgroundColor: '#2B9982',\r\n        top: '-1em',\r\n        left: '-1em',\r\n        position: 'relative',\r\n        width: 'calc( 100% + 1.5em)',\r\n        padding: '.25em',\r\n        color: '#fff',\r\n        borderRadius: '4px 4px 0 0'\r\n    },\r\n\r\n    '@global': {\r\n        \r\n    }\r\n\r\n});\r\n\r\nconst RelatableBoxes = ({dataFrom, dataTo, onUpdate, relations=[]}) => {\r\n\r\n    const classes = useStyles();\r\n    const [draggablesNodes, setDraggablesNodes] = React.useState([]);\r\n    const [settings, setSettings] = React.useState([]);\r\n    const [enter, setEnter] = React.useState({data:null, flag:false});\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(()=>{\r\n        let newArray = [];\r\n        for(let i=0;i<relations.length;i++){\r\n            let newData = {\r\n                from: \"startBox-\"+relations[i].from.id,\r\n                to: \"endBox-\"+relations[i].to.id,\r\n                toData: relations[i].to,\r\n                fromData: relations[i].from,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            newArray.push(newData);\r\n        }\r\n        //console.log([...settings, ...newArray])\r\n        setDraggablesNodes([...newArray]);\r\n        setSettings([...settings, ...newArray]);\r\n        //console.log([...settings, ...newArray],relations);\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        ////console.log(dataFrom,dataTo)\r\n        ////console.log(groupers)\r\n        ////console.log(classes)\r\n        let newSettings = [];\r\n        //let newDraggablesNodes = [];\r\n        \r\n        for(let i=0;i<dataFrom.length;i++){\r\n            newSettings.push(\r\n                {\r\n                    from: \"start-\"+dataFrom[i].id,\r\n                    to: \"end-\"+dataFrom[i].id,\r\n                    toData: dataFrom[i],\r\n                    fromData: dataFrom[i],\r\n                    positions: {\r\n                        start: {\r\n                            side: \"right\",\r\n                            indent: 20\r\n                        },\r\n                        end: {\r\n                            side: \"left\",\r\n                        },\r\n                    },\r\n                    style: `relationship-line-selected`,\r\n              }\r\n            )\r\n        }\r\n        //console.log(newSettings)\r\n        // if(settings.length===0){\r\n        //     for(let i=0;i<relations.length;i++){\r\n        //         let newData = {\r\n        //             from: \"startBox-\"+relations[i].from.id,\r\n        //             to: \"endBox-\"+relations[i].to.id,\r\n        //             toData: relations[i].to,\r\n        //             fromData: relations[i].from,\r\n        //             positions: {\r\n        //                 start: {\r\n        //                     side: \"right\",\r\n        //                     indent: 20\r\n        //                 },\r\n        //                 end: {\r\n        //                     side: \"left\",\r\n        //                 },\r\n        //             },\r\n        //             style: \"relationship-line \"+`stroke-color-${relations[i].from.grouper.name}-${relations[i].from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n        //         }\r\n        //         newSettings.push(newData);\r\n        //     }\r\n        // }\r\n        //console.log(settings)\r\n        setSettings([...newSettings, ...draggablesNodes]);\r\n        if(settings.length!==0){\r\n            //console.log('updating')\r\n            handleUpdate([...newSettings, ...draggablesNodes]);\r\n        }\r\n        //console.log([...newSettings, ...draggablesNodes])\r\n        //console.log([...newSettings, ...draggablesNodes], relations, 'draggableNodes')\r\n    },[draggablesNodes]);\r\n\r\n    const handleUpdate = (data) => {\r\n        let aux = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].style!=='relationship-line-selected'){\r\n                aux.push({from:data[i].fromData, to:data[i].toData})\r\n            }\r\n        }\r\n        //console.log(aux)\r\n        if(onUpdate)\r\n            onUpdate(aux);\r\n    }\r\n\r\n    const handleEnter = (data) => {\r\n        setEnter({data, flag: true});\r\n    }\r\n\r\n    const handleExit = (data) => {\r\n        setEnter({data:null, flag:false});\r\n    }\r\n\r\n    const handleStop = (data) => {\r\n        ////console.log(data, enter)\r\n        let aux = draggablesNodes.slice();\r\n        let newData;\r\n        \r\n        // for(let i=0;i<aux.length;i++){\r\n        //     try {\r\n        //         if(aux[i].toData.id===enter.data.id && aux[i].fromData.id)\r\n        //             //console.log('from')\r\n        //     } catch (error) {\r\n        //     }\r\n        // }\r\n        \r\n        if(enter.flag){\r\n            newData = {\r\n                from: \"startBox-\"+data.id,\r\n                to: \"endBox-\"+enter.data.id,\r\n                toData: enter.data,\r\n                fromData: data,\r\n                positions: {\r\n                    start: {\r\n                        side: \"right\",\r\n                        indent: 20\r\n                    },\r\n                    end: {\r\n                        side: \"left\",\r\n                    },\r\n                },\r\n                style: \"relationship-line \"+`stroke-color-${data.grouper.name}-${data.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"),\r\n            }\r\n            aux.push(newData);\r\n            ////console.log('newData')\r\n            setDraggablesNodes(aux);\r\n        }\r\n    }\r\n\r\n    const isRelated = (id) => {\r\n        //console.log(id)\r\n        for(let i=0;i<draggablesNodes.length;i++){\r\n            if(`${draggablesNodes[i].toData.id}`===`${id}`)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const changeLineColor = (data, newClass) => {\r\n        ////console.log(id)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].toData.id===data.id)\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                };\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const changeLineColorFrom = (from, to, newClass) => {\r\n        ////console.log('from',from)\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            // if(newSettings[i].style!=='relationship-line-selected'){\r\n            //     newSettings[i] = {\r\n            //         ...newSettings[i],\r\n            //         style: defaultStyleClass,\r\n            //     };\r\n            //     //continue;\r\n            // }\r\n            if(newSettings[i].fromData.id===from.id && newSettings[i].toData.id===to.id){\r\n                newSettings[i] = {\r\n                    ...newSettings[i],\r\n                    style: newClass,\r\n                }; \r\n                //continue;\r\n            }\r\n        }\r\n        ////console.log(newSettings);\r\n        setSettings([...newSettings]);\r\n    }\r\n\r\n    const getRelations = (id) => {\r\n        let data = settings.slice();\r\n        let newData = [];\r\n        let response = [];\r\n        for(let i=0;i<data.length;i++){\r\n            if(data[i].toData.id===id && (data[i].style!=='relationship-line-selected'))\r\n                newData.push({from:data[i].fromData, to:data[i].toData});\r\n        }\r\n        \r\n        for(let i=0;i<newData.length;i++){\r\n            let flag = false;\r\n            for(let j=0;j<response.length;j++){\r\n                if(newData[i].from.id===response[j].from.id){\r\n                    flag = true;\r\n                }\r\n            }\r\n            if(!flag){\r\n                response.push(newData[i]);\r\n            }\r\n        }\r\n        ////console.log('data', data, id, newData)\r\n        return response;\r\n    }\r\n\r\n    const hanldeDelete = (data) => {\r\n        ////console.log(data)\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(!(newSettings[i].fromData.id===data.from.id && newSettings[i].toData.id===data.to.id)){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n\r\n        let aux2 = [];\r\n        let newDraggables = draggablesNodes.slice();\r\n        for(let i=0;i<newDraggables.length;i++){\r\n            ////console.log(newDraggables);\r\n            if(!(newDraggables[i].fromData.id===data.from.id && newDraggables[i].toData.id===data.to.id)){\r\n                aux2.push(newDraggables[i])\r\n            }\r\n        }\r\n        \r\n\r\n        setDraggablesNodes([...aux2]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    const cleanNodes = () => {\r\n        let aux = [];\r\n        let newSettings = settings.slice();\r\n        for(let i=0;i<newSettings.length;i++){\r\n            if(newSettings[i].style==='relationship-line'){\r\n                aux.push(newSettings[i])\r\n            }\r\n        }\r\n        \r\n        setDraggablesNodes([]);\r\n        setSettings([...aux]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ScreenShot>\r\n                <div ref={ref}>\r\n                    {/*<ContextMenu\r\n                        ref={ref}\r\n                    />*/}\r\n                    {\r\n                       ////console.log(groupers,'groupers')\r\n                    }\r\n                    <ReactBezier settings={settings}>\r\n                        {/*<CustonCursor/>*/}\r\n                        <div className={classes.container}>\r\n                            <div className={classes.col} style={{marginRight:'30%'}}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                </div>*/}\r\n                                {\r\n                                    dataFrom.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <StartBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onStop={handleStop}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={classes.col}>\r\n                                {/*<div className={classes.title}>\r\n                                    SKUs\r\n                            </div>*/}\r\n                                {\r\n                                    dataTo.map((data, index)=> {\r\n                                        return (\r\n                                            <div key={index} style={{position: 'relative'}}>\r\n                                                <EndBox\r\n                                                    data={data}\r\n                                                    id={data.id}\r\n                                                    onEnter={handleEnter}\r\n                                                    onExit={handleExit}\r\n                                                    related={isRelated(data.id)}\r\n\r\n                                                    onEnterDelete={()=>{/*changeLineColor(data, 'relationship-line-delete')*/}}\r\n                                                    onExitDelete={()=>{/*changeLineColor(data, 'relationship-line')*/}}//cambia el color a lines que llegan a un nodo final\r\n\r\n                                                    relations={getRelations(data.id)}\r\n\r\n                                                    onEnterItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line-delete')}\r\n                                                    onLeaveItem={(data)=>changeLineColorFrom(data.from, data.to, 'relationship-line '+`stroke-color-${data.from.grouper.name}-${data.from.grouper.id}`.replace(/\\s/g, '_').split('.').join(\"\"))}//cambia el color de la linea\r\n\r\n                                                    onDelete={(data)=>hanldeDelete(data)}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </ReactBezier>\r\n                </div>\r\n            </ScreenShot>\r\n            <div style={{display: 'flex'}}>\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"clean\" onClick={cleanNodes}>\r\n                    <CleaningServicesIcon/>\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RelatableBoxes;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport Card from '@mui/material/Card';\r\n//import CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/EditOutlined';\r\n\r\nimport ConfirmDialog from '../../Components/ConfirmDialog';\r\nimport FullScreenDialog from '../../Components/FullScreenDialog';\r\n\r\nimport Groupers from './Groupers';\r\nimport Skus from './Skus';\r\n\r\n//temporal\r\nimport RelatableBoxes from '../../Components/RelatableBoxes';\r\nimport styled from 'styled-components';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport ColorPicker from '../../Components/ColorPicker';\r\n\r\nconst WrapperDiv = styled.div`\r\n    ${props => props.classes}\r\n`;\r\n\r\nconst randomColor = () => {\r\n    let color = Math.floor(Math.random()*16777215).toString(16);\r\n    return `#${color}`;\r\n}\r\n\r\nconst getid = () => {\r\n    return `${(Math.random() * (1000 - 1) + 1)}`.split('.').join(\"\");\r\n}\r\n\r\nconst initialValues = {\r\n    category: {\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n        id:getid()\r\n    },\r\n    subcategories: [],\r\n    groupers: [],\r\n    skus:[],\r\n    relations:[],\r\n}\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title:'SKU '+ {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        //marginTop: theme.spacing(1),\r\n        //marginRight: theme.spacing(1), \r\n    },\r\n    actionsContainer: {\r\n        //marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        //padding: theme.spacing(3),\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '50%',\r\n        padding:'1em',\r\n        p: 4,\r\n    },\r\n    colorSquare: {\r\n        width: '1em',\r\n        height: '1em',\r\n        borderRadius: '2px',\r\n        marginRight: '.5em',\r\n        border: '2px solid #c4c4c4',\r\n    },\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n    return ['Carga tus categorias y subcategorias', 'Carga tus marcas y SKU', 'Relaciona tus SKUs con los de la competencia'];\r\n}\r\n\r\nconst NewData = ({onUpdate, onFinish}) => {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const [state, setState] = React.useState({\r\n        ...initialValues\r\n    });\r\n\r\n    const [subStep, setSubStep] = React.useState({\r\n        step: 0\r\n    })\r\n\r\n    const [category, setCategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        variables:[],\r\n    });\r\n    \r\n    const [subcategory, setSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n        color:randomColor()\r\n    });\r\n\r\n    const [editSubcategory, setEditSubcategory] = React.useState({\r\n        name:'',\r\n        description:'',\r\n        category:null,\r\n    });\r\n\r\n    const [openEditSubcategory, setOpenEditSubcategory] = React.useState(false);\r\n    \r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleInputChangeCategory = (e) => {\r\n        const {name, value} = e.target;\r\n        setState({...state, category: {...state.category, [name]:value}});\r\n    }\r\n\r\n    const pushCategory = () => {\r\n        let data = category;\r\n        setState({\r\n            ...state,\r\n            categories:[...state.categories, {...data, id:state.categories.length}],\r\n        });\r\n        setCategory({name:'',description:''});\r\n    }\r\n\r\n    const handleInputChangeSubcategories = (e) => {\r\n        const {name, value} = e.target;\r\n        setSubcategory({...subcategory, [name]:value});\r\n    }\r\n\r\n    const pushSubcategory = () => {\r\n        let data = subcategory;\r\n        setState({\r\n            ...state,\r\n            subcategories:[...state.subcategories, {...data, id:getid(), category: state.category}],\r\n        });\r\n        setSubcategory({name:'',description:'', category:'', color:randomColor()});\r\n    }\r\n\r\n    const handleRemoveSubcategory = (index) => {\r\n        let subcategories = state.subcategories.slice();\r\n        subcategories.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            subcategories:[...subcategories],\r\n        });\r\n    }\r\n\r\n    const handleRemoveGrouper = (index) => {\r\n        let groupers = state.groupers.slice();\r\n        groupers.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            groupers:[...groupers],\r\n        });\r\n    }\r\n\r\n    const handleRemoveSku = (index) => {\r\n        let skus = state.skus.slice();\r\n        skus.splice(index,1);\r\n        setState({\r\n            ...state,\r\n            skus:[...skus],\r\n        });\r\n    }\r\n\r\n    const getSubcategories = () => {\r\n        return (\r\n            state.subcategories.map((data, index) => \r\n                <React.Fragment key={index}>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography align=\"left\">\r\n                            {data.description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className={classes.colorSquare} style={{backgroundColor:data.color}}/>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}\r\n                        >\r\n                            <ConfirmDialog\r\n                                //message='Esta seguro de eliminar esta subcategoria?'\r\n                                title='Esta seguro de eliminar esta subcategoria?'\r\n                                onOk={()=>{handleRemoveSubcategory(index)}}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </ConfirmDialog>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <div\r\n                            style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center', cursor:'pointer'}}\r\n                            onClick={()=>{\r\n                                setOpenEditSubcategory(!openEditSubcategory);\r\n                                setEditSubcategory({...data, index})\r\n                            }}\r\n                        >\r\n                            <EditIcon/>\r\n                        </div>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            )\r\n        )\r\n    }\r\n\r\n    const pushGrouper = (data) => {\r\n        setState({\r\n            ...state,\r\n            groupers:[...state.groupers, {...data, id: getid()}],\r\n        });\r\n    }\r\n\r\n    const pushSku = (data) => {\r\n        setState({\r\n            ...state,\r\n            skus:[...state.skus, {...data, id:getid()}],\r\n        });\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const getClasses = () => {\r\n        let lineClasses = {};\r\n\r\n        for(let i=0;i<state.groupers.length;i++){\r\n            lineClasses = {\r\n                ...lineClasses, \r\n                ['.'+(`stroke-color-${state.groupers[i].name}-${state.groupers[i].id}`.replace(/\\s/g, '_').split('.').join(\"\"))]:{\r\n                    stroke:`${state.groupers[i].color} !important`\r\n                }\r\n            };\r\n        }\r\n        ////console.log(JSON.stringify(lineClasses))\r\n        return lineClasses;\r\n    }\r\n\r\n    const handleUpdate = (data) => {\r\n        setState({...state, relations: data})\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div>\r\n                        {   subStep.step===0?\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"primary\">\r\n                                                Categoria\r\n                                            </Typography>\r\n                                            <Typography color=\"inherit\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade los datos de la categoria\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeCategory}\r\n                                            value={state.category.description}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >  \r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            disabled\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={\r\n                                                ()=>{\r\n                                                    setSubStep({step:1}); \r\n                                                    if(subStep.step===1){\r\n                                                        setActiveStep(1); \r\n                                                        setSubStep({step:0})\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            disabled={state.category.name===''}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Grid container alignItems='center' spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                            <Typography color=\"inherit\">\r\n                                                Categorias\r\n                                            </Typography>\r\n                                            <Typography color=\"primary\">\r\n                                                Subategorias\r\n                                            </Typography>\r\n                                        </Breadcrumbs>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant='h6'\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Añade o elimina subcategorias para <span style={{textTransform:'capitalize'}}>{state.category.name}</span>\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            align=\"left\"\r\n                                            display=\"block\"\r\n                                        >\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                            unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                            dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}/>\r\n                                </Grid>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Nombre</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Descripcion</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"subtitle1\" align=\"left\">Color</Typography>\r\n                                    </Grid>\r\n                                    { getSubcategories() }\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Nombre\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            name='name'\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.name}\r\n                                            required\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField \r\n                                            id=\"\" \r\n                                            label=\"Descripcion\" \r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            name='description'\r\n                                            //rows={2}\r\n                                            onChange={handleInputChangeSubcategories}\r\n                                            value={subcategory.description}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <ColorPicker\r\n                                            onChangeComplete={handleInputChangeSubcategories}\r\n                                            name='color'\r\n                                            value={subcategory.color}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems:'center'}}>\r\n                                            {/*<DeleteIcon/>*/}\r\n                                            <Button\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={pushSubcategory}\r\n                                                disabled={subcategory.name===''}\r\n                                            >\r\n                                                Guardar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1){setActiveStep(1); setSubStep({step:0})}}}\r\n                                            disabled={state.subcategories.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                                <Modal\r\n                                    open={openEditSubcategory}\r\n                                    onClose={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                >\r\n                                    <Paper \r\n                                        className={classes.modal}\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    variant='h6'\r\n                                                    align=\"left\"\r\n                                                >\r\n                                                    Editar subcategoria\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    label=\"Nombre\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    name='name'\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, name:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.name}\r\n                                                    required\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={5}>\r\n                                                <TextField \r\n                                                    id=\"\" \r\n                                                    label=\"Descripcion\" \r\n                                                    variant=\"outlined\" \r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    name='description'\r\n                                                    //rows={2}\r\n                                                    onChange={(e)=>{\r\n                                                        setEditSubcategory({...editSubcategory, description:e.target.value})\r\n                                                    }}\r\n                                                    value={editSubcategory.description}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <ColorPicker\r\n                                                    onChangeComplete={(e)=>{\r\n                                                        //console.log(e)\r\n                                                        setEditSubcategory({...editSubcategory, color:e.target.value})\r\n                                                    }}\r\n                                                    name='color'\r\n                                                    value={editSubcategory.color}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Stack spacing={2} direction=\"row\">\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='secondary'\r\n                                                        onClick={()=>{setOpenEditSubcategory(!openEditSubcategory)}}\r\n                                                    >\r\n                                                        Cancelar\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='primary'\r\n                                                        onClick={()=>{\r\n                                                            let aux = state.subcategories.slice();\r\n                                                            aux[editSubcategory.index] = editSubcategory;\r\n                                                            setState({...state, subcategories: aux});\r\n                                                            setOpenEditSubcategory(!openEditSubcategory)\r\n                                                        }}\r\n                                                        disabled={editSubcategory.name===''}\r\n                                                    >\r\n                                                        Actualizar\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Modal>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>\r\n                        <Grid item xs={12}>\r\n                            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                <Typography color={subStep.step===0?\"primary\":\"inherit\"}>\r\n                                    Marcas\r\n                                </Typography>\r\n                                <Typography  color={subStep.step===1?\"primary\":\"inherit\"}>\r\n                                    SKUs\r\n                                </Typography>\r\n                            </Breadcrumbs>\r\n                        </Grid>\r\n                        {subStep.step===0?\r\n                            <>\r\n                                <Groupers\r\n                                    groupers={state.groupers} \r\n                                    pushGrouper={pushGrouper}\r\n                                    updateGroupers={(data)=>{\r\n                                        //console.log('upating groupers', data)\r\n                                        setState({...state, groupers:data});\r\n                                    }}\r\n                                    removeGrouper={handleRemoveGrouper}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setActiveStep(0); setSubStep({step:1})}}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.groupers.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Skus\r\n                                    groupers={state.groupers} \r\n                                    subcategories={state.subcategories}\r\n                                    //groupers={[{color:'#eeefaf', name:'primer agrupador'},{color:'#25fafa', name:'2 agrupador'},{color:'#af3eee', name:'3'},{color:'#3fddaa', name:'agrupador con texto largo'},{color:'#afffaa', name:'5'}]}\r\n                                    //subcategories={[{name:'primero'},{name:'2'},{name:'uno con texto largo'},{name:'uno mas'}]}\r\n                                    pushSku={pushSku}\r\n                                    skus={state.skus}\r\n                                    updateSkus={(data)=>{\r\n                                        setState({...state, skus: data})\r\n                                    }}\r\n                                    removeSku={handleRemoveSku}\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        marginTop: '1em',\r\n                                        display: 'flex'\r\n                                    }}\r\n                                >\r\n                                    <Stack spacing={2} direction=\"row\">\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            onClick={()=>{setSubStep({step:0})}}\r\n                                            disabled={subStep.step===0}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={()=>{setSubStep({step:1}); if(subStep.step===1)setActiveStep(2)}}\r\n                                            disabled={state.skus.length===0}\r\n                                        >\r\n                                            Siguiente\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </React.Fragment>\r\n                );\r\n            case 2:\r\n            return(\r\n                <>\r\n                    <Grid container alignItems='center' spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant='h6'\r\n                                align='left'\r\n                            >\r\n                                Relaciona tus SKU con los de los competidores\r\n                            </Typography>\r\n                            <Typography\r\n                                variant='caption'\r\n                                align='left'\r\n                                display='block'\r\n                                color='#aaa'\r\n                            >\r\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                                unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n                                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <RelatableBoxes\r\n                                dataFrom = {[...state.skus]}\r\n                                dataTo = {[...state.skus]}\r\n                                lineClasses={getClasses()}\r\n                                onUpdate={handleUpdate}\r\n                                relations={state.relations}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{setActiveStep(1)}}\r\n                                disabled={subStep.step===0}\r\n                            >\r\n                                Volver\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                                    setActiveStep(3)\r\n                                    onUpdate(state);\r\n                                    onFinish();\r\n                                }}\r\n                            >\r\n                                Guardar categoria\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            );\r\n            // case 3:\r\n            //     return (\r\n            //         <>\r\n            //             <Grid container alignItems='center' spacing={3}>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Typography\r\n            //                         variant='h6'\r\n            //                         align='left'\r\n            //                     >\r\n            //                         Categoria {state.category.name} creada con exito\r\n            //                     </Typography>\r\n            //                 </Grid>\r\n            //                 <Grid item xs={12}>\r\n            //                     <Paper \r\n            //                         variant=\"outlined\"\r\n            //                         style={{padding:'1em'}}\r\n            //                     >\r\n            //                         <div>\r\n                                        \r\n            //                         <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n            //                             <Grid item xs={12}>\r\n            //                                 <Typography \r\n            //                                     variant='subtitle1'\r\n            //                                     align='left'\r\n            //                                     style={{textTransform:'capitalize'}}\r\n            //                                 >\r\n            //                                     {state.category.name}\r\n            //                                 </Typography>\r\n            //                                 <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                     {state.category.description}\r\n            //                                 </Typography>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         Marcas\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.groupers.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left' display='flex' alignItems='center'>\r\n            //                                                         <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>{data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                             <Grid item xs={6} style={{display: 'flex'}}>\r\n            //                                 <Paper \r\n            //                                     variant=\"outlined\"\r\n            //                                     style={{padding:'1em', width: '100%'}}\r\n            //                                 >\r\n            //                                     <Typography \r\n            //                                         variant='subtitle2'\r\n            //                                         align='left'\r\n            //                                         style={{textTransform:'capitalize'}}\r\n            //                                     >\r\n            //                                         SKUs\r\n            //                                     </Typography>\r\n            //                                     <Divider light style={{marginBottom: '.5em'}}/>\r\n            //                                     <div>\r\n            //                                         {\r\n            //                                             state.skus.map((data, index)=>{\r\n            //                                                 return (\r\n            //                                                     <Typography key={index} variant='body2' align='left'>\r\n            //                                                         {data.name}\r\n            //                                                     </Typography>\r\n            //                                                 )\r\n            //                                             })\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                 </Paper>\r\n            //                             </Grid>\r\n            //                         </Grid>\r\n            //                         </div>\r\n            //                     </Paper>\r\n            //                 </Grid>\r\n            //             </Grid>\r\n            //             <div\r\n            //                 style={{\r\n            //                     marginTop: '1em'\r\n            //                 }}\r\n            //             >\r\n            //                 <Stack spacing={2} direction=\"row\">\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         onClick={()=>{}}\r\n            //                     >\r\n            //                         Agregar otra categoria\r\n            //                     </Button>\r\n            //                     <Button\r\n            //                         variant='contained'\r\n            //                         color='primary'\r\n            //                         onClick={()=>{\r\n            //                             if(onFinish){\r\n            //                                 onFinish();\r\n            //                             }\r\n            //                         }}\r\n            //                     >\r\n            //                         Finalizar\r\n            //                     </Button>\r\n            //                 </Stack>\r\n            //             </div>\r\n            //         </>\r\n            //     );\r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WrapperDiv classes={getClasses()}>\r\n            <Grid container alignItems='flex-start' spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <div className={classes.root}>\r\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                            {steps.map((label, index) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                                <StepContent>\r\n                                    <div className={classes.actionsContainer}>\r\n                                        <div>\r\n                                            {\r\n                                            // <Button\r\n                                            //     disabled={activeStep === 0}\r\n                                            //     onClick={handleBack}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     Back\r\n                                            // </Button>\r\n                                            // <Button\r\n                                            //     variant=\"contained\"\r\n                                            //     color=\"primary\"\r\n                                            //     onClick={handleNext}\r\n                                            //     className={classes.button}\r\n                                            // >\r\n                                            //     {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                            // </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </StepContent>\r\n                            </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        {\r\n                            // activeStep === steps.length && (\r\n                            // <Paper square elevation={0} className={classes.resetContainer}>\r\n                            //     <Typography>All steps completed - you&apos;re finished</Typography>\r\n                            //     <Button onClick={handleReset} className={classes.button}>\r\n                            //         Reset\r\n                            //     </Button>\r\n                            // </Paper>\r\n                            // )\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n                            <Grid container alignItems='center' spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <LinearProgress variant=\"determinate\" value={activeStep*33.333} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div>\r\n                                        {\r\n                                            getStepContent(activeStep)\r\n                                        }\r\n                                        {\r\n                                            ////console.log(state.groupers,'groupers')\r\n                                        }\r\n                                        {\r\n                                            activeStep<3?\r\n                                                <FullScreenDialog\r\n                                                    skus={sortSkus( state.subcategories, state.skus)}\r\n                                                    categories={[state.category]}\r\n                                                    subcategories={sortSubcategories( [state.category], state.subcategories)}\r\n                                                />\r\n                                            :\r\n                                                <></>\r\n                                        }\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        {/*<CardActions>\r\n                            <Button variant='contained'>Learn More</Button>\r\n                        </CardActions>*/}\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </WrapperDiv>\r\n    )\r\n}\r\n\r\nexport default NewData;","import React from 'react';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Button from '@mui/material/Button';\r\nimport FullScreenDialog from '../../../Components/FullScreenDialog';\r\n\r\nconst Category = ({data}) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        console.log('test')\r\n        setOpen(!open);\r\n    }\r\n\r\n    const sortSkus = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].subcategory}`)\r\n                if(`${base[j].id}`===`${sorted[i].subcategory.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        ////console.log('aux', sorted, base)\r\n        return aux;\r\n    }\r\n\r\n    const sortSubcategories = (base, sorted) => {\r\n        let aux = [];\r\n\r\n        ////console.log('sortSubcategories',base,sorted)\r\n        for(let j=0;j<base.length;j++){\r\n            for(let i=0;i<sorted.length;i++){\r\n                ////console.log(`${base[j].id}`+`${sorted[i].category}`)\r\n                if(`${base[j].id}`===`${sorted[i].category.id}`){\r\n                    aux.push(sorted[i])\r\n                }\r\n            }\r\n        }\r\n        \r\n        return aux;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container alignItems='center' spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper \r\n                        variant=\"outlined\"\r\n                        style={{padding:'1em'}}\r\n                    >\r\n                        <div>\r\n                            <Grid container alignItems='center' spacing={1} alignItems=\"stretch\">\r\n                                <Grid item xs={12}>\r\n                                    <Typography \r\n                                        variant='subtitle1'\r\n                                        align='left'\r\n                                        style={{textTransform:'capitalize'}}\r\n                                    >\r\n                                        {data.category.name}\r\n                                    </Typography>\r\n                                    <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                        {data.category.description}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left'>\r\n                                    <FullScreenDialog\r\n                                        skus={sortSkus( data.subcategories, data.skus)}\r\n                                        categories={[data.category]}\r\n                                        subcategories={sortSubcategories( [data.category], data.subcategories)}\r\n                                        position='relative'\r\n                                    >\r\n                                        <Button variant=\"outlined\">\r\n                                            Ver grafico\r\n                                        </Button>\r\n                                    </FullScreenDialog>\r\n                                </Grid>\r\n                                <Grid item xs={12} align='left' style={{marginBottom: open ? '1.5em': '0'}}>\r\n                                    {open ? <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver menos <ExpandLess/></div> : <div style={{display:'flex', alignItems:'center', width:'max-content', cursor:'pointer'}} onClick={handleClick}>Ver mas <ExpandMore/></div>}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                <Grid container alignItems='center' spacing={3} alignItems=\"stretch\">\r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Subcategorias\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.subcategories.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.description}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                Marcas\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.groupers.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography variant='body2' align='left' display='flex' alignItems='center'>\r\n                                                                    <div style={{width:'1em', height:'1em', backgroundColor:data.color, marginRight:'.5em', borderRadius: '50%'}}/>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography variant='caption' align='left' display='flex' alignItems='center'>\r\n                                                                    {data.maker}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} style={{display: 'flex'}}>\r\n                                        <Paper \r\n                                            variant=\"outlined\"\r\n                                            style={{padding:'1em', width: '100%'}}\r\n                                        >\r\n                                            <Typography \r\n                                                variant='subtitle2'\r\n                                                align='left'\r\n                                                style={{textTransform:'capitalize'}}\r\n                                            >\r\n                                                SKUs\r\n                                            </Typography>\r\n                                            <Divider light style={{marginBottom: '.5em'}}/>\r\n                                            <div>\r\n                                                {\r\n                                                    data.skus.map((data, index)=>{\r\n                                                        return (\r\n                                                            <div key={index} style={{display:'flex', flexDirection:'column'}}>\r\n                                                                <Typography key={index} variant='body2' align='left'>\r\n                                                                    {data.name}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.grouper.name} / {data.grouper.maker}\r\n                                                                </Typography>\r\n                                                                <Typography key={index} variant='caption' align='left'>\r\n                                                                    {data.content} {data.unit} / {data.presentation}\r\n                                                                </Typography>\r\n                                                                <Divider light style={{marginBottom: '.5em'}}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport NewData from '../NewData';\r\nimport Category from './Category';\r\n\r\nconst Categories = () => {\r\n\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [waiting, setWaiting] = React.useState(false);\r\n\r\n    return (\r\n        <>\r\n            {waiting?\r\n                <>\r\n                    {\r\n                    categories.map((state, index)=>{\r\n                        return (\r\n                        <div key={index} style={{marginBottom:'1em'}}>\r\n                            <Category\r\n                                data={state}\r\n                            />\r\n                        </div>\r\n                        );\r\n                    })\r\n                    }\r\n                    <div\r\n                        style={{\r\n                            marginTop: '1em'\r\n                        }}\r\n                    >\r\n                        <Stack spacing={2} direction=\"row\">\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={()=>{\r\n                                    setWaiting(false);\r\n                                }}\r\n                            >\r\n                                Agregar otra categoria\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={()=>{\r\n                \r\n                                }}\r\n                            >\r\n                                Finalizar\r\n                            </Button>\r\n                        </Stack>\r\n                    </div>\r\n                </>\r\n            :\r\n                <NewData\r\n                    onUpdate={(data)=>{\r\n                        setCategories([...categories, data])\r\n                    }}\r\n                    onFinish={()=>{\r\n                        setWaiting(true);\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories;","export default __webpack_public_path__ + \"static/media/horus.a67137fc.svg\";","import React from 'react';\r\nimport useMousePosition from '../../Hooks/useMousePosition';\r\nimport { makeStyles } from '@mui/styles';\r\nimport logo from './horus.svg';\r\nimport { display } from '@mui/system';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    cursor: {\r\n        position: 'fixed',\r\n        width: '2em',\r\n        height: '2em',\r\n        //backgroundColor:'red',\r\n        zIndex: '1000000',\r\n        //cursor: 'none'\r\n        //backgroundColor: 'red',\r\n        display: 'flex',\r\n        filter: 'brightness(0)'\r\n    },\r\n}));\r\n\r\nconst CustomCursor = () => {\r\n    const classes = useStyles();\r\n    const { x, y } = useMousePosition();\r\n\r\n    return (\r\n        <div\r\n            style={{ left: `calc(${x}px + .5em)`, top: `calc(${y}px + 1.25em)` }}\r\n            className={classes.cursor}\r\n        >\r\n            <img style={{width:'100%'}} src={logo}/>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default CustomCursor;","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useMousePosition() {\r\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (event) => {\r\n      const { clientX, clientY } = event;\r\n      setMousePosition({ x: clientX, y: clientY });\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n    };\r\n  }, []);\r\n\r\n  return mousePosition;\r\n}\r\n","import React from 'react';\r\nimport Categories from './Pages/Categories';\r\nimport CustomCursor from './Components/CustomCursor';\r\nimport './App.css';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2B9982',\r\n    },\r\n    secondary: {\r\n      main: '#eee'\r\n    }\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <ThemeProvider theme={theme}>\r\n        <CustomCursor/>\r\n        <Categories/>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}